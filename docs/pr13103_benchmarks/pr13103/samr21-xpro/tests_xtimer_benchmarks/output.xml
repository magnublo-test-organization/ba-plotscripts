<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 11:50:56.504" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.754" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:57.770" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:59.698" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:57.749" endtime="20201030 11:50:59.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.705" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:59.702" endtime="20201030 11:50:59.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.746" endtime="20201030 11:50:59.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.712" endtime="20201030 11:51:00.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.709" endtime="20201030 11:51:00.046"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.077" endtime="20201030 11:51:00.100"></status>
</kw>
<msg timestamp="20201030 11:51:00.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.074" endtime="20201030 11:51:00.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.104" endtime="20201030 11:51:00.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.114" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:00.110" endtime="20201030 11:51:00.115"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.067" endtime="20201030 11:51:00.117"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.061" endtime="20201030 11:51:00.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.058" endtime="20201030 11:51:00.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:00.127" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:00.126" endtime="20201030 11:51:00.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.121" endtime="20201030 11:51:00.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.056" endtime="20201030 11:51:00.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.054" endtime="20201030 11:51:00.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.131" endtime="20201030 11:51:00.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.051" endtime="20201030 11:51:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.138" endtime="20201030 11:51:00.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.047" endtime="20201030 11:51:00.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.742" endtime="20201030 11:51:00.144"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.159" endtime="20201030 11:51:00.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.155" endtime="20201030 11:51:00.182"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.217" endtime="20201030 11:51:00.240"></status>
</kw>
<msg timestamp="20201030 11:51:00.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.214" endtime="20201030 11:51:00.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.243" endtime="20201030 11:51:00.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:00.249" endtime="20201030 11:51:00.254"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.207" endtime="20201030 11:51:00.256"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.201" endtime="20201030 11:51:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.197" endtime="20201030 11:51:00.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:00.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:00.265" endtime="20201030 11:51:00.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.260" endtime="20201030 11:51:00.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.195" endtime="20201030 11:51:00.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.192" endtime="20201030 11:51:00.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.270" endtime="20201030 11:51:00.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.188" endtime="20201030 11:51:00.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.184" endtime="20201030 11:51:00.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.152" endtime="20201030 11:51:00.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.295" endtime="20201030 11:51:00.306"></status>
</kw>
<msg timestamp="20201030 11:51:00.307" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.292" endtime="20201030 11:51:00.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.313" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.309" endtime="20201030 11:51:00.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.315" endtime="20201030 11:51:00.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.284" endtime="20201030 11:51:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.280" endtime="20201030 11:51:00.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.333" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:51:00.330" endtime="20201030 11:51:00.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.337" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:51:00.335" endtime="20201030 11:51:00.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.324" endtime="20201030 11:51:00.340"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:00.145" endtime="20201030 11:51:00.342" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:56.772" endtime="20201030 11:51:00.349"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.484" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:00.500" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:02.447" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:00.480" endtime="20201030 11:51:02.449"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.454" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:02.451" endtime="20201030 11:51:02.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.477" endtime="20201030 11:51:02.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.461" endtime="20201030 11:51:02.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.458" endtime="20201030 11:51:02.795"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.824" endtime="20201030 11:51:02.846"></status>
</kw>
<msg timestamp="20201030 11:51:02.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.821" endtime="20201030 11:51:02.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.850" endtime="20201030 11:51:02.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.861" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:02.856" endtime="20201030 11:51:02.862"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:02.814" endtime="20201030 11:51:02.863"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:02.809" endtime="20201030 11:51:02.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.806" endtime="20201030 11:51:02.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:02.874" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:02.872" endtime="20201030 11:51:02.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.867" endtime="20201030 11:51:02.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.804" endtime="20201030 11:51:02.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.803" endtime="20201030 11:51:02.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.877" endtime="20201030 11:51:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.800" endtime="20201030 11:51:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.884" endtime="20201030 11:51:02.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.796" endtime="20201030 11:51:02.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.474" endtime="20201030 11:51:02.890"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.904" endtime="20201030 11:51:02.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.900" endtime="20201030 11:51:02.927"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.024" endtime="20201030 11:51:03.046"></status>
</kw>
<msg timestamp="20201030 11:51:03.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.020" endtime="20201030 11:51:03.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.050" endtime="20201030 11:51:03.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.061" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:03.056" endtime="20201030 11:51:03.062"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.013" endtime="20201030 11:51:03.063"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.006" endtime="20201030 11:51:03.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.942" endtime="20201030 11:51:03.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:03.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:03.072" endtime="20201030 11:51:03.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.067" endtime="20201030 11:51:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.940" endtime="20201030 11:51:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.938" endtime="20201030 11:51:03.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.077" endtime="20201030 11:51:03.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.934" endtime="20201030 11:51:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.929" endtime="20201030 11:51:03.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.897" endtime="20201030 11:51:03.084"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.107" endtime="20201030 11:51:03.118"></status>
</kw>
<msg timestamp="20201030 11:51:03.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.103" endtime="20201030 11:51:03.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.121" endtime="20201030 11:51:03.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.127" endtime="20201030 11:51:03.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.096" endtime="20201030 11:51:03.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.092" endtime="20201030 11:51:03.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.152" endtime="20201030 11:51:03.509"></status>
</kw>
<msg timestamp="20201030 11:51:03.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193277514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193293639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:03.149" endtime="20201030 11:51:03.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193277514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.193293639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:03.519" endtime="20201030 11:51:03.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.537" endtime="20201030 11:51:03.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.142" endtime="20201030 11:51:03.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.136" endtime="20201030 11:51:03.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.555" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000...</msg>
<status status="PASS" starttime="20201030 11:51:03.546" endtime="20201030 11:51:03.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:03.565" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000200265e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:51:03.557" endtime="20201030 11:51:03.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.575" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:03.573" endtime="20201030 11:51:03.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.582" level="INFO">VALUE: [0, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000200265e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.410000000205528e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:03.577" endtime="20201030 11:51:03.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.567" endtime="20201030 11:51:03.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.088" endtime="20201030 11:51:03.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.087" endtime="20201030 11:51:03.586"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.606" endtime="20201030 11:51:03.618"></status>
</kw>
<msg timestamp="20201030 11:51:03.619" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.603" endtime="20201030 11:51:03.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.621" endtime="20201030 11:51:03.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.627" endtime="20201030 11:51:03.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.596" endtime="20201030 11:51:03.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.591" endtime="20201030 11:51:03.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.651" endtime="20201030 11:51:04.018"></status>
</kw>
<msg timestamp="20201030 11:51:04.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193841361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193841833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.647" endtime="20201030 11:51:04.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.193841361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.193841833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.029" endtime="20201030 11:51:04.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.052" endtime="20201030 11:51:04.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.640" endtime="20201030 11:51:04.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.636" endtime="20201030 11:51:04.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.070" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.060" endtime="20201030 11:51:04.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:04.082" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 11:51:04.073" endtime="20201030 11:51:04.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.093" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:04.090" endtime="20201030 11:51:04.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.098" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.410000000205528e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201030 11:51:04.095" endtime="20201030 11:51:04.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.084" endtime="20201030 11:51:04.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.588" endtime="20201030 11:51:04.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.587" endtime="20201030 11:51:04.103"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.123" endtime="20201030 11:51:04.134"></status>
</kw>
<msg timestamp="20201030 11:51:04.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.120" endtime="20201030 11:51:04.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.137" endtime="20201030 11:51:04.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.143" endtime="20201030 11:51:04.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.112" endtime="20201030 11:51:04.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.108" endtime="20201030 11:51:04.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.167" endtime="20201030 11:51:04.522"></status>
</kw>
<msg timestamp="20201030 11:51:04.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.684543931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.684544403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.163" endtime="20201030 11:51:04.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.684543931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.684544403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.533" endtime="20201030 11:51:04.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.555" endtime="20201030 11:51:04.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.156" endtime="20201030 11:51:04.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.152" endtime="20201030 11:51:04.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.575" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 5.410000000205528e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07...</msg>
<status status="PASS" starttime="20201030 11:51:04.564" endtime="20201030 11:51:04.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:04.586" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 5.410000000205528e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.577" endtime="20201030 11:51:04.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.596" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:04.594" endtime="20201030 11:51:04.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.602" level="INFO">VALUE: [4.7199999997360464e-07, 5.410000000205528e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:04.599" endtime="20201030 11:51:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.588" endtime="20201030 11:51:04.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.104" endtime="20201030 11:51:04.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.104" endtime="20201030 11:51:04.606"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.627" endtime="20201030 11:51:04.638"></status>
</kw>
<msg timestamp="20201030 11:51:04.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.623" endtime="20201030 11:51:04.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.641" endtime="20201030 11:51:04.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.647" endtime="20201030 11:51:04.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.616" endtime="20201030 11:51:04.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.611" endtime="20201030 11:51:04.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.672" endtime="20201030 11:51:05.027"></status>
</kw>
<msg timestamp="20201030 11:51:05.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.189865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.189865931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.669" endtime="20201030 11:51:05.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.189865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.189865931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.039" endtime="20201030 11:51:05.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.061" endtime="20201030 11:51:05.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.660" endtime="20201030 11:51:05.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.655" endtime="20201030 11:51:05.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.080" level="INFO">${RESULT} = [{'diff': 4.729999998343004e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:05.070" endtime="20201030 11:51:05.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:05.091" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999998343004e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71999...</msg>
<status status="PASS" starttime="20201030 11:51:05.082" endtime="20201030 11:51:05.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.101" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:05.099" endtime="20201030 11:51:05.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.108" level="INFO">VALUE: [4.729999998343004e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 5.410000001315751e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:05.103" endtime="20201030 11:51:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.092" endtime="20201030 11:51:05.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.608" endtime="20201030 11:51:05.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.607" endtime="20201030 11:51:05.112"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.132" endtime="20201030 11:51:05.143"></status>
</kw>
<msg timestamp="20201030 11:51:05.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.129" endtime="20201030 11:51:05.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.151" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.147" endtime="20201030 11:51:05.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.153" endtime="20201030 11:51:05.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.122" endtime="20201030 11:51:05.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.117" endtime="20201030 11:51:05.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.176" endtime="20201030 11:51:05.530"></status>
</kw>
<msg timestamp="20201030 11:51:05.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.684591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.684591486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.173" endtime="20201030 11:51:05.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.684591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.684591486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.541" endtime="20201030 11:51:05.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.564" endtime="20201030 11:51:05.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.166" endtime="20201030 11:51:05.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.161" endtime="20201030 11:51:05.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.583" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:51:05.573" endtime="20201030 11:51:05.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:05.594" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:05.585" endtime="20201030 11:51:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.605" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:05.602" endtime="20201030 11:51:05.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.610" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 11:51:05.607" endtime="20201030 11:51:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.596" endtime="20201030 11:51:05.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.114" endtime="20201030 11:51:05.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.113" endtime="20201030 11:51:05.615"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.635" endtime="20201030 11:51:05.646"></status>
</kw>
<msg timestamp="20201030 11:51:05.647" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.632" endtime="20201030 11:51:05.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.649" endtime="20201030 11:51:05.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.655" endtime="20201030 11:51:05.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.624" endtime="20201030 11:51:05.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.620" endtime="20201030 11:51:05.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.679" endtime="20201030 11:51:06.053"></status>
</kw>
<msg timestamp="20201030 11:51:06.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.180401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.180402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.675" endtime="20201030 11:51:06.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.180401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.180402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.064" endtime="20201030 11:51:06.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.086" endtime="20201030 11:51:06.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.668" endtime="20201030 11:51:06.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.664" endtime="20201030 11:51:06.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.107" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:51:06.096" endtime="20201030 11:51:06.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:06.117" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 11:51:06.109" endtime="20201030 11:51:06.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.128" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:06.125" endtime="20201030 11:51:06.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.133" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:06.130" endtime="20201030 11:51:06.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.119" endtime="20201030 11:51:06.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.616" endtime="20201030 11:51:06.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.616" endtime="20201030 11:51:06.138"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.158" endtime="20201030 11:51:06.169"></status>
</kw>
<msg timestamp="20201030 11:51:06.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.155" endtime="20201030 11:51:06.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.172" endtime="20201030 11:51:06.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.179" endtime="20201030 11:51:06.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.147" endtime="20201030 11:51:06.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.143" endtime="20201030 11:51:06.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.204" endtime="20201030 11:51:06.586"></status>
</kw>
<msg timestamp="20201030 11:51:06.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.672038431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.672038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.200" endtime="20201030 11:51:06.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.672038431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.672038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.597" endtime="20201030 11:51:06.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.620" endtime="20201030 11:51:06.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.192" endtime="20201030 11:51:06.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.187" endtime="20201030 11:51:06.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.638" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 11:51:06.629" endtime="20201030 11:51:06.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:06.649" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201030 11:51:06.641" endtime="20201030 11:51:06.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.659" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:06.657" endtime="20201030 11:51:06.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.665" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:06.662" endtime="20201030 11:51:06.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.651" endtime="20201030 11:51:06.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.140" endtime="20201030 11:51:06.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.139" endtime="20201030 11:51:06.669"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.691" endtime="20201030 11:51:06.702"></status>
</kw>
<msg timestamp="20201030 11:51:06.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.688" endtime="20201030 11:51:06.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.705" endtime="20201030 11:51:06.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.712" endtime="20201030 11:51:06.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.681" endtime="20201030 11:51:06.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.674" endtime="20201030 11:51:06.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.735" endtime="20201030 11:51:07.116"></status>
</kw>
<msg timestamp="20201030 11:51:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.185182583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.185183056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.732" endtime="20201030 11:51:07.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.185182583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.185183056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.127" endtime="20201030 11:51:07.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.150" endtime="20201030 11:51:07.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.725" endtime="20201030 11:51:07.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.720" endtime="20201030 11:51:07.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.168" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:07.159" endtime="20201030 11:51:07.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:07.180" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:07.170" endtime="20201030 11:51:07.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.190" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:07.188" endtime="20201030 11:51:07.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.196" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:07.192" endtime="20201030 11:51:07.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.182" endtime="20201030 11:51:07.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.671" endtime="20201030 11:51:07.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.670" endtime="20201030 11:51:07.200"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.221" endtime="20201030 11:51:07.232"></status>
</kw>
<msg timestamp="20201030 11:51:07.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.217" endtime="20201030 11:51:07.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.235" endtime="20201030 11:51:07.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.242" endtime="20201030 11:51:07.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.210" endtime="20201030 11:51:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.205" endtime="20201030 11:51:07.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.266" endtime="20201030 11:51:07.633"></status>
</kw>
<msg timestamp="20201030 11:51:07.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.709238153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.709238625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.262" endtime="20201030 11:51:07.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.709238153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.709238625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.644" endtime="20201030 11:51:07.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.667" endtime="20201030 11:51:07.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.255" endtime="20201030 11:51:07.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.250" endtime="20201030 11:51:07.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.685" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:07.675" endtime="20201030 11:51:07.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:07.700" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:51:07.687" endtime="20201030 11:51:07.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.710" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:07.708" endtime="20201030 11:51:07.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.716" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:07.713" endtime="20201030 11:51:07.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.702" endtime="20201030 11:51:07.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.202" endtime="20201030 11:51:07.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.201" endtime="20201030 11:51:07.720"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.740" endtime="20201030 11:51:07.751"></status>
</kw>
<msg timestamp="20201030 11:51:07.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.737" endtime="20201030 11:51:07.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.755" endtime="20201030 11:51:07.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.761" endtime="20201030 11:51:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.730" endtime="20201030 11:51:07.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.725" endtime="20201030 11:51:07.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.784" endtime="20201030 11:51:08.154"></status>
</kw>
<msg timestamp="20201030 11:51:08.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.230133056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.230133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.781" endtime="20201030 11:51:08.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.230133056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.230133528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.166" endtime="20201030 11:51:08.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.189" endtime="20201030 11:51:08.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.774" endtime="20201030 11:51:08.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.769" endtime="20201030 11:51:08.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.207" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:08.197" endtime="20201030 11:51:08.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:08.217" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.209" endtime="20201030 11:51:08.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.227" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:08.225" endtime="20201030 11:51:08.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.233" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:08.230" endtime="20201030 11:51:08.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.219" endtime="20201030 11:51:08.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.722" endtime="20201030 11:51:08.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.721" endtime="20201030 11:51:08.238"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.259" endtime="20201030 11:51:08.270"></status>
</kw>
<msg timestamp="20201030 11:51:08.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.254" endtime="20201030 11:51:08.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.278" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.274" endtime="20201030 11:51:08.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.280" endtime="20201030 11:51:08.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.247" endtime="20201030 11:51:08.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.243" endtime="20201030 11:51:08.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.303" endtime="20201030 11:51:08.677"></status>
</kw>
<msg timestamp="20201030 11:51:08.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.738683222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.738683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.300" endtime="20201030 11:51:08.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.738683222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.738683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.689" endtime="20201030 11:51:08.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.711" endtime="20201030 11:51:08.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.293" endtime="20201030 11:51:08.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.288" endtime="20201030 11:51:08.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.729" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:08.720" endtime="20201030 11:51:08.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:08.741" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.731" endtime="20201030 11:51:08.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.751" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:08.749" endtime="20201030 11:51:08.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.757" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:08.754" endtime="20201030 11:51:08.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.743" endtime="20201030 11:51:08.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.239" endtime="20201030 11:51:08.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.238" endtime="20201030 11:51:08.761"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.781" endtime="20201030 11:51:08.792"></status>
</kw>
<msg timestamp="20201030 11:51:08.794" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.778" endtime="20201030 11:51:08.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.796" endtime="20201030 11:51:08.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.802" endtime="20201030 11:51:08.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.771" endtime="20201030 11:51:08.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.766" endtime="20201030 11:51:08.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.825" endtime="20201030 11:51:09.205"></status>
</kw>
<msg timestamp="20201030 11:51:09.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.246687, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.246687472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:08.822" endtime="20201030 11:51:09.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.246687, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.246687472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:09.217" endtime="20201030 11:51:09.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.240" endtime="20201030 11:51:09.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.815" endtime="20201030 11:51:09.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.810" endtime="20201030 11:51:09.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.258" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:09.248" endtime="20201030 11:51:09.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:09.270" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.260" endtime="20201030 11:51:09.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.280" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:09.278" endtime="20201030 11:51:09.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.286" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:09.283" endtime="20201030 11:51:09.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.272" endtime="20201030 11:51:09.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.763" endtime="20201030 11:51:09.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.762" endtime="20201030 11:51:09.290"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.311" endtime="20201030 11:51:09.322"></status>
</kw>
<msg timestamp="20201030 11:51:09.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.307" endtime="20201030 11:51:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.325" endtime="20201030 11:51:09.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.332" endtime="20201030 11:51:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.300" endtime="20201030 11:51:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.296" endtime="20201030 11:51:09.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.355" endtime="20201030 11:51:09.740"></status>
</kw>
<msg timestamp="20201030 11:51:09.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.757823292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.757823764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.352" endtime="20201030 11:51:09.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.757823292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.757823764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.751" endtime="20201030 11:51:09.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.774" endtime="20201030 11:51:09.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.345" endtime="20201030 11:51:09.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.340" endtime="20201030 11:51:09.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.792" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:51:09.782" endtime="20201030 11:51:09.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:09.802" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:09.794" endtime="20201030 11:51:09.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.812" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:09.810" endtime="20201030 11:51:09.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.818" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:09.815" endtime="20201030 11:51:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.804" endtime="20201030 11:51:09.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.292" endtime="20201030 11:51:09.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.291" endtime="20201030 11:51:09.822"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.843" endtime="20201030 11:51:09.855"></status>
</kw>
<msg timestamp="20201030 11:51:09.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.839" endtime="20201030 11:51:09.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.859" endtime="20201030 11:51:09.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.865" endtime="20201030 11:51:09.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.832" endtime="20201030 11:51:09.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.827" endtime="20201030 11:51:09.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.889" endtime="20201030 11:51:10.262"></status>
</kw>
<msg timestamp="20201030 11:51:10.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.277485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.277485958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.885" endtime="20201030 11:51:10.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.277485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.277485958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.273" endtime="20201030 11:51:10.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.295" endtime="20201030 11:51:10.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.878" endtime="20201030 11:51:10.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.873" endtime="20201030 11:51:10.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.313" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:51:10.304" endtime="20201030 11:51:10.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:10.325" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:10.315" endtime="20201030 11:51:10.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.335" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:10.333" endtime="20201030 11:51:10.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.341" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:10.337" endtime="20201030 11:51:10.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.327" endtime="20201030 11:51:10.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.824" endtime="20201030 11:51:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.823" endtime="20201030 11:51:10.345"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.366" endtime="20201030 11:51:10.377"></status>
</kw>
<msg timestamp="20201030 11:51:10.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.362" endtime="20201030 11:51:10.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.380" endtime="20201030 11:51:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.386" endtime="20201030 11:51:10.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.355" endtime="20201030 11:51:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.350" endtime="20201030 11:51:10.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.410" endtime="20201030 11:51:10.780"></status>
</kw>
<msg timestamp="20201030 11:51:10.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.799848306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.799848778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.407" endtime="20201030 11:51:10.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.799848306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.799848778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.791" endtime="20201030 11:51:10.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.814" endtime="20201030 11:51:10.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.399" endtime="20201030 11:51:10.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.394" endtime="20201030 11:51:10.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.832" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.410000003536197e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201030 11:51:10.822" endtime="20201030 11:51:10.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:10.844" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 11:51:10.834" endtime="20201030 11:51:10.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.854" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:10.852" endtime="20201030 11:51:10.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.860" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:10.856" endtime="20201030 11:51:10.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.846" endtime="20201030 11:51:10.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.347" endtime="20201030 11:51:10.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.346" endtime="20201030 11:51:10.864"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.885" endtime="20201030 11:51:10.896"></status>
</kw>
<msg timestamp="20201030 11:51:10.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.881" endtime="20201030 11:51:10.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.903" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.899" endtime="20201030 11:51:10.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.905" endtime="20201030 11:51:10.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.874" endtime="20201030 11:51:10.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.870" endtime="20201030 11:51:10.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.929" endtime="20201030 11:51:11.310"></status>
</kw>
<msg timestamp="20201030 11:51:11.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.309472639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.309473111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.926" endtime="20201030 11:51:11.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.309472639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.309473111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.322" endtime="20201030 11:51:11.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.344" endtime="20201030 11:51:11.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.919" endtime="20201030 11:51:11.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.913" endtime="20201030 11:51:11.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.362" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 11:51:11.353" endtime="20201030 11:51:11.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:11.373" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 11:51:11.364" endtime="20201030 11:51:11.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.383" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:11.381" endtime="20201030 11:51:11.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.389" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:11.386" endtime="20201030 11:51:11.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.375" endtime="20201030 11:51:11.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.866" endtime="20201030 11:51:11.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.865" endtime="20201030 11:51:11.393"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.414" endtime="20201030 11:51:11.426"></status>
</kw>
<msg timestamp="20201030 11:51:11.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.411" endtime="20201030 11:51:11.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.430" endtime="20201030 11:51:11.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.436" endtime="20201030 11:51:11.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.403" endtime="20201030 11:51:11.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.399" endtime="20201030 11:51:11.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.460" endtime="20201030 11:51:11.844"></status>
</kw>
<msg timestamp="20201030 11:51:11.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.819404514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.819404986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.457" endtime="20201030 11:51:11.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.819404514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.819404986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.855" endtime="20201030 11:51:11.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.877" endtime="20201030 11:51:11.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.450" endtime="20201030 11:51:11.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.445" endtime="20201030 11:51:11.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.895" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:51:11.886" endtime="20201030 11:51:11.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:11.907" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:11.897" endtime="20201030 11:51:11.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:11.915" endtime="20201030 11:51:11.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.923" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999986600033e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999982799882e-07]</msg>
<status status="PASS" starttime="20201030 11:51:11.920" endtime="20201030 11:51:11.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.909" endtime="20201030 11:51:11.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.395" endtime="20201030 11:51:11.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.394" endtime="20201030 11:51:11.927"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.947" endtime="20201030 11:51:11.959"></status>
</kw>
<msg timestamp="20201030 11:51:11.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.944" endtime="20201030 11:51:11.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.962" endtime="20201030 11:51:11.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.969" endtime="20201030 11:51:11.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.937" endtime="20201030 11:51:11.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.932" endtime="20201030 11:51:11.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.992" endtime="20201030 11:51:12.355"></status>
</kw>
<msg timestamp="20201030 11:51:12.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.341074389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.341074861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.989" endtime="20201030 11:51:12.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.341074389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.341074861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.366" endtime="20201030 11:51:12.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.388" endtime="20201030 11:51:12.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.982" endtime="20201030 11:51:12.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.977" endtime="20201030 11:51:12.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.406" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999986600033e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:51:12.396" endtime="20201030 11:51:12.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:12.422" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999986600033e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 11:51:12.408" endtime="20201030 11:51:12.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.432" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:12.430" endtime="20201030 11:51:12.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.438" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999986600033e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999982799882e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999986600033e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:12.435" endtime="20201030 11:51:12.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.424" endtime="20201030 11:51:12.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.929" endtime="20201030 11:51:12.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.928" endtime="20201030 11:51:12.442"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.463" endtime="20201030 11:51:12.474"></status>
</kw>
<msg timestamp="20201030 11:51:12.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.459" endtime="20201030 11:51:12.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.481" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.477" endtime="20201030 11:51:12.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.484" endtime="20201030 11:51:12.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.452" endtime="20201030 11:51:12.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.447" endtime="20201030 11:51:12.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.507" endtime="20201030 11:51:12.872"></status>
</kw>
<msg timestamp="20201030 11:51:12.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.863372347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.863372819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.504" endtime="20201030 11:51:12.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.863372347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.863372819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.884" endtime="20201030 11:51:12.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.906" endtime="20201030 11:51:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.497" endtime="20201030 11:51:12.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.492" endtime="20201030 11:51:12.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.924" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:51:12.914" endtime="20201030 11:51:12.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:12.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:51:12.926" endtime="20201030 11:51:12.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.944" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:12.942" endtime="20201030 11:51:12.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.950" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 11:51:12.947" endtime="20201030 11:51:12.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.936" endtime="20201030 11:51:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.444" endtime="20201030 11:51:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.443" endtime="20201030 11:51:12.955"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.975" endtime="20201030 11:51:12.987"></status>
</kw>
<msg timestamp="20201030 11:51:12.988" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.971" endtime="20201030 11:51:12.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.995" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.991" endtime="20201030 11:51:12.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.997" endtime="20201030 11:51:13.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.964" endtime="20201030 11:51:13.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.960" endtime="20201030 11:51:13.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.021" endtime="20201030 11:51:13.388"></status>
</kw>
<msg timestamp="20201030 11:51:13.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.368540764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.368541236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.017" endtime="20201030 11:51:13.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.368540764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.368541236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.400" endtime="20201030 11:51:13.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.422" endtime="20201030 11:51:13.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.010" endtime="20201030 11:51:13.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.006" endtime="20201030 11:51:13.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.440" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201030 11:51:13.431" endtime="20201030 11:51:13.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:13.452" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:51:13.442" endtime="20201030 11:51:13.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.462" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:51:13.460" endtime="20201030 11:51:13.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.468" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999985772629e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:51:13.465" endtime="20201030 11:51:13.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.454" endtime="20201030 11:51:13.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.956" endtime="20201030 11:51:13.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.955" endtime="20201030 11:51:13.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.085" endtime="20201030 11:51:13.473"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:02.891" endtime="20201030 11:51:13.475" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.493" endtime="20201030 11:51:13.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.489" endtime="20201030 11:51:13.516"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.550" endtime="20201030 11:51:13.572"></status>
</kw>
<msg timestamp="20201030 11:51:13.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.547" endtime="20201030 11:51:13.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.576" endtime="20201030 11:51:13.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.586" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:13.582" endtime="20201030 11:51:13.587"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:13.540" endtime="20201030 11:51:13.589"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:13.533" endtime="20201030 11:51:13.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.531" endtime="20201030 11:51:13.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:13.599" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:13.598" endtime="20201030 11:51:13.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.593" endtime="20201030 11:51:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.529" endtime="20201030 11:51:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.527" endtime="20201030 11:51:13.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.603" endtime="20201030 11:51:13.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.522" endtime="20201030 11:51:13.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.518" endtime="20201030 11:51:13.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.486" endtime="20201030 11:51:13.610"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.635" endtime="20201030 11:51:13.647"></status>
</kw>
<msg timestamp="20201030 11:51:13.648" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.631" endtime="20201030 11:51:13.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.650" endtime="20201030 11:51:13.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.656" endtime="20201030 11:51:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.622" endtime="20201030 11:51:13.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.617" endtime="20201030 11:51:13.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.680" endtime="20201030 11:51:14.039"></status>
</kw>
<msg timestamp="20201030 11:51:14.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132586819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.677" endtime="20201030 11:51:14.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132586819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.050" endtime="20201030 11:51:14.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.070" endtime="20201030 11:51:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.669" endtime="20201030 11:51:14.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.665" endtime="20201030 11:51:14.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.088" level="INFO">${RESULT} = [{'diff': 9.207999999982786e-06}, {'diff': 8.542000000000272e-06}, {'diff': 9.04099999998742e-06}, {'diff': 8.402999999990168e-06}, {'diff': 9.055999999979525e-06}, {'diff': 8.721999999988794e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:14.079" endtime="20201030 11:51:14.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:14.097" level="INFO">${OVERHEAD} = {'diff': [9.207999999982786e-06, 8.542000000000272e-06, 9.04099999998742e-06, 8.402999999990168e-06, 9.055999999979525e-06, 8.721999999988794e-06, 8.569999999985534e-06, 8.736000000009181e-06, 8.73599...</msg>
<status status="PASS" starttime="20201030 11:51:14.090" endtime="20201030 11:51:14.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.107" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:14.105" endtime="20201030 11:51:14.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.115" level="INFO">VALUE: [9.207999999982786e-06, 8.542000000000272e-06, 9.04099999998742e-06, 8.402999999990168e-06, 9.055999999979525e-06, 8.721999999988794e-06, 8.569999999985534e-06, 8.736000000009181e-06, 8.735999999981425e-06, 8.401999999990695e-06, 9.097000000013455e-06, 8.750000000001812e-06, 8.596999999999078e-06, 8.569000000013816e-06, 8.555999999992903e-06, 9.235999999995803e-06, 8.736000000009181e-06, 8.45800000001673e-06, 8.569000000013816e-06, 8.735999999981425e-06, 8.556000000020658e-06, 9.028000000022018e-06, 9.388999999998537e-06, 8.903000000004546e-06, 9.235999999995803e-06, 8.403000000017924e-06, 9.054999999980051e-06, 9.069000000000438e-06, 9.083999999992542e-06, 9.249999999988434e-06, 9.069000000000438e-06, 8.88899999998416e-06, 9.403000000018924e-06, 8.721999999988794e-06, 9.124999999998717e-06, 8.417000000010555e-06, 8.542000000000272e-06, 9.111000000006086e-06, 8.569000000013816e-06, 9.05600000000728e-06, 9.069000000000438e-06, 9.055000000007807e-06, 9.430000000004712e-06, 9.222000000003172e-06, 9.04099999998742e-06, 8.903000000004546e-06, 9.236000000023559e-06, 8.388999999997537e-06, 8.403000000017924e-06, 9.207999999982786e-06]</msg>
<status status="PASS" starttime="20201030 11:51:14.111" endtime="20201030 11:51:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.099" endtime="20201030 11:51:14.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.614" endtime="20201030 11:51:14.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.613" endtime="20201030 11:51:14.119"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.140" endtime="20201030 11:51:14.154"></status>
</kw>
<msg timestamp="20201030 11:51:14.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.136" endtime="20201030 11:51:14.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.157" endtime="20201030 11:51:14.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.164" endtime="20201030 11:51:14.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.129" endtime="20201030 11:51:14.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.124" endtime="20201030 11:51:14.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.187" endtime="20201030 11:51:14.568"></status>
</kw>
<msg timestamp="20201030 11:51:14.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13317875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.184" endtime="20201030 11:51:14.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13317875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.580" endtime="20201030 11:51:14.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.603" endtime="20201030 11:51:14.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.177" endtime="20201030 11:51:14.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.172" endtime="20201030 11:51:14.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.621" level="INFO">${RESULT} = [{'diff': 8.542000000000272e-06}, {'diff': 9.111000000006086e-06}, {'diff': 8.569000000013816e-06}, {'diff': 9.05600000000728e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.055000000007807e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:14.611" endtime="20201030 11:51:14.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:14.633" level="INFO">${OVERHEAD} = {'diff': [8.542000000000272e-06, 9.111000000006086e-06, 8.569000000013816e-06, 9.05600000000728e-06, 9.069000000000438e-06, 9.055000000007807e-06, 9.430000000004712e-06, 9.222000000003172e-06, 9.04099...</msg>
<status status="PASS" starttime="20201030 11:51:14.623" endtime="20201030 11:51:14.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.643" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:14.641" endtime="20201030 11:51:14.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.649" level="INFO">VALUE: [8.542000000000272e-06, 9.111000000006086e-06, 8.569000000013816e-06, 9.05600000000728e-06, 9.069000000000438e-06, 9.055000000007807e-06, 9.430000000004712e-06, 9.222000000003172e-06, 9.04099999998742e-06, 8.903000000004546e-06, 9.236000000023559e-06, 8.388999999997537e-06, 8.403000000017924e-06, 9.207999999982786e-06, 9.068999999972682e-06, 9.041999999959138e-06, 9.070000000055423e-06, 8.73599999995367e-06, 9.236000000023559e-06, 9.389000000026293e-06, 9.070000000055423e-06, 8.52799999995213e-06, 8.348000000046873e-06, 9.070000000055423e-06, 8.388999999997537e-06, 9.319000000007627e-06, 8.889000000067426e-06, 8.375000000060417e-06, 8.72200000001655e-06, 8.388999999997537e-06, 9.389000000026293e-06, 9.235999999912536e-06, 8.62499999998434e-06, 9.402999999963413e-06, 8.555999999937391e-06, 8.903000000004546e-06, 8.889000000067426e-06, 9.235999999912536e-06, 9.236000000023559e-06, 9.235999999912536e-06, 8.971999999940472e-06, 9.05600000000728e-06, 9.222999999947135e-06, 8.736000000064692e-06, 8.569999999985534e-06, 8.708999999940126e-06, 9.402999999963413e-06, 8.84800000000574e-06, 8.736000000064692e-06, 8.582999999950935e-06, 9.223000000058157e-06, 8.40300000004568e-06, 9.236000000023559e-06, 9.291999999994083e-06, 8.569000000013816e-06, 8.72200000001655e-06, 9.068999999972682e-06, 8.72200000001655e-06, 8.569000000013816e-06, 9.041999999959138e-06, 8.888999999956404e-06, 8.73599999995367e-06, 9.235999999912536e-06, 8.542000000000272e-06]</msg>
<status status="PASS" starttime="20201030 11:51:14.646" endtime="20201030 11:51:14.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.635" endtime="20201030 11:51:14.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.121" endtime="20201030 11:51:14.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.120" endtime="20201030 11:51:14.653"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.674" endtime="20201030 11:51:14.688"></status>
</kw>
<msg timestamp="20201030 11:51:14.689" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.671" endtime="20201030 11:51:14.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.691" endtime="20201030 11:51:14.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.698" endtime="20201030 11:51:14.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.663" endtime="20201030 11:51:14.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.659" endtime="20201030 11:51:14.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.721" endtime="20201030 11:51:15.100"></status>
</kw>
<msg timestamp="20201030 11:51:15.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.630470958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.630480181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.718" endtime="20201030 11:51:15.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.630470958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.630480181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.111" endtime="20201030 11:51:15.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.134" endtime="20201030 11:51:15.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.711" endtime="20201030 11:51:15.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.706" endtime="20201030 11:51:15.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.154" level="INFO">${RESULT} = [{'diff': 9.223000000058157e-06}, {'diff': 8.40300000004568e-06}, {'diff': 9.236000000023559e-06}, {'diff': 9.291999999994083e-06}, {'diff': 8.569000000013816e-06}, {'diff': 8.72200000001655e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:15.143" endtime="20201030 11:51:15.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:15.165" level="INFO">${OVERHEAD} = {'diff': [9.223000000058157e-06, 8.40300000004568e-06, 9.236000000023559e-06, 9.291999999994083e-06, 8.569000000013816e-06, 8.72200000001655e-06, 9.068999999972682e-06, 8.72200000001655e-06, 8.5690000...</msg>
<status status="PASS" starttime="20201030 11:51:15.156" endtime="20201030 11:51:15.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.175" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:15.173" endtime="20201030 11:51:15.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.181" level="INFO">VALUE: [9.223000000058157e-06, 8.40300000004568e-06, 9.236000000023559e-06, 9.291999999994083e-06, 8.569000000013816e-06, 8.72200000001655e-06, 9.068999999972682e-06, 8.72200000001655e-06, 8.569000000013816e-06, 9.041999999959138e-06, 8.888999999956404e-06, 8.73599999995367e-06, 9.235999999912536e-06, 8.542000000000272e-06, 9.04200000007016e-06, 9.235999999912536e-06, 8.889000000067426e-06, 8.902999999893524e-06, 9.06899999986166e-06, 8.736000000064692e-06, 8.888999999845382e-06, 8.708000000190452e-06, 9.235999999912536e-06, 8.74999999989079e-06, 9.056000000118303e-06, 9.278000000056963e-06, 9.16699999997661e-06, 8.569999999874511e-06, 8.583000000061958e-06, 9.235999999912536e-06, 8.903000000115568e-06, 9.292000000105105e-06, 8.569999999874511e-06, 8.556000000048414e-06, 9.361000000041031e-06, 8.903000000115568e-06, 8.916999999941666e-06, 9.374999999867129e-06, 8.736000000064692e-06, 8.374999999949395e-06, 8.554999999965673e-06, 8.87499999979724e-06, 9.249999999960679e-06, 8.736000000064692e-06, 9.236000000134581e-06, 9.221999999864394e-06, 8.513999999903987e-06, 9.401999999880672e-06, 8.596999999888055e-06, 9.069000000083705e-06, 8.888999999845382e-06, 8.903000000115568e-06, 8.582999999839913e-06, 9.235999999912536e-06, 8.556000000048414e-06, 9.04200000007016e-06, 9.402999999963413e-06, 8.540999999917531e-06, 8.888999999845382e-06, 9.402999999963413e-06, 8.569000000013816e-06, 9.235999999912536e-06, 8.583000000061958e-06, 8.680000000094168e-06]</msg>
<status status="PASS" starttime="20201030 11:51:15.177" endtime="20201030 11:51:15.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.167" endtime="20201030 11:51:15.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.655" endtime="20201030 11:51:15.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.654" endtime="20201030 11:51:15.185"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.206" endtime="20201030 11:51:15.220"></status>
</kw>
<msg timestamp="20201030 11:51:15.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.203" endtime="20201030 11:51:15.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.223" endtime="20201030 11:51:15.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.230" endtime="20201030 11:51:15.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.195" endtime="20201030 11:51:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.190" endtime="20201030 11:51:15.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.255" endtime="20201030 11:51:15.624"></status>
</kw>
<msg timestamp="20201030 11:51:15.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.154606014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.154614903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.251" endtime="20201030 11:51:15.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.154606014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.154614903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.636" endtime="20201030 11:51:15.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.659" endtime="20201030 11:51:15.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.242" endtime="20201030 11:51:15.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.238" endtime="20201030 11:51:15.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.677" level="INFO">${RESULT} = [{'diff': 8.888999999845382e-06}, {'diff': 8.903000000115568e-06}, {'diff': 8.582999999839913e-06}, {'diff': 9.235999999912536e-06}, {'diff': 8.556000000048414e-06}, {'diff': 9.04200000007016e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:15.667" endtime="20201030 11:51:15.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:15.688" level="INFO">${OVERHEAD} = {'diff': [8.888999999845382e-06, 8.903000000115568e-06, 8.582999999839913e-06, 9.235999999912536e-06, 8.556000000048414e-06, 9.04200000007016e-06, 9.402999999963413e-06, 8.540999999917531e-06, 8.88899...</msg>
<status status="PASS" starttime="20201030 11:51:15.679" endtime="20201030 11:51:15.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.698" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:15.695" endtime="20201030 11:51:15.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.703" level="INFO">VALUE: [8.888999999845382e-06, 8.903000000115568e-06, 8.582999999839913e-06, 9.235999999912536e-06, 8.556000000048414e-06, 9.04200000007016e-06, 9.402999999963413e-06, 8.540999999917531e-06, 8.888999999845382e-06, 9.402999999963413e-06, 8.569000000013816e-06, 9.235999999912536e-06, 8.583000000061958e-06, 8.680000000094168e-06, 9.209000000121037e-06, 9.26400000000882e-06, 9.069000000083705e-06, 8.388999999997537e-06, 8.777999999987074e-06, 8.721999999794505e-06, 8.569000000013816e-06, 8.638000000171786e-06, 9.181000000024753e-06, 9.056000000118303e-06, 9.236999999995277e-06, 9.208000000038297e-06, 8.401999999962939e-06, 8.55599999982637e-06, 8.52799999995213e-06, 9.235999999912536e-06, 8.542000000000272e-06, 8.707999999968408e-06, 8.735999999842647e-06, 9.069000000083705e-06, 8.875000000019284e-06, 8.388999999997537e-06, 9.069000000083705e-06, 8.5970000001101e-06, 9.06899999986166e-06, 8.556000000048414e-06, 9.056000000118303e-06, 8.736000000064692e-06, 9.152999999928468e-06, 9.082999999909802e-06, 9.069000000083705e-06, 8.91600000008097e-06, 8.889000000067426e-06, 8.930000000129112e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.082999999909802e-06, 8.40300000004568e-06, 9.209000000121037e-06, 8.737000000147432e-06, 9.402999999963413e-06, 9.249999999960679e-06, 9.04099999998742e-06, 8.5970000001101e-06, 8.556000000048414e-06, 8.457999999933463e-06, 8.709000000051148e-06, 8.556000000048414e-06, 8.903000000115568e-06, 8.846999999923e-06]</msg>
<status status="PASS" starttime="20201030 11:51:15.700" endtime="20201030 11:51:15.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.689" endtime="20201030 11:51:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.187" endtime="20201030 11:51:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.186" endtime="20201030 11:51:15.708"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.730" endtime="20201030 11:51:15.744"></status>
</kw>
<msg timestamp="20201030 11:51:15.745" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.727" endtime="20201030 11:51:15.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.747" endtime="20201030 11:51:15.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.753" endtime="20201030 11:51:15.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.719" endtime="20201030 11:51:15.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.713" endtime="20201030 11:51:15.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.777" endtime="20201030 11:51:16.151"></status>
</kw>
<msg timestamp="20201030 11:51:16.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.676475917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.676485, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:15.774" endtime="20201030 11:51:16.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.676475917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.676485, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:16.163" endtime="20201030 11:51:16.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.186" endtime="20201030 11:51:16.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.766" endtime="20201030 11:51:16.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.762" endtime="20201030 11:51:16.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.204" level="INFO">${RESULT} = [{'diff': 9.082999999909802e-06}, {'diff': 8.40300000004568e-06}, {'diff': 9.209000000121037e-06}, {'diff': 8.737000000147432e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.249999999960679e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:16.194" endtime="20201030 11:51:16.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:16.216" level="INFO">${OVERHEAD} = {'diff': [9.082999999909802e-06, 8.40300000004568e-06, 9.209000000121037e-06, 8.737000000147432e-06, 9.402999999963413e-06, 9.249999999960679e-06, 9.04099999998742e-06, 8.5970000001101e-06, 8.55600000...</msg>
<status status="PASS" starttime="20201030 11:51:16.206" endtime="20201030 11:51:16.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:16.224" endtime="20201030 11:51:16.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.232" level="INFO">VALUE: [9.082999999909802e-06, 8.40300000004568e-06, 9.209000000121037e-06, 8.737000000147432e-06, 9.402999999963413e-06, 9.249999999960679e-06, 9.04099999998742e-06, 8.5970000001101e-06, 8.556000000048414e-06, 8.457999999933463e-06, 8.709000000051148e-06, 8.556000000048414e-06, 8.903000000115568e-06, 8.846999999923e-06, 8.583000000061958e-06, 8.554999999965673e-06, 8.388999999997537e-06, 9.235999999912536e-06, 8.903000000337613e-06, 8.736999999925388e-06, 9.389000000137315e-06, 9.250000000182723e-06, 8.554999999965673e-06, 9.06900000030575e-06, 9.277999999834918e-06, 8.388999999997537e-06, 8.999999999925734e-06, 8.889000000067426e-06, 8.556000000048414e-06, 9.028000000022018e-06, 8.750000000112834e-06, 9.082999999687758e-06, 8.736999999925388e-06, 9.235999999912536e-06, 9.250000000182723e-06, 8.695000000003006e-06, 9.249999999738634e-06, 9.208999999898992e-06, 8.402999999823635e-06, 8.902000000254873e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.181000000246797e-06, 9.458000000073241e-06, 8.556000000048414e-06, 8.72200000001655e-06, 9.402999999963413e-06, 8.5700000003186e-06, 8.889000000067426e-06, 8.81900000004876e-06, 8.848000000227785e-06, 8.902999999893524e-06, 9.388000000054575e-06, 8.875000000241329e-06, 9.277999999834918e-06, 9.401999999880672e-06, 8.583999999700609e-06, 8.361999999983993e-06, 8.556000000048414e-06, 8.387999999914797e-06, 8.77799999976503e-06, 8.902999999893524e-06, 8.388999999997537e-06, 8.37500000017144e-06]</msg>
<status status="PASS" starttime="20201030 11:51:16.229" endtime="20201030 11:51:16.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.218" endtime="20201030 11:51:16.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.710" endtime="20201030 11:51:16.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.709" endtime="20201030 11:51:16.236"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.257" endtime="20201030 11:51:16.271"></status>
</kw>
<msg timestamp="20201030 11:51:16.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.253" endtime="20201030 11:51:16.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.274" endtime="20201030 11:51:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.280" endtime="20201030 11:51:16.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.246" endtime="20201030 11:51:16.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.242" endtime="20201030 11:51:16.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.304" endtime="20201030 11:51:16.694"></status>
</kw>
<msg timestamp="20201030 11:51:16.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.190586458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.190595306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.301" endtime="20201030 11:51:16.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.190586458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.190595306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.706" endtime="20201030 11:51:16.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.729" endtime="20201030 11:51:16.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.293" endtime="20201030 11:51:16.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.289" endtime="20201030 11:51:16.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.747" level="INFO">${RESULT} = [{'diff': 8.848000000227785e-06}, {'diff': 8.902999999893524e-06}, {'diff': 9.388000000054575e-06}, {'diff': 8.875000000241329e-06}, {'diff': 9.277999999834918e-06}, {'diff': 9.401999999880672e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:16.737" endtime="20201030 11:51:16.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:16.759" level="INFO">${OVERHEAD} = {'diff': [8.848000000227785e-06, 8.902999999893524e-06, 9.388000000054575e-06, 8.875000000241329e-06, 9.277999999834918e-06, 9.401999999880672e-06, 8.583999999700609e-06, 8.361999999983993e-06, 8.5560...</msg>
<status status="PASS" starttime="20201030 11:51:16.749" endtime="20201030 11:51:16.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:16.767" endtime="20201030 11:51:16.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.775" level="INFO">VALUE: [8.848000000227785e-06, 8.902999999893524e-06, 9.388000000054575e-06, 8.875000000241329e-06, 9.277999999834918e-06, 9.401999999880672e-06, 8.583999999700609e-06, 8.361999999983993e-06, 8.556000000048414e-06, 8.387999999914797e-06, 8.77799999976503e-06, 8.902999999893524e-06, 8.388999999997537e-06, 8.37500000017144e-06, 8.889000000067426e-06, 9.040999999765376e-06, 8.750000000112834e-06, 9.222000000086439e-06, 8.792000000035216e-06, 8.554999999965673e-06, 8.735999999842647e-06, 9.028000000022018e-06, 8.902000000254873e-06, 9.056000000118303e-06, 8.388999999997537e-06, 9.055000000035562e-06, 9.249999999738634e-06, 9.056000000118303e-06, 8.901999999810783e-06, 9.222000000086439e-06, 9.22199999964235e-06, 8.889000000067426e-06, 9.16699999997661e-06, 8.735999999842647e-06, 8.72200000001655e-06, 8.541999999778227e-06, 9.235999999912536e-06, 8.72200000001655e-06, 8.737000000369477e-06, 8.916999999719621e-06, 9.22199999964235e-06, 8.37499999972735e-06, 9.41599999970677e-06, 8.805000000222662e-06, 8.388000000358886e-06, 9.235999999912536e-06, 8.556000000048414e-06, 8.889000000067426e-06, 8.763999999938932e-06, 8.736000000286737e-06, 9.110999999784042e-06, 8.402999999823635e-06, 8.889000000067426e-06, 8.902999999893524e-06, 8.72200000001655e-06, 9.16600000033796e-06, 8.361000000345342e-06, 9.249999999738634e-06, 8.583000000061958e-06, 8.403000000267724e-06, 9.208999999898992e-06, 9.055999999674214e-06, 8.888999999623337e-06, 8.401999999740895e-06]</msg>
<status status="PASS" starttime="20201030 11:51:16.772" endtime="20201030 11:51:16.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.761" endtime="20201030 11:51:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.238" endtime="20201030 11:51:16.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.237" endtime="20201030 11:51:16.780"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.800" endtime="20201030 11:51:16.814"></status>
</kw>
<msg timestamp="20201030 11:51:16.815" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.797" endtime="20201030 11:51:16.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.817" endtime="20201030 11:51:16.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.824" endtime="20201030 11:51:16.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.789" endtime="20201030 11:51:16.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.785" endtime="20201030 11:51:16.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.847" endtime="20201030 11:51:17.248"></status>
</kw>
<msg timestamp="20201030 11:51:17.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.707554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.707564083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.844" endtime="20201030 11:51:17.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.707554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.707564083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.259" endtime="20201030 11:51:17.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.282" endtime="20201030 11:51:17.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.837" endtime="20201030 11:51:17.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.832" endtime="20201030 11:51:17.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.301" level="INFO">${RESULT} = [{'diff': 9.110999999784042e-06}, {'diff': 8.402999999823635e-06}, {'diff': 8.889000000067426e-06}, {'diff': 8.902999999893524e-06}, {'diff': 8.72200000001655e-06}, {'diff': 9.16600000033796e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:17.291" endtime="20201030 11:51:17.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:17.312" level="INFO">${OVERHEAD} = {'diff': [9.110999999784042e-06, 8.402999999823635e-06, 8.889000000067426e-06, 8.902999999893524e-06, 8.72200000001655e-06, 9.16600000033796e-06, 8.361000000345342e-06, 9.249999999738634e-06, 8.583000...</msg>
<status status="PASS" starttime="20201030 11:51:17.303" endtime="20201030 11:51:17.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:17.320" endtime="20201030 11:51:17.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.330" level="INFO">VALUE: [9.110999999784042e-06, 8.402999999823635e-06, 8.889000000067426e-06, 8.902999999893524e-06, 8.72200000001655e-06, 9.16600000033796e-06, 8.361000000345342e-06, 9.249999999738634e-06, 8.583000000061958e-06, 8.403000000267724e-06, 9.208999999898992e-06, 9.055999999674214e-06, 8.888999999623337e-06, 8.401999999740895e-06, 8.903000000337613e-06, 9.208999999898992e-06, 9.402999999963413e-06, 8.555000000409763e-06, 8.72200000001655e-06, 9.082999999687758e-06, 9.235999999912536e-06, 9.083000000131847e-06, 9.222000000086439e-06, 8.582999999617869e-06, 9.387999999610486e-06, 9.055000000035562e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.402999999963413e-06, 8.8200000001315e-06, 8.416000000011081e-06, 8.513999999681943e-06, 8.889000000067426e-06, 8.736999999925388e-06, 8.72300000009929e-06, 8.486000000029748e-06, 8.388999999997537e-06, 8.513999999681943e-06, 9.06899999986166e-06, 8.583000000061958e-06, 8.902999999893524e-06, 8.735999999842647e-06, 9.222000000086439e-06, 9.056000000118303e-06, 8.888999999623337e-06, 8.541999999778227e-06, 8.902999999893524e-06, 8.402999999823635e-06, 9.207999999816252e-06, 8.72200000001655e-06, 8.56900000023586e-06, 8.556000000048414e-06, 9.055999999674214e-06, 8.583999999700609e-06, 9.06900000030575e-06, 8.514000000126032e-06, 9.236000000356626e-06, 9.235999999912536e-06, 8.763999999938932e-06, 8.388999999997537e-06, 9.207999999816252e-06, 9.06899999986166e-06, 8.554999999965673e-06, 8.889000000067426e-06]</msg>
<status status="PASS" starttime="20201030 11:51:17.326" endtime="20201030 11:51:17.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.313" endtime="20201030 11:51:17.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.781" endtime="20201030 11:51:17.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.781" endtime="20201030 11:51:17.335"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.357" endtime="20201030 11:51:17.371"></status>
</kw>
<msg timestamp="20201030 11:51:17.372" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.352" endtime="20201030 11:51:17.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.374" endtime="20201030 11:51:17.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.381" endtime="20201030 11:51:17.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.345" endtime="20201030 11:51:17.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.340" endtime="20201030 11:51:17.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.406" endtime="20201030 11:51:17.790"></status>
</kw>
<msg timestamp="20201030 11:51:17.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.241628542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.241637111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.402" endtime="20201030 11:51:17.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.241628542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.241637111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.801" endtime="20201030 11:51:17.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.824" endtime="20201030 11:51:17.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.394" endtime="20201030 11:51:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.389" endtime="20201030 11:51:17.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.842" level="INFO">${RESULT} = [{'diff': 8.56900000023586e-06}, {'diff': 8.556000000048414e-06}, {'diff': 9.055999999674214e-06}, {'diff': 8.583999999700609e-06}, {'diff': 9.06900000030575e-06}, {'diff': 8.514000000126032e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:17.832" endtime="20201030 11:51:17.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:17.854" level="INFO">${OVERHEAD} = {'diff': [8.56900000023586e-06, 8.556000000048414e-06, 9.055999999674214e-06, 8.583999999700609e-06, 9.06900000030575e-06, 8.514000000126032e-06, 9.236000000356626e-06, 9.235999999912536e-06, 8.763999...</msg>
<status status="PASS" starttime="20201030 11:51:17.844" endtime="20201030 11:51:17.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.864" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:17.862" endtime="20201030 11:51:17.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.870" level="INFO">VALUE: [8.56900000023586e-06, 8.556000000048414e-06, 9.055999999674214e-06, 8.583999999700609e-06, 9.06900000030575e-06, 8.514000000126032e-06, 9.236000000356626e-06, 9.235999999912536e-06, 8.763999999938932e-06, 8.388999999997537e-06, 9.207999999816252e-06, 9.06899999986166e-06, 8.554999999965673e-06, 8.889000000067426e-06, 9.222000000086439e-06, 8.556000000048414e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236000000356626e-06, 8.569999999874511e-06, 9.389000000137315e-06, 8.665999999823981e-06, 8.792000000035216e-06, 8.556000000048414e-06, 8.903000000337613e-06, 8.903000000337613e-06, 9.056000000118303e-06, 9.388999999693226e-06, 8.735999999842647e-06, 8.903000000337613e-06, 9.056000000118303e-06, 9.235999999912536e-06, 8.736000000286737e-06, 9.083999999770498e-06, 9.222000000086439e-06, 8.902999999893524e-06, 8.486000000029748e-06, 8.56900000023586e-06, 8.887999999984686e-06, 9.06900000030575e-06, 8.37500000017144e-06, 9.209000000343082e-06, 8.417000000093822e-06, 8.388999999997537e-06, 9.249999999738634e-06, 9.06899999986166e-06, 8.750000000112834e-06, 9.235999999912536e-06, 9.235999999912536e-06, 8.542000000222316e-06, 9.249999999738634e-06, 8.736000000286737e-06, 9.084000000214587e-06, 8.444000000107366e-06, 9.06899999986166e-06, 9.139000000324415e-06, 8.735999999842647e-06, 8.750000000112834e-06, 9.06899999986166e-06, 8.680000000094168e-06, 8.902999999893524e-06, 8.556000000048414e-06, 9.235999999912536e-06, 8.735999999842647e-06]</msg>
<status status="PASS" starttime="20201030 11:51:17.867" endtime="20201030 11:51:17.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.856" endtime="20201030 11:51:17.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.336" endtime="20201030 11:51:17.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.335" endtime="20201030 11:51:17.874"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.895" endtime="20201030 11:51:17.909"></status>
</kw>
<msg timestamp="20201030 11:51:17.910" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.892" endtime="20201030 11:51:17.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.912" endtime="20201030 11:51:17.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.919" endtime="20201030 11:51:17.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.884" endtime="20201030 11:51:17.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.879" endtime="20201030 11:51:17.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.943" endtime="20201030 11:51:18.330"></status>
</kw>
<msg timestamp="20201030 11:51:18.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.789180528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.789189778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.940" endtime="20201030 11:51:18.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.789180528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.789189778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.341" endtime="20201030 11:51:18.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.364" endtime="20201030 11:51:18.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.931" endtime="20201030 11:51:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.927" endtime="20201030 11:51:18.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.382" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 8.736000000286737e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.444000000107366e-06}, {'diff': 9.06899999986166e-06}, {'diff': 9.139000000324415e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:18.373" endtime="20201030 11:51:18.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:18.395" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 8.736000000286737e-06, 9.084000000214587e-06, 8.444000000107366e-06, 9.06899999986166e-06, 9.139000000324415e-06, 8.735999999842647e-06, 8.750000000112834e-06, 9.06899...</msg>
<status status="PASS" starttime="20201030 11:51:18.384" endtime="20201030 11:51:18.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.405" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:18.403" endtime="20201030 11:51:18.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.411" level="INFO">VALUE: [9.249999999738634e-06, 8.736000000286737e-06, 9.084000000214587e-06, 8.444000000107366e-06, 9.06899999986166e-06, 9.139000000324415e-06, 8.735999999842647e-06, 8.750000000112834e-06, 9.06899999986166e-06, 8.680000000094168e-06, 8.902999999893524e-06, 8.556000000048414e-06, 9.235999999912536e-06, 8.735999999842647e-06, 8.556000000048414e-06, 9.222000000086439e-06, 8.402999999823635e-06, 9.346999999770844e-06, 8.402999999823635e-06, 9.249999999738634e-06, 9.237000000439366e-06, 8.735999999842647e-06, 8.37500000017144e-06, 9.194999999628806e-06, 8.875000000685418e-06, 9.0699999999444e-06, 9.054999999591473e-06, 9.194999999628806e-06, 9.208999999898992e-06, 9.236000000356626e-06, 8.72199999957246e-06, 8.583999999700609e-06, 9.055999999674214e-06, 9.06899999986166e-06, 9.06899999986166e-06, 9.097000000402033e-06, 8.819999999687411e-06, 8.792000000035216e-06, 8.722000000460639e-06, 8.556000000048414e-06, 9.235999999468447e-06, 8.903000000337613e-06, 9.013999999751832e-06, 9.235999999468447e-06, 8.486000000473837e-06, 8.722999999655201e-06, 8.402999999823635e-06, 8.889000000067426e-06, 8.388000000358886e-06, 8.680000000538257e-06, 9.207999999816252e-06, 9.084000000214587e-06, 9.0699999999444e-06, 9.222000000086439e-06, 8.889000000067426e-06, 8.554999999965673e-06, 8.569999999430422e-06, 9.431000000503786e-06, 8.611000000158242e-06, 8.388999999553448e-06, 8.596999999888055e-06, 8.722999999655201e-06, 8.583000000506047e-06, 8.389000000441627e-06]</msg>
<status status="PASS" starttime="20201030 11:51:18.407" endtime="20201030 11:51:18.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.397" endtime="20201030 11:51:18.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.876" endtime="20201030 11:51:18.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.875" endtime="20201030 11:51:18.415"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.437" endtime="20201030 11:51:18.451"></status>
</kw>
<msg timestamp="20201030 11:51:18.452" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.433" endtime="20201030 11:51:18.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.454" endtime="20201030 11:51:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.461" endtime="20201030 11:51:18.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.425" endtime="20201030 11:51:18.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.420" endtime="20201030 11:51:18.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.485" endtime="20201030 11:51:18.879"></status>
</kw>
<msg timestamp="20201030 11:51:18.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.318433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.318442569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.482" endtime="20201030 11:51:18.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.318433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.318442569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.891" endtime="20201030 11:51:18.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.913" endtime="20201030 11:51:18.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.474" endtime="20201030 11:51:18.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.469" endtime="20201030 11:51:18.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.932" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.084000000214587e-06}, {'diff': 9.0699999999444e-06}, {'diff': 9.222000000086439e-06}, {'diff': 8.889000000067426e-06}, {'diff': 8.554999999965673e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:18.922" endtime="20201030 11:51:18.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:18.942" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.084000000214587e-06, 9.0699999999444e-06, 9.222000000086439e-06, 8.889000000067426e-06, 8.554999999965673e-06, 8.569999999430422e-06, 9.431000000503786e-06, 8.611000...</msg>
<status status="PASS" starttime="20201030 11:51:18.934" endtime="20201030 11:51:18.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.953" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:18.950" endtime="20201030 11:51:18.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.958" level="INFO">VALUE: [9.207999999816252e-06, 9.084000000214587e-06, 9.0699999999444e-06, 9.222000000086439e-06, 8.889000000067426e-06, 8.554999999965673e-06, 8.569999999430422e-06, 9.431000000503786e-06, 8.611000000158242e-06, 8.388999999553448e-06, 8.596999999888055e-06, 8.722999999655201e-06, 8.583000000506047e-06, 8.389000000441627e-06, 8.528000000396219e-06, 8.792000000035216e-06, 8.762999999412102e-06, 8.861000000415231e-06, 8.735999999842647e-06, 8.569999999430422e-06, 8.680999999732819e-06, 9.402999999963413e-06, 8.554999999965673e-06, 8.56900000023586e-06, 9.0699999999444e-06, 9.236000000356626e-06, 8.417000000093822e-06, 9.235999999468447e-06, 8.889000000067426e-06, 9.222000000086439e-06, 8.556000000048414e-06, 8.388999999553448e-06, 8.722999999655201e-06, 9.180999999358619e-06, 8.903000000337613e-06, 8.889000000067426e-06, 8.847000000145044e-06, 8.37500000017144e-06, 8.387999999470708e-06, 8.56900000023586e-06, 8.37500000017144e-06, 8.736000000730826e-06, 8.556000000048414e-06, 8.735999999842647e-06, 8.722000000460639e-06, 8.540999999695487e-06, 8.737000000813566e-06, 9.222000000086439e-06, 9.236000000356626e-06, 8.693999999920266e-06, 8.402999999823635e-06, 9.22199999919826e-06, 8.402000000629073e-06, 8.569999999430422e-06, 9.069000000749838e-06, 8.499999999855845e-06, 8.556000000048414e-06, 8.735999999842647e-06, 8.402999999823635e-06, 9.236000000356626e-06, 8.556000000048414e-06, 8.402999999823635e-06, 8.889000000067426e-06, 9.237000000439366e-06]</msg>
<status status="PASS" starttime="20201030 11:51:18.955" endtime="20201030 11:51:18.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.944" endtime="20201030 11:51:18.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.417" endtime="20201030 11:51:18.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.416" endtime="20201030 11:51:18.963"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.983" endtime="20201030 11:51:18.999"></status>
</kw>
<msg timestamp="20201030 11:51:19.000" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.980" endtime="20201030 11:51:19.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.002" endtime="20201030 11:51:19.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.009" endtime="20201030 11:51:19.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.973" endtime="20201030 11:51:19.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.968" endtime="20201030 11:51:19.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.033" endtime="20201030 11:51:19.415"></status>
</kw>
<msg timestamp="20201030 11:51:19.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.8502475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.850255903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:19.030" endtime="20201030 11:51:19.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.8502475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.850255903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:19.427" endtime="20201030 11:51:19.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.449" endtime="20201030 11:51:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.022" endtime="20201030 11:51:19.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.017" endtime="20201030 11:51:19.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.469" level="INFO">${RESULT} = [{'diff': 8.402999999823635e-06}, {'diff': 9.22199999919826e-06}, {'diff': 8.402000000629073e-06}, {'diff': 8.569999999430422e-06}, {'diff': 9.069000000749838e-06}, {'diff': 8.499999999855845e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:19.458" endtime="20201030 11:51:19.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:19.481" level="INFO">${OVERHEAD} = {'diff': [8.402999999823635e-06, 9.22199999919826e-06, 8.402000000629073e-06, 8.569999999430422e-06, 9.069000000749838e-06, 8.499999999855845e-06, 8.556000000048414e-06, 8.735999999842647e-06, 8.40299...</msg>
<status status="PASS" starttime="20201030 11:51:19.471" endtime="20201030 11:51:19.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.492" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:19.489" endtime="20201030 11:51:19.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.497" level="INFO">VALUE: [8.402999999823635e-06, 9.22199999919826e-06, 8.402000000629073e-06, 8.569999999430422e-06, 9.069000000749838e-06, 8.499999999855845e-06, 8.556000000048414e-06, 8.735999999842647e-06, 8.402999999823635e-06, 9.236000000356626e-06, 8.556000000048414e-06, 8.402999999823635e-06, 8.889000000067426e-06, 9.237000000439366e-06, 8.403000000711813e-06, 8.750000000112834e-06, 8.360999999901253e-06, 8.72199999957246e-06, 8.374999999283261e-06, 9.056000000562392e-06, 9.249999999738634e-06, 8.486000000473837e-06, 8.556000000048414e-06, 9.347999999853585e-06, 8.889000000067426e-06, 9.097000000402033e-06, 8.735999999842647e-06, 9.235999999468447e-06, 8.708000000190452e-06, 9.236000000356626e-06, 9.236000000356626e-06, 8.72199999957246e-06, 9.237000000439366e-06, 8.37500000017144e-06, 9.070000000832579e-06, 9.055000000479652e-06, 8.735999999842647e-06, 9.0699999999444e-06, 8.915999999636881e-06, 8.944000000177255e-06, 9.042000000292205e-06, 8.903000000337613e-06, 9.056000000562392e-06, 8.87499999979724e-06, 8.889000000067426e-06, 8.541999999778227e-06, 8.903000000337613e-06, 9.207999999816252e-06, 9.125000000054229e-06, 9.054999999591473e-06, 9.22199999919826e-06, 9.056000000562392e-06, 8.72199999957246e-06, 8.889000000067426e-06, 9.250000000626812e-06, 8.402999999823635e-06, 8.528000000396219e-06, 9.054999999591473e-06, 9.389000000581404e-06, 9.250000000626812e-06, 9.236999999551188e-06, 9.388999999693226e-06, 9.236000000356626e-06, 8.72300000054338e-06]</msg>
<status status="PASS" starttime="20201030 11:51:19.494" endtime="20201030 11:51:19.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.483" endtime="20201030 11:51:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.964" endtime="20201030 11:51:19.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.964" endtime="20201030 11:51:19.502"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.523" endtime="20201030 11:51:19.536"></status>
</kw>
<msg timestamp="20201030 11:51:19.538" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.519" endtime="20201030 11:51:19.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.544" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.540" endtime="20201030 11:51:19.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.546" endtime="20201030 11:51:19.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.512" endtime="20201030 11:51:19.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.507" endtime="20201030 11:51:19.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.571" endtime="20201030 11:51:19.948"></status>
</kw>
<msg timestamp="20201030 11:51:19.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.387451236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.387460458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.567" endtime="20201030 11:51:19.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.387451236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.387460458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.959" endtime="20201030 11:51:19.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.982" endtime="20201030 11:51:19.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.560" endtime="20201030 11:51:19.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.555" endtime="20201030 11:51:19.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.000" level="INFO">${RESULT} = [{'diff': 9.22199999919826e-06}, {'diff': 9.056000000562392e-06}, {'diff': 8.72199999957246e-06}, {'diff': 8.889000000067426e-06}, {'diff': 9.250000000626812e-06}, {'diff': 8.402999999823635e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:19.990" endtime="20201030 11:51:20.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:20.013" level="INFO">${OVERHEAD} = {'diff': [9.22199999919826e-06, 9.056000000562392e-06, 8.72199999957246e-06, 8.889000000067426e-06, 9.250000000626812e-06, 8.402999999823635e-06, 8.528000000396219e-06, 9.054999999591473e-06, 9.389000...</msg>
<status status="PASS" starttime="20201030 11:51:20.002" endtime="20201030 11:51:20.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.023" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:20.021" endtime="20201030 11:51:20.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.029" level="INFO">VALUE: [9.22199999919826e-06, 9.056000000562392e-06, 8.72199999957246e-06, 8.889000000067426e-06, 9.250000000626812e-06, 8.402999999823635e-06, 8.528000000396219e-06, 9.054999999591473e-06, 9.389000000581404e-06, 9.250000000626812e-06, 9.236999999551188e-06, 9.388999999693226e-06, 9.236000000356626e-06, 8.72300000054338e-06, 9.375000000311218e-06, 8.389000000441627e-06, 9.236999999551188e-06, 8.541999999778227e-06, 8.750000000112834e-06, 8.903000000337613e-06, 8.861000000415231e-06, 8.889000000067426e-06, 8.582999999617869e-06, 8.87499999979724e-06, 9.054999999591473e-06, 9.235999999468447e-06, 9.249999999738634e-06, 9.06899999986166e-06, 9.083000000131847e-06, 8.401999999740895e-06, 8.5700000003186e-06, 8.903000000337613e-06, 9.222000000086439e-06, 8.861000000415231e-06, 8.902999999449435e-06, 9.06899999986166e-06, 8.72300000054338e-06, 8.91600000052506e-06, 8.403000000711813e-06, 8.389000000441627e-06, 9.041000000209465e-06, 8.903000000337613e-06, 8.37500000017144e-06, 8.541999999778227e-06, 9.250000000626812e-06, 9.249999999738634e-06, 8.541999999778227e-06, 8.388999999553448e-06, 8.388999999553448e-06, 9.22199999919826e-06, 8.388999999553448e-06, 9.06899999986166e-06, 9.222000000086439e-06, 8.72300000054338e-06, 8.403000000711813e-06, 8.902999999449435e-06, 8.903000000337613e-06, 9.235999999468447e-06, 8.556000000048414e-06, 9.054999999591473e-06, 9.083000000131847e-06, 8.37500000017144e-06, 9.055999999674214e-06, 9.083000000131847e-06]</msg>
<status status="PASS" starttime="20201030 11:51:20.025" endtime="20201030 11:51:20.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.014" endtime="20201030 11:51:20.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.504" endtime="20201030 11:51:20.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.503" endtime="20201030 11:51:20.033"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.053" endtime="20201030 11:51:20.067"></status>
</kw>
<msg timestamp="20201030 11:51:20.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.050" endtime="20201030 11:51:20.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.071" endtime="20201030 11:51:20.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.077" endtime="20201030 11:51:20.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.043" endtime="20201030 11:51:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.038" endtime="20201030 11:51:20.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.101" endtime="20201030 11:51:20.493"></status>
</kw>
<msg timestamp="20201030 11:51:20.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.915159389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.915167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.098" endtime="20201030 11:51:20.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.915159389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.915167778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.505" endtime="20201030 11:51:20.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.528" endtime="20201030 11:51:20.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.091" endtime="20201030 11:51:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.086" endtime="20201030 11:51:20.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.547" level="INFO">${RESULT} = [{'diff': 8.388999999553448e-06}, {'diff': 9.06899999986166e-06}, {'diff': 9.222000000086439e-06}, {'diff': 8.72300000054338e-06}, {'diff': 8.403000000711813e-06}, {'diff': 8.902999999449435e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:20.537" endtime="20201030 11:51:20.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:20.557" level="INFO">${OVERHEAD} = {'diff': [8.388999999553448e-06, 9.06899999986166e-06, 9.222000000086439e-06, 8.72300000054338e-06, 8.403000000711813e-06, 8.902999999449435e-06, 8.903000000337613e-06, 9.235999999468447e-06, 8.556000...</msg>
<status status="PASS" starttime="20201030 11:51:20.549" endtime="20201030 11:51:20.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.567" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:20.565" endtime="20201030 11:51:20.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.574" level="INFO">VALUE: [8.388999999553448e-06, 9.06899999986166e-06, 9.222000000086439e-06, 8.72300000054338e-06, 8.403000000711813e-06, 8.902999999449435e-06, 8.903000000337613e-06, 9.235999999468447e-06, 8.556000000048414e-06, 9.054999999591473e-06, 9.083000000131847e-06, 8.37500000017144e-06, 9.055999999674214e-06, 9.083000000131847e-06, 8.916999999719621e-06, 8.388000000358886e-06, 8.735999999842647e-06, 9.056000000562392e-06, 8.401999999740895e-06, 9.083000000131847e-06, 8.889000000067426e-06, 8.554999999965673e-06, 9.361000000041031e-06, 8.556000000048414e-06, 8.5700000003186e-06, 8.639000000698616e-06, 8.903000000337613e-06, 8.388999999553448e-06, 8.875000000685418e-06, 8.916999999719621e-06, 8.554999999965673e-06, 8.87499999979724e-06, 8.389000000441627e-06, 8.736999999925388e-06, 8.569999999430422e-06, 9.236999999551188e-06, 8.889000000067426e-06, 8.374999999283261e-06, 8.903000000337613e-06, 8.903000000337613e-06, 8.945000000259995e-06, 8.902999999449435e-06, 8.556000000048414e-06, 9.042000000292205e-06, 8.860999999527053e-06, 9.235999999468447e-06, 8.750000000112834e-06, 8.56900000023586e-06, 9.06899999986166e-06, 9.235999999468447e-06, 9.22300000016918e-06, 8.735999999842647e-06, 9.236000000356626e-06, 9.249999999738634e-06, 8.582999999617869e-06, 8.72199999957246e-06, 8.417000000093822e-06, 8.887999999984686e-06, 9.444999999885795e-06, 8.695000000003006e-06, 8.902999999449435e-06, 9.0699999999444e-06, 9.236000000356626e-06, 8.389000000441627e-06]</msg>
<status status="PASS" starttime="20201030 11:51:20.570" endtime="20201030 11:51:20.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.559" endtime="20201030 11:51:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.035" endtime="20201030 11:51:20.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.034" endtime="20201030 11:51:20.578"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.598" endtime="20201030 11:51:20.614"></status>
</kw>
<msg timestamp="20201030 11:51:20.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.595" endtime="20201030 11:51:20.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.617" endtime="20201030 11:51:20.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.624" endtime="20201030 11:51:20.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.588" endtime="20201030 11:51:20.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.583" endtime="20201030 11:51:20.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.648" endtime="20201030 11:51:21.039"></status>
</kw>
<msg timestamp="20201030 11:51:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.436016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.436025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.645" endtime="20201030 11:51:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.436016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.436025306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.050" endtime="20201030 11:51:21.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.073" endtime="20201030 11:51:21.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.637" endtime="20201030 11:51:21.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.633" endtime="20201030 11:51:21.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.091" level="INFO">${RESULT} = [{'diff': 9.22300000016918e-06}, {'diff': 8.735999999842647e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.249999999738634e-06}, {'diff': 8.582999999617869e-06}, {'diff': 8.72199999957246e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:21.081" endtime="20201030 11:51:21.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:21.103" level="INFO">${OVERHEAD} = {'diff': [9.22300000016918e-06, 8.735999999842647e-06, 9.236000000356626e-06, 9.249999999738634e-06, 8.582999999617869e-06, 8.72199999957246e-06, 8.417000000093822e-06, 8.887999999984686e-06, 9.444999...</msg>
<status status="PASS" starttime="20201030 11:51:21.093" endtime="20201030 11:51:21.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.113" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:21.111" endtime="20201030 11:51:21.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.119" level="INFO">VALUE: [9.22300000016918e-06, 8.735999999842647e-06, 9.236000000356626e-06, 9.249999999738634e-06, 8.582999999617869e-06, 8.72199999957246e-06, 8.417000000093822e-06, 8.887999999984686e-06, 9.444999999885795e-06, 8.695000000003006e-06, 8.902999999449435e-06, 9.0699999999444e-06, 9.236000000356626e-06, 8.389000000441627e-06, 8.403000000711813e-06, 9.222000000086439e-06, 9.402999999963413e-06, 9.055999999674214e-06, 8.750000000112834e-06, 9.222000000086439e-06, 9.054999999591473e-06, 8.611000000158242e-06, 8.722000000460639e-06, 8.569999999430422e-06, 8.402999999823635e-06, 8.902999999449435e-06, 9.069000000749838e-06, 8.388999999553448e-06, 9.083000000131847e-06, 8.750000000112834e-06, 8.750000000112834e-06, 9.249999999738634e-06, 9.012999999669091e-06, 8.5700000003186e-06, 8.541999999778227e-06, 9.0699999999444e-06, 8.889000000067426e-06, 9.235999999468447e-06, 8.945000000259995e-06, 9.236000000356626e-06, 8.889000000067426e-06, 9.26400000000882e-06, 8.72199999957246e-06, 8.389000000441627e-06, 9.236000000356626e-06, 8.56900000023586e-06, 8.903000000337613e-06, 8.889000000067426e-06, 9.222000000086439e-06, 9.402999999963413e-06, 9.06899999986166e-06, 9.06899999986166e-06, 9.042000000292205e-06, 8.403000000711813e-06, 9.013999999751832e-06, 8.750000000112834e-06, 8.722999999655201e-06, 8.903000000337613e-06, 9.26299999992608e-06, 9.055999999674214e-06, 9.222000000086439e-06, 8.72199999957246e-06, 8.889000000067426e-06, 8.736000000730826e-06]</msg>
<status status="PASS" starttime="20201030 11:51:21.116" endtime="20201030 11:51:21.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.105" endtime="20201030 11:51:21.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.580" endtime="20201030 11:51:21.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.579" endtime="20201030 11:51:21.123"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.144" endtime="20201030 11:51:21.157"></status>
</kw>
<msg timestamp="20201030 11:51:21.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.141" endtime="20201030 11:51:21.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.161" endtime="20201030 11:51:21.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.168" endtime="20201030 11:51:21.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.133" endtime="20201030 11:51:21.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.129" endtime="20201030 11:51:21.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.192" endtime="20201030 11:51:21.574"></status>
</kw>
<msg timestamp="20201030 11:51:21.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.973484, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.973493069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:21.188" endtime="20201030 11:51:21.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.973484, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.973493069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:21.586" endtime="20201030 11:51:21.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.608" endtime="20201030 11:51:21.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.181" endtime="20201030 11:51:21.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.176" endtime="20201030 11:51:21.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.626" level="INFO">${RESULT} = [{'diff': 9.06899999986166e-06}, {'diff': 9.06899999986166e-06}, {'diff': 9.042000000292205e-06}, {'diff': 8.403000000711813e-06}, {'diff': 9.013999999751832e-06}, {'diff': 8.750000000112834e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:21.617" endtime="20201030 11:51:21.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:21.639" level="INFO">${OVERHEAD} = {'diff': [9.06899999986166e-06, 9.06899999986166e-06, 9.042000000292205e-06, 8.403000000711813e-06, 9.013999999751832e-06, 8.750000000112834e-06, 8.722999999655201e-06, 8.903000000337613e-06, 9.262999...</msg>
<status status="PASS" starttime="20201030 11:51:21.629" endtime="20201030 11:51:21.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.649" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:21.647" endtime="20201030 11:51:21.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.655" level="INFO">VALUE: [9.06899999986166e-06, 9.06899999986166e-06, 9.042000000292205e-06, 8.403000000711813e-06, 9.013999999751832e-06, 8.750000000112834e-06, 8.722999999655201e-06, 8.903000000337613e-06, 9.26299999992608e-06, 9.055999999674214e-06, 9.222000000086439e-06, 8.72199999957246e-06, 8.889000000067426e-06, 8.736000000730826e-06, 8.889000000067426e-06, 8.56900000023586e-06, 8.903000000337613e-06, 9.000000000369823e-06, 9.084000000214587e-06, 8.72199999957246e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.055999999674214e-06, 9.222000000086439e-06, 9.222000000086439e-06, 8.72199999957246e-06, 8.72199999957246e-06, 8.736999999925388e-06, 8.5700000003186e-06, 8.72199999957246e-06, 8.959000000530182e-06, 8.5700000003186e-06, 8.889000000067426e-06, 8.556000000048414e-06, 9.22199999919826e-06, 9.222999999281e-06, 8.403000000711813e-06, 8.902999999449435e-06, 8.722000000460639e-06, 8.72199999957246e-06, 8.499999999855845e-06, 8.695000000003006e-06, 8.735999999842647e-06, 8.582999999617869e-06, 9.042000000292205e-06, 9.222000000086439e-06, 8.401999999740895e-06, 8.528000000396219e-06, 8.540999999695487e-06, 8.389000000441627e-06, 9.054999999591473e-06, 8.763999999494843e-06, 8.5700000003186e-06, 8.554999999965673e-06, 9.207999999816252e-06, 8.735999999842647e-06, 8.735999999842647e-06, 9.236000000356626e-06, 8.651999999997884e-06, 8.569999999430422e-06, 8.916999999719621e-06, 8.902999999449435e-06, 9.054999999591473e-06, 8.388999999553448e-06]</msg>
<status status="PASS" starttime="20201030 11:51:21.651" endtime="20201030 11:51:21.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.641" endtime="20201030 11:51:21.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.125" endtime="20201030 11:51:21.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.124" endtime="20201030 11:51:21.659"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.680" endtime="20201030 11:51:21.694"></status>
</kw>
<msg timestamp="20201030 11:51:21.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.676" endtime="20201030 11:51:21.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.698" endtime="20201030 11:51:21.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.704" endtime="20201030 11:51:21.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.669" endtime="20201030 11:51:21.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.664" endtime="20201030 11:51:21.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.728" endtime="20201030 11:51:22.122"></status>
</kw>
<msg timestamp="20201030 11:51:22.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.507415403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.507424458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.724" endtime="20201030 11:51:22.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.507415403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.507424458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.133" endtime="20201030 11:51:22.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.156" endtime="20201030 11:51:22.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.717" endtime="20201030 11:51:22.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.712" endtime="20201030 11:51:22.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.174" level="INFO">${RESULT} = [{'diff': 9.054999999591473e-06}, {'diff': 8.763999999494843e-06}, {'diff': 8.5700000003186e-06}, {'diff': 8.554999999965673e-06}, {'diff': 9.207999999816252e-06}, {'diff': 8.735999999842647e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:22.164" endtime="20201030 11:51:22.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:22.185" level="INFO">${OVERHEAD} = {'diff': [9.054999999591473e-06, 8.763999999494843e-06, 8.5700000003186e-06, 8.554999999965673e-06, 9.207999999816252e-06, 8.735999999842647e-06, 8.735999999842647e-06, 9.236000000356626e-06, 8.651999...</msg>
<status status="PASS" starttime="20201030 11:51:22.176" endtime="20201030 11:51:22.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.195" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:22.193" endtime="20201030 11:51:22.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.201" level="INFO">VALUE: [9.054999999591473e-06, 8.763999999494843e-06, 8.5700000003186e-06, 8.554999999965673e-06, 9.207999999816252e-06, 8.735999999842647e-06, 8.735999999842647e-06, 9.236000000356626e-06, 8.651999999997884e-06, 8.569999999430422e-06, 8.916999999719621e-06, 8.902999999449435e-06, 9.054999999591473e-06, 8.388999999553448e-06, 9.22199999919826e-06, 8.402999998935456e-06, 8.944000001065433e-06, 8.916999998831443e-06, 8.889000000067426e-06, 9.041999998515848e-06, 9.125000000054229e-06, 9.223000001057358e-06, 9.08399999843823e-06, 9.16699999997661e-06, 9.236999998663009e-06, 8.860999999527053e-06, 9.249999999738634e-06, 9.37499999942304e-06, 8.735999999842647e-06, 8.568999998459503e-06, 8.709000001161371e-06, 9.236000000356626e-06, 9.388999998805048e-06, 8.903000001225791e-06, 8.416000000011081e-06, 9.069000000749838e-06, 8.388999999553448e-06, 9.237000000439366e-06, 8.708999999385014e-06, 8.56900000023586e-06, 8.555999999160235e-06, 9.222000000974617e-06, 8.721999998684282e-06, 8.568999998459503e-06, 9.070000000832579e-06, 9.402999999963413e-06, 8.5700000003186e-06, 8.721999998684282e-06, 8.403000000711813e-06, 8.930999999989808e-06, 9.236999998663009e-06, 9.084000000214587e-06, 8.902999999449435e-06, 8.735999999842647e-06, 8.42999999939309e-06, 8.887999999984686e-06, 9.055999999674214e-06, 8.568999998459503e-06, 9.389000000581404e-06, 8.749999999224656e-06, 9.236000000356626e-06, 8.554999999077495e-06, 8.555000000853852e-06, 8.72300000054338e-06]</msg>
<status status="PASS" starttime="20201030 11:51:22.197" endtime="20201030 11:51:22.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.187" endtime="20201030 11:51:22.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.661" endtime="20201030 11:51:22.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.660" endtime="20201030 11:51:22.205"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.226" endtime="20201030 11:51:22.241"></status>
</kw>
<msg timestamp="20201030 11:51:22.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.222" endtime="20201030 11:51:22.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.245" endtime="20201030 11:51:22.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.251" endtime="20201030 11:51:22.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.215" endtime="20201030 11:51:22.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.210" endtime="20201030 11:51:22.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.275" endtime="20201030 11:51:22.668"></status>
</kw>
<msg timestamp="20201030 11:51:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.033487319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.033496556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.272" endtime="20201030 11:51:22.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.033487319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.033496556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.679" endtime="20201030 11:51:22.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.702" endtime="20201030 11:51:22.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.264" endtime="20201030 11:51:22.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.260" endtime="20201030 11:51:22.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.720" level="INFO">${RESULT} = [{'diff': 9.236999998663009e-06}, {'diff': 9.084000000214587e-06}, {'diff': 8.902999999449435e-06}, {'diff': 8.735999999842647e-06}, {'diff': 8.42999999939309e-06}, {'diff': 8.887999999984686e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:22.711" endtime="20201030 11:51:22.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:22.732" level="INFO">${OVERHEAD} = {'diff': [9.236999998663009e-06, 9.084000000214587e-06, 8.902999999449435e-06, 8.735999999842647e-06, 8.42999999939309e-06, 8.887999999984686e-06, 9.055999999674214e-06, 8.568999998459503e-06, 9.38900...</msg>
<status status="PASS" starttime="20201030 11:51:22.722" endtime="20201030 11:51:22.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:22.740" endtime="20201030 11:51:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.748" level="INFO">VALUE: [9.236999998663009e-06, 9.084000000214587e-06, 8.902999999449435e-06, 8.735999999842647e-06, 8.42999999939309e-06, 8.887999999984686e-06, 9.055999999674214e-06, 8.568999998459503e-06, 9.389000000581404e-06, 8.749999999224656e-06, 9.236000000356626e-06, 8.554999999077495e-06, 8.555000000853852e-06, 8.72300000054338e-06, 9.237000000439366e-06, 8.541999999778227e-06, 9.083000000131847e-06, 8.68099999884464e-06, 9.000000000369823e-06, 9.402999999963413e-06, 8.902999999449435e-06, 9.055999999674214e-06, 9.110999998895863e-06, 9.070000000832579e-06, 9.000000000369823e-06, 9.084000000214587e-06, 8.735999999842647e-06, 8.541999999778227e-06, 8.735999999842647e-06, 8.695000000003006e-06, 8.97199999982945e-06, 8.735999999842647e-06, 8.583999999700609e-06, 8.5700000003186e-06, 9.097000001290212e-06, 9.084000000214587e-06, 8.56900000023586e-06, 8.722000000460639e-06, 8.889000000067426e-06, 9.402999999963413e-06, 8.875000000685418e-06, 9.389000000581404e-06, 8.568999998459503e-06, 8.722000000460639e-06, 8.554999999077495e-06, 9.041999998515848e-06, 9.042000000292205e-06, 8.56900000023586e-06, 8.582999999617869e-06, 8.735999999842647e-06, 9.195000000516984e-06, 9.235999998580269e-06, 8.5700000003186e-06, 8.445000000634195e-06, 8.444000000551455e-06, 8.402000000629073e-06, 8.9170000006078e-06, 9.125000000054229e-06, 8.554999999077495e-06, 9.389000000581404e-06, 8.875000000685418e-06, 9.22199999919826e-06, 8.735999999842647e-06, 9.264000000897e-06]</msg>
<status status="PASS" starttime="20201030 11:51:22.745" endtime="20201030 11:51:22.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.734" endtime="20201030 11:51:22.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.207" endtime="20201030 11:51:22.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.206" endtime="20201030 11:51:22.753"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.773" endtime="20201030 11:51:22.788"></status>
</kw>
<msg timestamp="20201030 11:51:22.789" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.770" endtime="20201030 11:51:22.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.791" endtime="20201030 11:51:22.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.798" endtime="20201030 11:51:22.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.763" endtime="20201030 11:51:22.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.758" endtime="20201030 11:51:22.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.821" endtime="20201030 11:51:23.203"></status>
</kw>
<msg timestamp="20201030 11:51:23.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.570869444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.570878639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.818" endtime="20201030 11:51:23.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.570869444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.570878639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.214" endtime="20201030 11:51:23.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.237" endtime="20201030 11:51:23.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.810" endtime="20201030 11:51:23.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.806" endtime="20201030 11:51:23.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.255" level="INFO">${RESULT} = [{'diff': 9.195000000516984e-06}, {'diff': 9.235999998580269e-06}, {'diff': 8.5700000003186e-06}, {'diff': 8.445000000634195e-06}, {'diff': 8.444000000551455e-06}, {'diff': 8.402000000629073e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:23.245" endtime="20201030 11:51:23.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:23.267" level="INFO">${OVERHEAD} = {'diff': [9.195000000516984e-06, 9.235999998580269e-06, 8.5700000003186e-06, 8.445000000634195e-06, 8.444000000551455e-06, 8.402000000629073e-06, 8.9170000006078e-06, 9.125000000054229e-06, 8.55499999...</msg>
<status status="PASS" starttime="20201030 11:51:23.257" endtime="20201030 11:51:23.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.278" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:23.275" endtime="20201030 11:51:23.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.283" level="INFO">VALUE: [9.195000000516984e-06, 9.235999998580269e-06, 8.5700000003186e-06, 8.445000000634195e-06, 8.444000000551455e-06, 8.402000000629073e-06, 8.9170000006078e-06, 9.125000000054229e-06, 8.554999999077495e-06, 9.389000000581404e-06, 8.875000000685418e-06, 9.22199999919826e-06, 8.735999999842647e-06, 9.264000000897e-06, 8.540999999695487e-06, 8.735999999842647e-06, 8.554999999077495e-06, 9.069000000749838e-06, 8.709000001161371e-06, 8.540999999695487e-06, 8.735999999842647e-06, 9.068999998973482e-06, 8.541999999778227e-06, 8.875000000685418e-06, 8.541999999778227e-06, 9.235999998580269e-06, 8.444999998857838e-06, 8.722000000460639e-06, 8.889000000067426e-06, 9.236000000356626e-06, 8.889000000067426e-06, 8.388999999553448e-06, 8.735999999842647e-06, 8.902999999449435e-06, 8.901999999366694e-06, 9.042000000292205e-06, 9.25000000151499e-06, 8.806000000305403e-06, 8.889000000067426e-06, 9.222000000974617e-06, 8.554999999077495e-06, 8.402000000629073e-06, 8.902999999449435e-06, 8.764000000383021e-06, 9.222000000974617e-06, 9.013999999751832e-06, 8.388999999553448e-06, 8.902999999449435e-06, 9.263999999120642e-06, 9.236000000356626e-06, 8.875000000685418e-06, 8.556000000936592e-06, 9.236000000356626e-06, 8.62499999954025e-06, 8.5700000003186e-06, 8.680000000538257e-06, 8.471999999315472e-06, 8.403000000711813e-06, 8.72300000054338e-06, 9.237000000439366e-06, 9.236000000356626e-06, 8.735999999842647e-06, 8.555999999160235e-06, 9.055999999674214e-06]</msg>
<status status="PASS" starttime="20201030 11:51:23.280" endtime="20201030 11:51:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.269" endtime="20201030 11:51:23.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.754" endtime="20201030 11:51:23.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.754" endtime="20201030 11:51:23.288"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.309" endtime="20201030 11:51:23.323"></status>
</kw>
<msg timestamp="20201030 11:51:23.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.305" endtime="20201030 11:51:23.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.326" endtime="20201030 11:51:23.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.333" endtime="20201030 11:51:23.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.298" endtime="20201030 11:51:23.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.293" endtime="20201030 11:51:23.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.357" endtime="20201030 11:51:23.735"></status>
</kw>
<msg timestamp="20201030 11:51:23.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.108636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.108645792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.353" endtime="20201030 11:51:23.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.108636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.108645792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.747" endtime="20201030 11:51:23.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.769" endtime="20201030 11:51:23.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.346" endtime="20201030 11:51:23.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.341" endtime="20201030 11:51:23.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.788" level="INFO">${RESULT} = [{'diff': 8.875000000685418e-06}, {'diff': 8.556000000936592e-06}, {'diff': 9.236000000356626e-06}, {'diff': 8.62499999954025e-06}, {'diff': 8.5700000003186e-06}, {'diff': 8.680000000538257e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:23.778" endtime="20201030 11:51:23.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:23.799" level="INFO">${OVERHEAD} = {'diff': [8.875000000685418e-06, 8.556000000936592e-06, 9.236000000356626e-06, 8.62499999954025e-06, 8.5700000003186e-06, 8.680000000538257e-06, 8.471999999315472e-06, 8.403000000711813e-06, 8.7230000...</msg>
<status status="PASS" starttime="20201030 11:51:23.790" endtime="20201030 11:51:23.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.809" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:23.807" endtime="20201030 11:51:23.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.815" level="INFO">VALUE: [8.875000000685418e-06, 8.556000000936592e-06, 9.236000000356626e-06, 8.62499999954025e-06, 8.5700000003186e-06, 8.680000000538257e-06, 8.471999999315472e-06, 8.403000000711813e-06, 8.72300000054338e-06, 9.237000000439366e-06, 9.236000000356626e-06, 8.735999999842647e-06, 8.555999999160235e-06, 9.055999999674214e-06, 8.72300000054338e-06, 8.902999999449435e-06, 8.387999999470708e-06, 9.32000000020139e-06, 8.639000000698616e-06, 8.901999999366694e-06, 9.084000000214587e-06, 8.735999999842647e-06, 9.096999999513855e-06, 9.194999998740627e-06, 9.084000000214587e-06, 8.513999999237853e-06, 8.417000000093822e-06, 8.735999999842647e-06, 9.207999999816252e-06, 8.417000000093822e-06, 8.97199999982945e-06, 9.083000000131847e-06, 9.236000000356626e-06, 8.56900000023586e-06, 9.222000000974617e-06, 8.555999999160235e-06, 8.56900000023586e-06, 8.722000000460639e-06, 9.054999999591473e-06, 8.764000000383021e-06, 8.889000000067426e-06, 8.471999999315472e-06, 8.88899999829107e-06, 9.069000000749838e-06, 8.902999999449435e-06, 9.236000000356626e-06, 8.735999999842647e-06, 9.02799999913384e-06, 9.208999999898992e-06, 9.402999999963413e-06, 9.389000000581404e-06, 8.70800000107863e-06, 8.902999999449435e-06, 8.402999998935456e-06, 9.402999999963413e-06, 9.083000000131847e-06, 9.207999999816252e-06, 8.499999999855845e-06, 9.069000000749838e-06, 9.236000000356626e-06, 8.541999999778227e-06, 8.639000000698616e-06, 9.041000000209465e-06, 8.874999998909061e-06]</msg>
<status status="PASS" starttime="20201030 11:51:23.811" endtime="20201030 11:51:23.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.800" endtime="20201030 11:51:23.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.290" endtime="20201030 11:51:23.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.289" endtime="20201030 11:51:23.819"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.840" endtime="20201030 11:51:23.856"></status>
</kw>
<msg timestamp="20201030 11:51:23.857" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.837" endtime="20201030 11:51:23.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.859" endtime="20201030 11:51:23.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.866" endtime="20201030 11:51:23.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.829" endtime="20201030 11:51:23.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.824" endtime="20201030 11:51:23.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.889" endtime="20201030 11:51:24.279"></status>
</kw>
<msg timestamp="20201030 11:51:24.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.635035917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.635045306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.886" endtime="20201030 11:51:24.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.635035917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.635045306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.290" endtime="20201030 11:51:24.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.313" endtime="20201030 11:51:24.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.879" endtime="20201030 11:51:24.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.874" endtime="20201030 11:51:24.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.331" level="INFO">${RESULT} = [{'diff': 9.389000000581404e-06}, {'diff': 8.70800000107863e-06}, {'diff': 8.902999999449435e-06}, {'diff': 8.402999998935456e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.083000000131847e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:24.321" endtime="20201030 11:51:24.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:24.343" level="INFO">${OVERHEAD} = {'diff': [9.389000000581404e-06, 8.70800000107863e-06, 8.902999999449435e-06, 8.402999998935456e-06, 9.402999999963413e-06, 9.083000000131847e-06, 9.207999999816252e-06, 8.499999999855845e-06, 9.06900...</msg>
<status status="PASS" starttime="20201030 11:51:24.333" endtime="20201030 11:51:24.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.353" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:24.351" endtime="20201030 11:51:24.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.359" level="INFO">VALUE: [9.389000000581404e-06, 8.70800000107863e-06, 8.902999999449435e-06, 8.402999998935456e-06, 9.402999999963413e-06, 9.083000000131847e-06, 9.207999999816252e-06, 8.499999999855845e-06, 9.069000000749838e-06, 9.236000000356626e-06, 8.541999999778227e-06, 8.639000000698616e-06, 9.041000000209465e-06, 8.874999998909061e-06, 9.236000000356626e-06, 8.707999999302274e-06, 9.236000000356626e-06, 8.556000000936592e-06, 8.91600000052506e-06, 9.054999999591473e-06, 8.555000000853852e-06, 8.735999999842647e-06, 8.388999999553448e-06, 8.5700000003186e-06, 8.889000000067426e-06, 8.555000000853852e-06, 8.540999999695487e-06, 9.236000000356626e-06, 8.902999999449435e-06, 9.068999998973482e-06, 9.070000000832579e-06, 8.37500000017144e-06, 8.388999999553448e-06, 8.875000000685418e-06, 8.37500000017144e-06, 8.88899999829107e-06, 9.22199999919826e-06, 9.222999999281e-06, 9.084000000214587e-06, 9.389000000581404e-06, 9.083000000131847e-06, 8.889000000067426e-06, 9.417000001121778e-06, 9.388999998805048e-06, 8.388999999553448e-06, 9.084000000214587e-06, 9.402999999963413e-06, 9.222999999281e-06, 8.889000000067426e-06, 8.56900000023586e-06, 8.735999999842647e-06, 9.028000000910197e-06, 9.125000000054229e-06, 8.875000000685418e-06, 8.555999999160235e-06, 8.556000000936592e-06, 8.37500000017144e-06, 9.40300000173977e-06, 9.249999999738634e-06, 9.055999999674214e-06, 8.51400000101421e-06, 8.736999999925388e-06, 8.402999998935456e-06, 8.651999999997884e-06]</msg>
<status status="PASS" starttime="20201030 11:51:24.355" endtime="20201030 11:51:24.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.345" endtime="20201030 11:51:24.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.821" endtime="20201030 11:51:24.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.820" endtime="20201030 11:51:24.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.611" endtime="20201030 11:51:24.364"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:13.480" endtime="20201030 11:51:24.366" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.386" endtime="20201030 11:51:24.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.382" endtime="20201030 11:51:24.409"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.443" endtime="20201030 11:51:24.469"></status>
</kw>
<msg timestamp="20201030 11:51:24.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.439" endtime="20201030 11:51:24.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.477" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.473" endtime="20201030 11:51:24.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:24.480" endtime="20201030 11:51:24.484"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:24.432" endtime="20201030 11:51:24.486"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:24.426" endtime="20201030 11:51:24.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.423" endtime="20201030 11:51:24.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:24.497" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:24.495" endtime="20201030 11:51:24.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.491" endtime="20201030 11:51:24.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.421" endtime="20201030 11:51:24.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.419" endtime="20201030 11:51:24.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.500" endtime="20201030 11:51:24.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.415" endtime="20201030 11:51:24.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.411" endtime="20201030 11:51:24.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.379" endtime="20201030 11:51:24.507"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.533" endtime="20201030 11:51:24.557"></status>
</kw>
<msg timestamp="20201030 11:51:24.558" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.530" endtime="20201030 11:51:24.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.564" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.560" endtime="20201030 11:51:24.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.567" endtime="20201030 11:51:24.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.520" endtime="20201030 11:51:24.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.514" endtime="20201030 11:51:24.574"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.578" endtime="20201030 11:51:24.584"></status>
</kw>
<msg timestamp="20201030 11:51:24.585" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:24.575" endtime="20201030 11:51:24.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.595" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:24.593" endtime="20201030 11:51:24.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.599" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:24.597" endtime="20201030 11:51:24.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.586" endtime="20201030 11:51:24.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.612" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:24.609" endtime="20201030 11:51:24.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.616" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:24.614" endtime="20201030 11:51:24.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.603" endtime="20201030 11:51:24.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.637" endtime="20201030 11:51:24.999"></status>
</kw>
<msg timestamp="20201030 11:51:25.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139102403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139117653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.633" endtime="20201030 11:51:25.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139102403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139117653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.008" endtime="20201030 11:51:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.027" endtime="20201030 11:51:25.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.625" endtime="20201030 11:51:25.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.620" endtime="20201030 11:51:25.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.045" level="INFO">${RESULT} = [{'diff': 1.5249999999994435e-05}, {'diff': 1.4985999999994615e-05}, {'diff': 1.5596999999978323e-05}, {'diff': 1.5764000000001444e-05}, {'diff': 1.50969999999917e-05}, {'diff': 1.5430000000010713e-05...</msg>
<status status="PASS" starttime="20201030 11:51:25.036" endtime="20201030 11:51:25.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:25.056" level="INFO">${OVERHEAD} = {'diff': [1.5249999999994435e-05, 1.4985999999994615e-05, 1.5596999999978323e-05, 1.5764000000001444e-05, 1.50969999999917e-05, 1.5430000000010713e-05, 1.4930999999995809e-05, 1.5597000000006078e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:25.047" endtime="20201030 11:51:25.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.067" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:51:25.065" endtime="20201030 11:51:25.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.073" level="INFO">VALUE: [1.5249999999994435e-05, 1.4985999999994615e-05, 1.5596999999978323e-05, 1.5764000000001444e-05, 1.50969999999917e-05, 1.5430000000010713e-05, 1.4930999999995809e-05, 1.5597000000006078e-05, 1.4833999999991354e-05, 1.4930999999995809e-05, 1.4917000000003178e-05, 1.5263999999987066e-05, 1.4902999999982791e-05, 1.5596999999978323e-05, 1.5764000000001444e-05, 1.4777999999993074e-05, 1.4777999999993074e-05, 1.5263999999987066e-05, 1.4930999999995809e-05, 1.5277999999979697e-05, 1.5415999999990326e-05, 1.4764000000000443e-05, 1.5596999999978323e-05, 1.4917000000003178e-05, 1.520899999998826e-05, 1.4930999999995809e-05, 1.4764000000000443e-05, 1.50969999999917e-05, 1.5083999999998543e-05, 1.5445000000002818e-05, 1.5583999999985165e-05, 1.5097999999991174e-05, 1.527700000000798e-05, 1.526400000001482e-05, 1.5415999999990326e-05, 1.4917000000003178e-05, 1.536099999999152e-05, 1.4930999999995809e-05, 1.5431000000010187e-05, 1.4764000000000443e-05, 1.50969999999917e-05, 1.50969999999917e-05, 1.47769999999936e-05, 1.5097999999991174e-05, 1.4903000000010547e-05, 1.5597000000006078e-05, 1.537499999998415e-05, 1.530600000002047e-05, 1.558400000001292e-05, 1.5596999999978323e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.070" endtime="20201030 11:51:25.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.058" endtime="20201030 11:51:25.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.509" endtime="20201030 11:51:25.077"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:24.372" endtime="20201030 11:51:25.079" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.099" endtime="20201030 11:51:25.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.095" endtime="20201030 11:51:25.123"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.156" endtime="20201030 11:51:25.183"></status>
</kw>
<msg timestamp="20201030 11:51:25.184" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.153" endtime="20201030 11:51:25.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.187" endtime="20201030 11:51:25.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.197" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:25.193" endtime="20201030 11:51:25.198"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:25.146" endtime="20201030 11:51:25.200"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:25.139" endtime="20201030 11:51:25.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.137" endtime="20201030 11:51:25.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:25.210" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:25.209" endtime="20201030 11:51:25.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.204" endtime="20201030 11:51:25.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.135" endtime="20201030 11:51:25.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.133" endtime="20201030 11:51:25.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.214" endtime="20201030 11:51:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.129" endtime="20201030 11:51:25.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.124" endtime="20201030 11:51:25.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.092" endtime="20201030 11:51:25.221"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.247" endtime="20201030 11:51:25.345"></status>
</kw>
<msg timestamp="20201030 11:51:25.346" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.244" endtime="20201030 11:51:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.352" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.348" endtime="20201030 11:51:25.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.355" endtime="20201030 11:51:25.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.236" endtime="20201030 11:51:25.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.228" endtime="20201030 11:51:25.362"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.366" endtime="20201030 11:51:25.372"></status>
</kw>
<msg timestamp="20201030 11:51:25.373" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:25.363" endtime="20201030 11:51:25.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.383" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:25.381" endtime="20201030 11:51:25.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.387" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:25.385" endtime="20201030 11:51:25.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.374" endtime="20201030 11:51:25.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.400" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:25.397" endtime="20201030 11:51:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.404" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:25.402" endtime="20201030 11:51:25.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.391" endtime="20201030 11:51:25.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.423" endtime="20201030 11:51:25.786"></status>
</kw>
<msg timestamp="20201030 11:51:25.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141306792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141353278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.420" endtime="20201030 11:51:25.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141306792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141353278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.795" endtime="20201030 11:51:25.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.813" endtime="20201030 11:51:25.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.412" endtime="20201030 11:51:25.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.408" endtime="20201030 11:51:25.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.831" level="INFO">${RESULT} = [{'diff': 4.648600000001224e-05}, {'diff': 4.6083000000002317e-05}, {'diff': 4.688899999999441e-05}, {'diff': 4.691699999997967e-05}, {'diff': 4.691600000000795e-05}, {'diff': 4.611099999998758e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:25.822" endtime="20201030 11:51:25.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:25.842" level="INFO">${OVERHEAD} = {'diff': [4.648600000001224e-05, 4.6083000000002317e-05, 4.688899999999441e-05, 4.691699999997967e-05, 4.691600000000795e-05, 4.611099999998758e-05, 4.693000000000058e-05, 4.608400000000179e-05, 4.693...</msg>
<status status="PASS" starttime="20201030 11:51:25.833" endtime="20201030 11:51:25.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.853" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:51:25.851" endtime="20201030 11:51:25.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.859" level="INFO">VALUE: [4.648600000001224e-05, 4.6083000000002317e-05, 4.688899999999441e-05, 4.691699999997967e-05, 4.691600000000795e-05, 4.611099999998758e-05, 4.693000000000058e-05, 4.608400000000179e-05, 4.6931000000000056e-05, 4.6957999999985844e-05, 4.691699999997967e-05, 4.694399999999321e-05, 4.709799999999542e-05, 4.6931000000000056e-05, 4.60970000000227e-05, 4.698599999999886e-05, 4.6861000000009145e-05, 4.609699999999495e-05, 4.6917000000007425e-05, 4.691699999997967e-05, 4.6875000000001776e-05, 4.708300000000332e-05, 4.60970000000227e-05, 4.6055000000017055e-05, 4.6931000000000056e-05, 4.608400000000179e-05, 4.709699999999595e-05, 4.697200000000623e-05, 4.605599999998877e-05, 4.7013000000012406e-05, 4.7069000000010686e-05, 4.6083000000002317e-05, 4.6083000000002317e-05, 4.69580000000136e-05, 4.693000000000058e-05, 4.6083000000002317e-05, 4.6917000000007425e-05, 4.607000000000916e-05, 4.688899999999441e-05, 4.708299999997556e-05, 4.605599999998877e-05, 4.691600000000795e-05, 4.605599999998877e-05, 4.6083000000002317e-05, 4.6083000000002317e-05, 4.690299999998704e-05, 4.609699999999495e-05, 4.6959000000013074e-05, 4.6069000000009686e-05, 4.707000000001016e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.856" endtime="20201030 11:51:25.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.844" endtime="20201030 11:51:25.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.223" endtime="20201030 11:51:25.863"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:25.086" endtime="20201030 11:51:25.865" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.885" endtime="20201030 11:51:25.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.881" endtime="20201030 11:51:25.909"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.942" endtime="20201030 11:51:25.969"></status>
</kw>
<msg timestamp="20201030 11:51:25.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.939" endtime="20201030 11:51:25.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.972" endtime="20201030 11:51:25.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.984" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:25.979" endtime="20201030 11:51:25.984"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:25.932" endtime="20201030 11:51:25.986"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:25.925" endtime="20201030 11:51:25.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.922" endtime="20201030 11:51:25.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:25.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:25.995" endtime="20201030 11:51:25.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.990" endtime="20201030 11:51:26.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.921" endtime="20201030 11:51:26.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.919" endtime="20201030 11:51:26.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.002" endtime="20201030 11:51:26.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.915" endtime="20201030 11:51:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.910" endtime="20201030 11:51:26.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.878" endtime="20201030 11:51:26.009"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.033" endtime="20201030 11:51:26.297"></status>
</kw>
<msg timestamp="20201030 11:51:26.299" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.030" endtime="20201030 11:51:26.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.305" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.301" endtime="20201030 11:51:26.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.307" endtime="20201030 11:51:26.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.022" endtime="20201030 11:51:26.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.016" endtime="20201030 11:51:26.314"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.319" endtime="20201030 11:51:26.323"></status>
</kw>
<msg timestamp="20201030 11:51:26.325" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:26.316" endtime="20201030 11:51:26.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.336" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:26.333" endtime="20201030 11:51:26.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.341" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:26.338" endtime="20201030 11:51:26.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.327" endtime="20201030 11:51:26.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.353" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:26.351" endtime="20201030 11:51:26.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.358" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:26.355" endtime="20201030 11:51:26.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.344" endtime="20201030 11:51:26.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.377" endtime="20201030 11:51:26.735"></status>
</kw>
<msg timestamp="20201030 11:51:26.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144370347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144451944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.374" endtime="20201030 11:51:26.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144370347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144451944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.745" endtime="20201030 11:51:26.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.763" endtime="20201030 11:51:26.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.366" endtime="20201030 11:51:26.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.361" endtime="20201030 11:51:26.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.780" level="INFO">${RESULT} = [{'diff': 8.159699999998882e-05}, {'diff': 8.105499999999655e-05}, {'diff': 8.119400000000665e-05}, {'diff': 8.101400000001813e-05}, {'diff': 8.1027999999983e-05}, {'diff': 8.102800000001076e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:26.771" endtime="20201030 11:51:26.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:26.795" level="INFO">${OVERHEAD} = {'diff': [8.159699999998882e-05, 8.105499999999655e-05, 8.119400000000665e-05, 8.101400000001813e-05, 8.1027999999983e-05, 8.102800000001076e-05, 8.115300000000047e-05, 8.099999999999774e-05, 8.118099...</msg>
<status status="PASS" starttime="20201030 11:51:26.782" endtime="20201030 11:51:26.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.806" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:51:26.804" endtime="20201030 11:51:26.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.812" level="INFO">VALUE: [8.159699999998882e-05, 8.105499999999655e-05, 8.119400000000665e-05, 8.101400000001813e-05, 8.1027999999983e-05, 8.102800000001076e-05, 8.115300000000047e-05, 8.099999999999774e-05, 8.118099999998574e-05, 8.101400000001813e-05, 8.105499999999655e-05, 8.12360000000123e-05, 8.102699999998353e-05, 8.1027999999983e-05, 8.097200000001248e-05, 8.122200000001967e-05, 8.105499999999655e-05, 8.12360000000123e-05, 8.105499999999655e-05, 8.102700000001128e-05, 8.113900000000784e-05, 8.098600000000511e-05, 8.102700000001128e-05, 8.104199999997563e-05, 8.120799999999928e-05, 8.104100000000392e-05, 8.104100000000392e-05, 8.105599999996826e-05, 8.101300000001865e-05, 8.105499999999655e-05, 8.099999999999774e-05, 8.104199999997563e-05, 8.1027999999983e-05, 8.099999999999774e-05, 8.106900000004469e-05, 8.122199999999191e-05, 8.1027999999983e-05, 8.104199999997563e-05, 8.120799999999928e-05, 8.104100000000392e-05, 8.122200000004742e-05, 8.125000000003268e-05, 8.104200000003114e-05, 8.108400000000904e-05, 8.105600000002378e-05, 8.124999999997717e-05, 8.10700000000164e-05, 8.106899999998918e-05, 8.101399999999037e-05, 8.104200000003114e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.809" endtime="20201030 11:51:26.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.797" endtime="20201030 11:51:26.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.011" endtime="20201030 11:51:26.816"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:25.872" endtime="20201030 11:51:26.818" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.838" endtime="20201030 11:51:26.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.834" endtime="20201030 11:51:26.862"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.895" endtime="20201030 11:51:26.923"></status>
</kw>
<msg timestamp="20201030 11:51:26.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.892" endtime="20201030 11:51:26.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.927" endtime="20201030 11:51:26.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.937" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:26.933" endtime="20201030 11:51:26.938"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:26.884" endtime="20201030 11:51:26.940"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:26.878" endtime="20201030 11:51:26.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.875" endtime="20201030 11:51:26.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:26.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:26.949" endtime="20201030 11:51:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.944" endtime="20201030 11:51:26.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.873" endtime="20201030 11:51:26.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.872" endtime="20201030 11:51:26.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.954" endtime="20201030 11:51:26.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.867" endtime="20201030 11:51:26.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.863" endtime="20201030 11:51:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.831" endtime="20201030 11:51:26.961"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.985" endtime="20201030 11:51:27.010"></status>
</kw>
<msg timestamp="20201030 11:51:27.011" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.981" endtime="20201030 11:51:27.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.017" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.013" endtime="20201030 11:51:27.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.019" endtime="20201030 11:51:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.974" endtime="20201030 11:51:27.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.968" endtime="20201030 11:51:27.026"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.031" endtime="20201030 11:51:27.036"></status>
</kw>
<msg timestamp="20201030 11:51:27.037" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:27.028" endtime="20201030 11:51:27.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.047" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:27.045" endtime="20201030 11:51:27.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.052" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:27.050" endtime="20201030 11:51:27.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.039" endtime="20201030 11:51:27.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.064" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:27.062" endtime="20201030 11:51:27.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.069" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:27.066" endtime="20201030 11:51:27.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.056" endtime="20201030 11:51:27.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.088" endtime="20201030 11:51:27.453"></status>
</kw>
<msg timestamp="20201030 11:51:27.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138939681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.084" endtime="20201030 11:51:27.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138939681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.463" endtime="20201030 11:51:27.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.482" endtime="20201030 11:51:27.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.077" endtime="20201030 11:51:27.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.072" endtime="20201030 11:51:27.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.500" level="INFO">${RESULT} = [{'diff': 1.4999999999876223e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.514000000008009e-06}, {'diff': 1.4999999999876223e-06}, {'diff': 1.4309999999961853e-06}...</msg>
<status status="PASS" starttime="20201030 11:51:27.491" endtime="20201030 11:51:27.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:27.509" level="INFO">${OVERHEAD} = {'diff': [1.4999999999876223e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.514000000008009e-06, 1.4999999999876223e-06, 1.4309999999961853e-06, 1.514000000008009e-06, 1.500000000015378e-06, 1.4...</msg>
<status status="PASS" starttime="20201030 11:51:27.502" endtime="20201030 11:51:27.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.521" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:51:27.518" endtime="20201030 11:51:27.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.526" level="INFO">VALUE: [1.4999999999876223e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.514000000008009e-06, 1.4999999999876223e-06, 1.4309999999961853e-06, 1.514000000008009e-06, 1.500000000015378e-06, 1.4720000000023603e-06, 1.52800000000064e-06, 1.4999999999876223e-06, 1.500000000015378e-06, 1.514000000008009e-06, 1.500000000015378e-06, 1.514000000008009e-06, 1.4999999999876223e-06, 1.4999999999876223e-06, 1.4999999999876223e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.514000000008009e-06, 1.514000000008009e-06, 1.514000000008009e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 1.4579999999819737e-06, 1.500000000015378e-06, 1.52800000000064e-06, 1.500000000015378e-06, 1.555000000014184e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.473000000001834e-06, 1.4719999999746047e-06, 1.4999999999876223e-06, 1.500000000015378e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.5420000000210266e-06, 1.555999999985902e-06, 1.5279999999728844e-06, 1.500000000015378e-06, 1.5130000000085353e-06, 1.5129999999807797e-06, 1.4999999999876223e-06, 1.500000000015378e-06, 1.514000000008009e-06, 1.5139999999802534e-06, 1.4999999999876223e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.523" endtime="20201030 11:51:27.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.511" endtime="20201030 11:51:27.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.963" endtime="20201030 11:51:27.530"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:26.824" endtime="20201030 11:51:27.532" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.556" endtime="20201030 11:51:27.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.553" endtime="20201030 11:51:27.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.615" endtime="20201030 11:51:27.642"></status>
</kw>
<msg timestamp="20201030 11:51:27.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.612" endtime="20201030 11:51:27.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.649" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.645" endtime="20201030 11:51:27.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.656" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:27.652" endtime="20201030 11:51:27.657"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:27.604" endtime="20201030 11:51:27.659"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:27.596" endtime="20201030 11:51:27.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.594" endtime="20201030 11:51:27.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:27.669" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:27.667" endtime="20201030 11:51:27.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.663" endtime="20201030 11:51:27.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.592" endtime="20201030 11:51:27.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.590" endtime="20201030 11:51:27.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.673" endtime="20201030 11:51:27.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.586" endtime="20201030 11:51:27.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.582" endtime="20201030 11:51:27.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.545" endtime="20201030 11:51:27.680"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.704" endtime="20201030 11:51:27.803"></status>
</kw>
<msg timestamp="20201030 11:51:27.804" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.700" endtime="20201030 11:51:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.811" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.807" endtime="20201030 11:51:27.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.813" endtime="20201030 11:51:27.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.693" endtime="20201030 11:51:27.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.687" endtime="20201030 11:51:27.820"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.824" endtime="20201030 11:51:27.829"></status>
</kw>
<msg timestamp="20201030 11:51:27.830" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:27.822" endtime="20201030 11:51:27.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.841" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:27.839" endtime="20201030 11:51:27.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.846" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:27.844" endtime="20201030 11:51:27.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.833" endtime="20201030 11:51:27.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.858" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:27.855" endtime="20201030 11:51:27.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.862" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:27.860" endtime="20201030 11:51:27.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.849" endtime="20201030 11:51:27.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.883" endtime="20201030 11:51:28.245"></status>
</kw>
<msg timestamp="20201030 11:51:28.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140915583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140928333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.880" endtime="20201030 11:51:28.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140915583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140928333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.255" endtime="20201030 11:51:28.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.273" endtime="20201030 11:51:28.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.871" endtime="20201030 11:51:28.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.866" endtime="20201030 11:51:28.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.291" level="INFO">${RESULT} = [{'diff': 1.2749999999978057e-05}, {'diff': 1.2749999999978057e-05}, {'diff': 1.2708999999999637e-05}, {'diff': 1.2777999999991074e-05}, {'diff': 1.2763999999998443e-05}, {'diff': 1.281899999999725e-0...</msg>
<status status="PASS" starttime="20201030 11:51:28.282" endtime="20201030 11:51:28.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:28.301" level="INFO">${OVERHEAD} = {'diff': [1.2749999999978057e-05, 1.2749999999978057e-05, 1.2708999999999637e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.281899999999725e-05, 1.2750000000005812e-05, 1.2763999999998443e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:28.293" endtime="20201030 11:51:28.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.312" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:51:28.310" endtime="20201030 11:51:28.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.317" level="INFO">VALUE: [1.2749999999978057e-05, 1.2749999999978057e-05, 1.2708999999999637e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.281899999999725e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.272200000002055e-05, 1.2735999999985426e-05, 1.2735999999985426e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2694000000007533e-05, 1.276299999999897e-05, 1.2750000000005812e-05, 1.2735999999985426e-05, 1.2736000000013181e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.2749999999978057e-05, 1.2750000000005812e-05, 1.2735999999985426e-05, 1.2735999999985426e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2804999999976863e-05, 1.272200000002055e-05, 1.2749999999978057e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.2735999999985426e-05, 1.2764000000026199e-05, 1.2763999999998443e-05, 1.2694000000007533e-05, 1.2777000000019356e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2805000000004618e-05, 1.2749999999978057e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.314" endtime="20201030 11:51:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.302" endtime="20201030 11:51:28.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.682" endtime="20201030 11:51:28.321"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:27.538" endtime="20201030 11:51:28.324" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.344" endtime="20201030 11:51:28.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.340" endtime="20201030 11:51:28.367"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.403" endtime="20201030 11:51:28.429"></status>
</kw>
<msg timestamp="20201030 11:51:28.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.399" endtime="20201030 11:51:28.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.433" endtime="20201030 11:51:28.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.444" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:28.439" endtime="20201030 11:51:28.445"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:28.392" endtime="20201030 11:51:28.446"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:28.385" endtime="20201030 11:51:28.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.383" endtime="20201030 11:51:28.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:28.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:28.455" endtime="20201030 11:51:28.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.451" endtime="20201030 11:51:28.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.381" endtime="20201030 11:51:28.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.379" endtime="20201030 11:51:28.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.460" endtime="20201030 11:51:28.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.373" endtime="20201030 11:51:28.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.369" endtime="20201030 11:51:28.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.336" endtime="20201030 11:51:28.468"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.491" endtime="20201030 11:51:28.758"></status>
</kw>
<msg timestamp="20201030 11:51:28.759" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.488" endtime="20201030 11:51:28.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.766" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.761" endtime="20201030 11:51:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.768" endtime="20201030 11:51:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.480" endtime="20201030 11:51:28.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.475" endtime="20201030 11:51:28.775"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.780" endtime="20201030 11:51:28.785"></status>
</kw>
<msg timestamp="20201030 11:51:28.786" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:28.777" endtime="20201030 11:51:28.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.797" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:28.795" endtime="20201030 11:51:28.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.802" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:28.800" endtime="20201030 11:51:28.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.789" endtime="20201030 11:51:28.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.814" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:28.812" endtime="20201030 11:51:28.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.819" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:28.816" endtime="20201030 11:51:28.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.805" endtime="20201030 11:51:28.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.840" endtime="20201030 11:51:29.197"></status>
</kw>
<msg timestamp="20201030 11:51:29.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144167375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144191667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.836" endtime="20201030 11:51:29.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.144167375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.144191667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.206" endtime="20201030 11:51:29.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.225" endtime="20201030 11:51:29.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.829" endtime="20201030 11:51:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.824" endtime="20201030 11:51:29.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.242" level="INFO">${RESULT} = [{'diff': 2.4292000000009084e-05}, {'diff': 2.4236000000010804e-05}, {'diff': 2.4278000000016453e-05}, {'diff': 2.4222000000018173e-05}, {'diff': 2.4250000000003435e-05}, {'diff': 2.4264000000023822e-...</msg>
<status status="PASS" starttime="20201030 11:51:29.233" endtime="20201030 11:51:29.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:29.252" level="INFO">${OVERHEAD} = {'diff': [2.4292000000009084e-05, 2.4236000000010804e-05, 2.4278000000016453e-05, 2.4222000000018173e-05, 2.4250000000003435e-05, 2.4264000000023822e-05, 2.4236000000010804e-05, 2.4236000000010804e-05...</msg>
<status status="PASS" starttime="20201030 11:51:29.245" endtime="20201030 11:51:29.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.263" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:51:29.261" endtime="20201030 11:51:29.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.269" level="INFO">VALUE: [2.4292000000009084e-05, 2.4236000000010804e-05, 2.4278000000016453e-05, 2.4222000000018173e-05, 2.4250000000003435e-05, 2.4264000000023822e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.4236999999982523e-05, 2.424999999997568e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.423599999998305e-05, 2.423599999998305e-05, 2.4209000000025016e-05, 2.423599999998305e-05, 2.4237000000010278e-05, 2.4236999999982523e-05, 2.4222000000018173e-05, 2.422299999998989e-05, 2.4221999999962662e-05, 2.4222000000018173e-05, 2.4263999999996066e-05, 2.4222000000018173e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.420899999999726e-05, 2.4236000000010804e-05, 2.4221999999962662e-05, 2.4208000000025542e-05, 2.420799999997003e-05, 2.4250000000003435e-05, 2.4222000000018173e-05, 2.4250000000003435e-05, 2.4235999999955293e-05, 2.4250000000003435e-05, 2.420799999997003e-05, 2.4236000000010804e-05, 2.4235999999955293e-05, 2.4236000000010804e-05, 2.4236000000010804e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.418000000004028e-05, 2.4208000000025542e-05, 2.4222000000018173e-05, 2.4236000000010804e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.266" endtime="20201030 11:51:29.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.254" endtime="20201030 11:51:29.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.469" endtime="20201030 11:51:29.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:28.330" endtime="20201030 11:51:29.275" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.296" endtime="20201030 11:51:29.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.291" endtime="20201030 11:51:29.320"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.353" endtime="20201030 11:51:29.380"></status>
</kw>
<msg timestamp="20201030 11:51:29.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.350" endtime="20201030 11:51:29.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.383" endtime="20201030 11:51:29.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.394" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:29.390" endtime="20201030 11:51:29.395"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:29.343" endtime="20201030 11:51:29.397"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:29.336" endtime="20201030 11:51:29.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.333" endtime="20201030 11:51:29.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:29.407" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:29.406" endtime="20201030 11:51:29.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.401" endtime="20201030 11:51:29.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.332" endtime="20201030 11:51:29.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.330" endtime="20201030 11:51:29.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.411" endtime="20201030 11:51:29.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.326" endtime="20201030 11:51:29.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.321" endtime="20201030 11:51:29.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.287" endtime="20201030 11:51:29.418"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.428" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:29.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:31.373" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:29.424" endtime="20201030 11:51:31.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.380" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:31.377" endtime="20201030 11:51:31.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.420" endtime="20201030 11:51:31.383"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.392" endtime="20201030 11:51:31.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.388" endtime="20201030 11:51:31.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.441" endtime="20201030 11:51:31.450"></status>
</kw>
<msg timestamp="20201030 11:51:31.451" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.437" endtime="20201030 11:51:31.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.457" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.453" endtime="20201030 11:51:31.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.461" endtime="20201030 11:51:31.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.427" endtime="20201030 11:51:31.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.422" endtime="20201030 11:51:31.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.485" endtime="20201030 11:51:31.837"></status>
</kw>
<msg timestamp="20201030 11:51:31.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038099139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.038101111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:31.481" endtime="20201030 11:51:31.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038099139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.038101111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:31.846" endtime="20201030 11:51:31.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.866" endtime="20201030 11:51:31.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.474" endtime="20201030 11:51:31.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.469" endtime="20201030 11:51:31.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:31.883" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.5193999999996155e-05}, {'diff': 1.5069999999998973e-05}, {'diff': 1.49439...</msg>
<status status="PASS" starttime="20201030 11:51:31.875" endtime="20201030 11:51:31.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.893" level="INFO">${RESULT} = {'diff': [0, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5193999999996155e-05, 1.5069999999998973e-05, 1.4943999999995905e-05, 1.50689999999995e-05, 1.5028000000000263e-0...</msg>
<status status="PASS" starttime="20201030 11:51:31.886" endtime="20201030 11:51:31.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.904" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:31.902" endtime="20201030 11:51:31.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.911" level="INFO">VALUE: [0, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5193999999996155e-05, 1.5069999999998973e-05, 1.4943999999995905e-05, 1.50689999999995e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5069999999998973e-05, 1.4985999999994615e-05, 1.5209000000002137e-05, 1.5055999999999403e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5013999999993755e-05, 1.50689999999995e-05, 1.5014000000000693e-05, 1.5236000000001804e-05, 1.5013999999993755e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.4987000000001027e-05, 1.508299999999907e-05, 1.501300000000122e-05, 1.509699999999864e-05, 1.5180999999996059e-05, 1.5028000000000263e-05, 1.4971999999995045e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.50689999999995e-05, 1.4973000000001457e-05, 1.5207999999995725e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.5250000000001374e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5013999999993755e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.908" endtime="20201030 11:51:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.895" endtime="20201030 11:51:31.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.418" endtime="20201030 11:51:31.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.387" endtime="20201030 11:51:31.915"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.921" endtime="20201030 11:51:31.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.918" endtime="20201030 11:51:31.945"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.967" endtime="20201030 11:51:31.976"></status>
</kw>
<msg timestamp="20201030 11:51:31.978" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.963" endtime="20201030 11:51:31.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.985" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.980" endtime="20201030 11:51:31.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.987" endtime="20201030 11:51:31.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.956" endtime="20201030 11:51:31.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.951" endtime="20201030 11:51:31.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.011" endtime="20201030 11:51:32.362"></status>
</kw>
<msg timestamp="20201030 11:51:32.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035163694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035192569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.008" endtime="20201030 11:51:32.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035163694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035192569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.372" endtime="20201030 11:51:32.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.391" endtime="20201030 11:51:32.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.000" endtime="20201030 11:51:32.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.995" endtime="20201030 11:51:32.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:32.407" level="INFO">${PHILIP_RES} = [{'diff': 2.8874999999997653e-05}, {'diff': 2.8764000000000567e-05}, {'diff': 2.8846999999998513e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.884700000000545e-05}, {'diff': 2.8832999999998943e-0...</msg>
<status status="PASS" starttime="20201030 11:51:32.400" endtime="20201030 11:51:32.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.419" level="INFO">${RESULT} = {'diff': [2.8874999999997653e-05, 2.8764000000000567e-05, 2.8846999999998513e-05, 2.8750000000000997e-05, 2.884700000000545e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.8832999999998943e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:32.410" endtime="20201030 11:51:32.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.430" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:32.427" endtime="20201030 11:51:32.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.435" level="INFO">VALUE: [2.8874999999997653e-05, 2.8764000000000567e-05, 2.8846999999998513e-05, 2.8750000000000997e-05, 2.884700000000545e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.8791999999999707e-05, 2.884700000000545e-05, 2.8819999999998847e-05, 2.8846999999998513e-05, 2.8819999999998847e-05, 2.8763000000001093e-05, 2.884700000000545e-05, 2.8819999999998847e-05, 2.8818999999999373e-05, 2.8819999999998847e-05, 2.8804999999999803e-05, 2.8805999999999277e-05, 2.8832999999998943e-05, 2.8847999999997986e-05, 2.8833000000005882e-05, 2.8847999999997986e-05, 2.8846999999998513e-05, 2.8805999999999277e-05, 2.8846999999998513e-05, 2.8834000000005355e-05, 2.8818999999999373e-05, 2.8833999999998416e-05, 2.884700000000545e-05, 2.8833999999998416e-05, 2.8804999999999803e-05, 2.8834000000005355e-05, 2.8846999999998513e-05, 2.8805999999999277e-05, 2.8832999999998943e-05, 2.8860999999998083e-05, 2.886100000000502e-05, 2.8833999999998416e-05, 2.8818999999999373e-05, 2.8819999999998847e-05, 2.8832999999998943e-05, 2.8820000000005785e-05, 2.8804999999999803e-05, 2.8805999999999277e-05, 2.8846999999998513e-05, 2.8846999999998513e-05, 2.8848000000004925e-05, 2.8804999999999803e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.432" endtime="20201030 11:51:32.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.421" endtime="20201030 11:51:32.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.946" endtime="20201030 11:51:32.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.916" endtime="20201030 11:51:32.439"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.445" endtime="20201030 11:51:32.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.441" endtime="20201030 11:51:32.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.490" endtime="20201030 11:51:32.501"></status>
</kw>
<msg timestamp="20201030 11:51:32.503" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.487" endtime="20201030 11:51:32.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.509" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.505" endtime="20201030 11:51:32.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.511" endtime="20201030 11:51:32.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.480" endtime="20201030 11:51:32.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.474" endtime="20201030 11:51:32.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.535" endtime="20201030 11:51:32.886"></status>
</kw>
<msg timestamp="20201030 11:51:32.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034730097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034771986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.532" endtime="20201030 11:51:32.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034730097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034771986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.896" endtime="20201030 11:51:32.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.916" endtime="20201030 11:51:32.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.524" endtime="20201030 11:51:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.520" endtime="20201030 11:51:32.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:32.932" level="INFO">${PHILIP_RES} = [{'diff': 4.1888999999996346e-05}, {'diff': 4.258400000000523e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.2596999999998386e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.256999999999872e-05...</msg>
<status status="PASS" starttime="20201030 11:51:32.925" endtime="20201030 11:51:32.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.944" level="INFO">${RESULT} = {'diff': [4.1888999999996346e-05, 4.258400000000523e-05, 4.2582999999998816e-05, 4.2596999999998386e-05, 4.2582999999998816e-05, 4.256999999999872e-05, 4.2596999999998386e-05, 4.2611000000004895e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:32.934" endtime="20201030 11:51:32.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.955" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:32.952" endtime="20201030 11:51:32.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.960" level="INFO">VALUE: [4.1888999999996346e-05, 4.258400000000523e-05, 4.2582999999998816e-05, 4.2596999999998386e-05, 4.2582999999998816e-05, 4.256999999999872e-05, 4.2596999999998386e-05, 4.2611000000004895e-05, 4.251400000000044e-05, 4.2582999999998816e-05, 4.255599999999915e-05, 4.2568999999999246e-05, 4.2582999999998816e-05, 4.251400000000044e-05, 4.2596999999998386e-05, 4.255599999999915e-05, 4.2568999999999246e-05, 4.25980000000048e-05, 4.2610999999997956e-05, 4.258400000000523e-05, 4.2582999999998816e-05, 4.2541000000000107e-05, 4.2582999999998816e-05, 4.2569000000006185e-05, 4.2582999999998816e-05, 4.2597000000005325e-05, 4.261199999999743e-05, 4.2597000000005325e-05, 4.258399999999829e-05, 4.2597000000005325e-05, 4.2582999999998816e-05, 4.2639000000004035e-05, 4.2596999999998386e-05, 4.2625000000004465e-05, 4.256999999999872e-05, 4.2610999999997956e-05, 4.258399999999829e-05, 4.2554999999999676e-05, 4.251300000000097e-05, 4.2596999999998386e-05, 4.2596999999998386e-05, 4.258399999999829e-05, 4.2582999999998816e-05, 4.2666999999996236e-05, 4.2582999999998816e-05, 4.25980000000048e-05, 4.2582999999998816e-05, 4.2625000000004465e-05, 4.2610999999997956e-05, 4.2568999999999246e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.957" endtime="20201030 11:51:32.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.946" endtime="20201030 11:51:32.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.470" endtime="20201030 11:51:32.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.440" endtime="20201030 11:51:32.965"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.970" endtime="20201030 11:51:32.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.967" endtime="20201030 11:51:32.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.023" endtime="20201030 11:51:33.035"></status>
</kw>
<msg timestamp="20201030 11:51:33.036" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.012" endtime="20201030 11:51:33.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.042" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.038" endtime="20201030 11:51:33.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.045" endtime="20201030 11:51:33.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.005" endtime="20201030 11:51:33.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.999" endtime="20201030 11:51:33.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.069" endtime="20201030 11:51:33.426"></status>
</kw>
<msg timestamp="20201030 11:51:33.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04276225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042817722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:33.065" endtime="20201030 11:51:33.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04276225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042817722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:33.435" endtime="20201030 11:51:33.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.455" endtime="20201030 11:51:33.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.058" endtime="20201030 11:51:33.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.053" endtime="20201030 11:51:33.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:33.471" level="INFO">${PHILIP_RES} = [{'diff': 5.5472000000000854e-05}, {'diff': 5.53619999999963e-05}, {'diff': 5.53470000000042e-05}, {'diff': 5.541700000000205e-05}, {'diff': 5.53470000000042e-05}, {'diff': 5.53619999999963e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:33.463" endtime="20201030 11:51:33.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.481" level="INFO">${RESULT} = {'diff': [5.5472000000000854e-05, 5.53619999999963e-05, 5.53470000000042e-05, 5.541700000000205e-05, 5.53470000000042e-05, 5.53619999999963e-05, 5.536099999999683e-05, 5.536100000000377e-05, 5.5360999...</msg>
<status status="PASS" starttime="20201030 11:51:33.473" endtime="20201030 11:51:33.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.491" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:33.489" endtime="20201030 11:51:33.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.497" level="INFO">VALUE: [5.5472000000000854e-05, 5.53619999999963e-05, 5.53470000000042e-05, 5.541700000000205e-05, 5.53470000000042e-05, 5.53619999999963e-05, 5.536099999999683e-05, 5.536100000000377e-05, 5.536099999999683e-05, 5.536200000000324e-05, 5.536099999999683e-05, 5.534699999999726e-05, 5.536099999999683e-05, 5.533399999999716e-05, 5.537500000000334e-05, 5.538899999999597e-05, 5.53340000000041e-05, 5.536099999999683e-05, 5.53470000000042e-05, 5.536099999999683e-05, 5.537500000000334e-05, 5.5416000000002574e-05, 5.536100000000377e-05, 5.536099999999683e-05, 5.531999999999759e-05, 5.536100000000377e-05, 5.53749999999964e-05, 5.536100000000377e-05, 5.534699999999726e-05, 5.541700000000205e-05, 5.531999999999759e-05, 5.53470000000042e-05, 5.533299999999769e-05, 5.532000000000453e-05, 5.533299999999769e-05, 5.536200000000324e-05, 5.536099999999683e-05, 5.538900000000291e-05, 5.537500000000334e-05, 5.533299999999769e-05, 5.536100000000377e-05, 5.534699999999726e-05, 5.53470000000042e-05, 5.531999999999759e-05, 5.53470000000042e-05, 5.53749999999964e-05, 5.534699999999726e-05, 5.536100000000377e-05, 5.533299999999769e-05, 5.537500000000334e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.494" endtime="20201030 11:51:33.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.483" endtime="20201030 11:51:33.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.995" endtime="20201030 11:51:33.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.965" endtime="20201030 11:51:33.501"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.507" endtime="20201030 11:51:33.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.503" endtime="20201030 11:51:33.531"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.553" endtime="20201030 11:51:33.566"></status>
</kw>
<msg timestamp="20201030 11:51:33.567" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.549" endtime="20201030 11:51:33.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.574" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.570" endtime="20201030 11:51:33.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.576" endtime="20201030 11:51:33.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.541" endtime="20201030 11:51:33.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.536" endtime="20201030 11:51:33.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.599" endtime="20201030 11:51:33.953"></status>
</kw>
<msg timestamp="20201030 11:51:33.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036783667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036853875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.596" endtime="20201030 11:51:33.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036783667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036853875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.963" endtime="20201030 11:51:33.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.982" endtime="20201030 11:51:33.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.589" endtime="20201030 11:51:33.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.584" endtime="20201030 11:51:33.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:33.998" level="INFO">${PHILIP_RES} = [{'diff': 7.020800000000216e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.015300000000335e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.015200000000388e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.990" endtime="20201030 11:51:33.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.007" level="INFO">${RESULT} = {'diff': [7.020800000000216e-05, 7.012499999999727e-05, 7.012499999999727e-05, 7.015300000000335e-05, 7.012499999999727e-05, 7.015200000000388e-05, 7.013799999999737e-05, 7.013899999999684e-05, 7.0097...</msg>
<status status="PASS" starttime="20201030 11:51:34.000" endtime="20201030 11:51:34.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.018" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:34.016" endtime="20201030 11:51:34.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.024" level="INFO">VALUE: [7.020800000000216e-05, 7.012499999999727e-05, 7.012499999999727e-05, 7.015300000000335e-05, 7.012499999999727e-05, 7.015200000000388e-05, 7.013799999999737e-05, 7.013899999999684e-05, 7.009700000000507e-05, 7.013899999999684e-05, 7.013900000000378e-05, 7.013900000000378e-05, 7.013899999999684e-05, 7.018100000000249e-05, 7.015299999999641e-05, 7.012499999999727e-05, 7.016700000000292e-05, 7.012499999999727e-05, 7.012499999999727e-05, 7.01109999999977e-05, 7.01109999999977e-05, 7.015300000000335e-05, 7.013899999999684e-05, 7.016599999999651e-05, 7.019400000000259e-05, 7.011199999999718e-05, 7.013900000000378e-05, 7.013900000000378e-05, 7.015299999999641e-05, 7.015300000000335e-05, 7.013899999999684e-05, 7.01109999999977e-05, 7.015300000000335e-05, 7.012499999999727e-05, 7.016700000000292e-05, 7.012499999999727e-05, 7.013899999999684e-05, 7.015300000000335e-05, 7.013900000000378e-05, 7.015299999999641e-05, 7.012499999999727e-05, 7.012500000000421e-05, 7.012499999999727e-05, 7.015300000000335e-05, 7.013900000000378e-05, 7.012499999999727e-05, 7.013900000000378e-05, 7.013899999999684e-05, 7.013899999999684e-05, 7.013900000000378e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.020" endtime="20201030 11:51:34.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.009" endtime="20201030 11:51:34.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.532" endtime="20201030 11:51:34.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.502" endtime="20201030 11:51:34.028"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.034" endtime="20201030 11:51:34.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.030" endtime="20201030 11:51:34.058"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.082" endtime="20201030 11:51:34.094"></status>
</kw>
<msg timestamp="20201030 11:51:34.096" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.079" endtime="20201030 11:51:34.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.105" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.100" endtime="20201030 11:51:34.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.109" endtime="20201030 11:51:34.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.071" endtime="20201030 11:51:34.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.064" endtime="20201030 11:51:34.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.134" endtime="20201030 11:51:34.489"></status>
</kw>
<msg timestamp="20201030 11:51:34.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037863097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037949111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.131" endtime="20201030 11:51:34.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037863097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037949111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.499" endtime="20201030 11:51:34.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.519" endtime="20201030 11:51:34.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.124" endtime="20201030 11:51:34.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.118" endtime="20201030 11:51:34.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:34.537" level="INFO">${PHILIP_RES} = [{'diff': 8.601400000000231e-05}, {'diff': 8.5944999999997e-05}, {'diff': 8.594399999999752e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.590299999999829e-05}, {'diff': 8.5944999999997e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:51:34.529" endtime="20201030 11:51:34.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.547" level="INFO">${RESULT} = {'diff': [8.601400000000231e-05, 8.5944999999997e-05, 8.594399999999752e-05, 8.586099999999958e-05, 8.590299999999829e-05, 8.5944999999997e-05, 8.591699999999786e-05, 8.591599999999838e-05, 8.59169999...</msg>
<status status="PASS" starttime="20201030 11:51:34.540" endtime="20201030 11:51:34.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.558" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:34.555" endtime="20201030 11:51:34.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.565" level="INFO">VALUE: [8.601400000000231e-05, 8.5944999999997e-05, 8.594399999999752e-05, 8.586099999999958e-05, 8.590299999999829e-05, 8.5944999999997e-05, 8.591699999999786e-05, 8.591599999999838e-05, 8.591699999999786e-05, 8.590299999999829e-05, 8.5944999999997e-05, 8.591699999999786e-05, 8.591599999999838e-05, 8.591599999999838e-05, 8.592999999999795e-05, 8.591699999999786e-05, 8.594400000000446e-05, 8.591600000000532e-05, 8.593100000000437e-05, 8.591699999999786e-05, 8.59999999999958e-05, 8.5944999999997e-05, 8.588899999999872e-05, 8.592999999999795e-05, 8.590299999999829e-05, 8.591699999999786e-05, 8.594399999999752e-05, 8.590199999999881e-05, 8.595800000000403e-05, 8.591699999999786e-05, 8.594400000000446e-05, 8.593000000000489e-05, 8.590300000000523e-05, 8.588900000000566e-05, 8.590300000000523e-05, 8.588900000000566e-05, 8.590299999999829e-05, 8.588899999999872e-05, 8.590299999999829e-05, 8.590299999999829e-05, 8.590299999999829e-05, 8.591599999999838e-05, 8.594400000000446e-05, 8.590300000000523e-05, 8.59170000000048e-05, 8.584799999999948e-05, 8.588800000000618e-05, 8.593000000000489e-05, 8.588899999999872e-05, 8.59170000000048e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.560" endtime="20201030 11:51:34.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.549" endtime="20201030 11:51:34.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.059" endtime="20201030 11:51:34.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.029" endtime="20201030 11:51:34.569"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.575" endtime="20201030 11:51:34.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.572" endtime="20201030 11:51:34.599"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.621" endtime="20201030 11:51:34.635"></status>
</kw>
<msg timestamp="20201030 11:51:34.636" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.618" endtime="20201030 11:51:34.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.643" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.639" endtime="20201030 11:51:34.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.645" endtime="20201030 11:51:34.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.610" endtime="20201030 11:51:34.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.605" endtime="20201030 11:51:34.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.669" endtime="20201030 11:51:35.021"></status>
</kw>
<msg timestamp="20201030 11:51:35.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035950778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036051597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.665" endtime="20201030 11:51:35.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035950778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036051597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.031" endtime="20201030 11:51:35.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.049" endtime="20201030 11:51:35.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.658" endtime="20201030 11:51:35.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.653" endtime="20201030 11:51:35.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:35.065" level="INFO">${PHILIP_RES} = [{'diff': 0.00010081899999999505}, {'diff': 0.0001007359999999971}, {'diff': 0.00010070899999999744}, {'diff': 0.00010070799999999797}, {'diff': 0.0001007359999999971}, {'diff': 0.0001007359999999971}...</msg>
<status status="PASS" starttime="20201030 11:51:35.058" endtime="20201030 11:51:35.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.076" level="INFO">${RESULT} = {'diff': [0.00010081899999999505, 0.0001007359999999971, 0.00010070899999999744, 0.00010070799999999797, 0.0001007359999999971, 0.0001007359999999971, 0.0001007359999999971, 0.0001007359999999971, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:35.067" endtime="20201030 11:51:35.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.087" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:35.084" endtime="20201030 11:51:35.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.092" level="INFO">VALUE: [0.00010081899999999505, 0.0001007359999999971, 0.00010070899999999744, 0.00010070799999999797, 0.0001007359999999971, 0.0001007359999999971, 0.0001007359999999971, 0.0001007359999999971, 0.00010082000000000146, 0.0001007359999999971, 0.00010074999999999668, 0.0001007359999999971, 0.00010072199999999754, 0.00010072199999999754, 0.00010072299999999701, 0.00010072199999999754, 0.00010072199999999754, 0.0001007359999999971, 0.00010075000000000361, 0.00010074999999999668, 0.00010075000000000361, 0.00010073700000000352, 0.00010073600000000404, 0.00010072200000000447, 0.00010075000000000361, 0.00010075000000000361, 0.00010072200000000447, 0.00010073700000000352, 0.00010073600000000404, 0.0001007359999999971, 0.00010074999999999668, 0.0001007359999999971, 0.00010072199999999754, 0.00010072199999999754, 0.00010070899999999744, 0.00010074999999999668, 0.00010077799999999582, 0.00010072199999999754, 0.0001007359999999971, 0.00010072199999999754, 0.00010072199999999754, 0.00010072199999999754, 0.00010073699999999658, 0.00010075000000000361, 0.0001006809999999983, 0.00010068100000000524, 0.00010076400000000318, 0.00010073600000000404, 0.00010072300000000395, 0.00010069500000000481]</msg>
<status status="PASS" starttime="20201030 11:51:35.089" endtime="20201030 11:51:35.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.078" endtime="20201030 11:51:35.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.601" endtime="20201030 11:51:35.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.570" endtime="20201030 11:51:35.096"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.103" endtime="20201030 11:51:35.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.098" endtime="20201030 11:51:35.126"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.148" endtime="20201030 11:51:35.162"></status>
</kw>
<msg timestamp="20201030 11:51:35.164" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.144" endtime="20201030 11:51:35.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.170" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.166" endtime="20201030 11:51:35.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.173" endtime="20201030 11:51:35.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.137" endtime="20201030 11:51:35.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.132" endtime="20201030 11:51:35.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.196" endtime="20201030 11:51:35.548"></status>
</kw>
<msg timestamp="20201030 11:51:35.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034841264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034958583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.193" endtime="20201030 11:51:35.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034841264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034958583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.557" endtime="20201030 11:51:35.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.576" endtime="20201030 11:51:35.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.185" endtime="20201030 11:51:35.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.181" endtime="20201030 11:51:35.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:35.592" level="INFO">${PHILIP_RES} = [{'diff': 0.00011731900000000461}, {'diff': 0.00011748599999999998}, {'diff': 0.00011754099999999879}, {'diff': 0.00011751399999999912}, {'diff': 0.00011749999999999955}, {'diff': 0.000117459000000000...</msg>
<status status="PASS" starttime="20201030 11:51:35.584" endtime="20201030 11:51:35.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.603" level="INFO">${RESULT} = {'diff': [0.00011731900000000461, 0.00011748599999999998, 0.00011754099999999879, 0.00011751399999999912, 0.00011749999999999955, 0.00011745900000000031, 0.00011752799999999869, 0.00011749999999999955...</msg>
<status status="PASS" starttime="20201030 11:51:35.594" endtime="20201030 11:51:35.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.614" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:35.612" endtime="20201030 11:51:35.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.619" level="INFO">VALUE: [0.00011731900000000461, 0.00011748599999999998, 0.00011754099999999879, 0.00011751399999999912, 0.00011749999999999955, 0.00011745900000000031, 0.00011752799999999869, 0.00011749999999999955, 0.00011749999999999955, 0.00011748599999999998, 0.00011748599999999998, 0.00011754199999999826, 0.00011745900000000031, 0.00011745800000000084, 0.00011749999999999955, 0.00011751399999999912, 0.00011747299999999988, 0.00011755499999999836, 0.00011749999999999955, 0.00011755499999999836, 0.00011754100000000572, 0.00011745800000000084, 0.00011751399999999912, 0.00011748599999999998, 0.00011744500000000074, 0.00011747200000000041, 0.00011748599999999998, 0.00011747299999999988, 0.00011745900000000031, 0.0001174579999999939, 0.00011752799999999869, 0.00011747299999999988, 0.00011747200000000041, 0.00011747200000000041, 0.00011748599999999998, 0.00011748599999999998, 0.0001175420000000052, 0.00011748699999999945, 0.00011747200000000041, 0.00011747200000000041, 0.00011747200000000041, 0.00011744400000000127, 0.0001175699999999974, 0.00011748599999999998, 0.00011749999999999955, 0.00011747200000000041, 0.00011751299999999965, 0.00011747299999999988, 0.00011749999999999955, 0.00011748599999999998]</msg>
<status status="PASS" starttime="20201030 11:51:35.616" endtime="20201030 11:51:35.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.605" endtime="20201030 11:51:35.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.128" endtime="20201030 11:51:35.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.097" endtime="20201030 11:51:35.624"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.630" endtime="20201030 11:51:35.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.626" endtime="20201030 11:51:35.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.675" endtime="20201030 11:51:35.691"></status>
</kw>
<msg timestamp="20201030 11:51:35.692" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.672" endtime="20201030 11:51:35.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.699" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.694" endtime="20201030 11:51:35.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.701" endtime="20201030 11:51:35.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.665" endtime="20201030 11:51:35.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.659" endtime="20201030 11:51:35.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.724" endtime="20201030 11:51:36.077"></status>
</kw>
<msg timestamp="20201030 11:51:36.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034950278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035085667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.721" endtime="20201030 11:51:36.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034950278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035085667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.087" endtime="20201030 11:51:36.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.105" endtime="20201030 11:51:36.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.714" endtime="20201030 11:51:36.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.709" endtime="20201030 11:51:36.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:36.122" level="INFO">${PHILIP_RES} = [{'diff': 0.00013538899999999965}, {'diff': 0.000135264000000003}, {'diff': 0.00013526299999999658}, {'diff': 0.00013527799999999562}, {'diff': 0.0001353610000000005}, {'diff': 0.00013527800000000256}...</msg>
<status status="PASS" starttime="20201030 11:51:36.114" endtime="20201030 11:51:36.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.131" level="INFO">${RESULT} = {'diff': [0.00013538899999999965, 0.000135264000000003, 0.00013526299999999658, 0.00013527799999999562, 0.0001353610000000005, 0.00013527800000000256, 0.000135264000000003, 0.000135264000000003, 0.000...</msg>
<status status="PASS" starttime="20201030 11:51:36.124" endtime="20201030 11:51:36.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.141" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:36.139" endtime="20201030 11:51:36.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.147" level="INFO">VALUE: [0.00013538899999999965, 0.000135264000000003, 0.00013526299999999658, 0.00013527799999999562, 0.0001353610000000005, 0.00013527800000000256, 0.000135264000000003, 0.000135264000000003, 0.00013527800000000256, 0.00013524999999999648, 0.00013527800000000256, 0.00013525000000000342, 0.00013529100000000266, 0.00013523599999999691, 0.00013524999999999648, 0.00013524999999999648, 0.00013527800000000256, 0.00013525000000000342, 0.00013523599999999691, 0.0001352919999999952, 0.00013520799999999777, 0.000135264000000003, 0.00013527800000000256, 0.00013517999999999863, 0.00013527799999999562, 0.00013526399999999605, 0.000135264000000003, 0.00013527800000000256, 0.00013527800000000256, 0.00013526399999999605, 0.00013523599999999691, 0.00013527800000000256, 0.00013523600000000385, 0.00013523599999999691, 0.00013526399999999605, 0.00013523599999999691, 0.00013530500000000223, 0.000135264000000003, 0.00013526399999999605, 0.00013531899999999486, 0.00013529200000000213, 0.000135264000000003, 0.00013527800000000256, 0.00013525000000000342, 0.00013526399999999605, 0.00013523599999999691, 0.00013527800000000256, 0.00013527800000000256, 0.0001352770000000031, 0.0001352770000000031]</msg>
<status status="PASS" starttime="20201030 11:51:36.144" endtime="20201030 11:51:36.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.133" endtime="20201030 11:51:36.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.655" endtime="20201030 11:51:36.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.625" endtime="20201030 11:51:36.152"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.158" endtime="20201030 11:51:36.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.154" endtime="20201030 11:51:36.182"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.203" endtime="20201030 11:51:36.220"></status>
</kw>
<msg timestamp="20201030 11:51:36.221" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.200" endtime="20201030 11:51:36.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.227" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.223" endtime="20201030 11:51:36.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.230" endtime="20201030 11:51:36.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.192" endtime="20201030 11:51:36.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.187" endtime="20201030 11:51:36.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.255" endtime="20201030 11:51:36.607"></status>
</kw>
<msg timestamp="20201030 11:51:36.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035273264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035427292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.251" endtime="20201030 11:51:36.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035273264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035427292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.616" endtime="20201030 11:51:36.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.635" endtime="20201030 11:51:36.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.244" endtime="20201030 11:51:36.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.240" endtime="20201030 11:51:36.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:36.651" level="INFO">${PHILIP_RES} = [{'diff': 0.0001540280000000005}, {'diff': 0.00015401300000000145}, {'diff': 0.0001540410000000006}, {'diff': 0.0001540280000000005}, {'diff': 0.0001540280000000005}, {'diff': 0.0001540280000000005}, ...</msg>
<status status="PASS" starttime="20201030 11:51:36.644" endtime="20201030 11:51:36.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.660" level="INFO">${RESULT} = {'diff': [0.0001540280000000005, 0.00015401300000000145, 0.0001540410000000006, 0.0001540280000000005, 0.0001540280000000005, 0.0001540280000000005, 0.0001540280000000005, 0.0001539860000000018, 0.000...</msg>
<status status="PASS" starttime="20201030 11:51:36.653" endtime="20201030 11:51:36.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.671" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:36.669" endtime="20201030 11:51:36.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.676" level="INFO">VALUE: [0.0001540280000000005, 0.00015401300000000145, 0.0001540410000000006, 0.0001540280000000005, 0.0001540280000000005, 0.0001540280000000005, 0.0001540280000000005, 0.0001539860000000018, 0.00015404200000000007, 0.00015404200000000007, 0.00015406899999999973, 0.00015401400000000093, 0.00015405599999999964, 0.00015405500000000016, 0.00015409800000000529, 0.0001540829999999993, 0.0001540699999999992, 0.00015405500000000016, 0.0001539860000000018, 0.00015400000000000136, 0.00015404200000000007, 0.00015405500000000016, 0.00015404200000000007, 0.00015406899999999973, 0.00015409800000000529, 0.00015405500000000016, 0.0001540280000000005, 0.00015406899999999973, 0.00015408399999999878, 0.00015402700000000102, 0.0001539860000000018, 0.00015405599999999964, 0.0001540410000000006, 0.00015406899999999973, 0.00015401400000000093, 0.00015402700000000102, 0.00015399999999999442, 0.00015408300000000624, 0.00015405499999999323, 0.00015404200000000007, 0.00015405599999999964, 0.0001540280000000005, 0.00015404200000000007, 0.00015406899999999973, 0.00015406899999999973, 0.0001540699999999992, 0.00015405500000000016, 0.0001540410000000006, 0.0001540280000000005, 0.00015401400000000093]</msg>
<status status="PASS" starttime="20201030 11:51:36.673" endtime="20201030 11:51:36.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.662" endtime="20201030 11:51:36.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.183" endtime="20201030 11:51:36.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.153" endtime="20201030 11:51:36.682"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.687" endtime="20201030 11:51:36.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.684" endtime="20201030 11:51:36.711"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.734" endtime="20201030 11:51:36.751"></status>
</kw>
<msg timestamp="20201030 11:51:36.753" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.731" endtime="20201030 11:51:36.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.759" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.755" endtime="20201030 11:51:36.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.761" endtime="20201030 11:51:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.723" endtime="20201030 11:51:36.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.718" endtime="20201030 11:51:36.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.785" endtime="20201030 11:51:37.137"></status>
</kw>
<msg timestamp="20201030 11:51:37.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036313667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036486139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.782" endtime="20201030 11:51:37.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036313667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036486139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.146" endtime="20201030 11:51:37.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.164" endtime="20201030 11:51:37.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.774" endtime="20201030 11:51:37.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.770" endtime="20201030 11:51:37.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:37.180" level="INFO">${PHILIP_RES} = [{'diff': 0.0001724719999999999}, {'diff': 0.00017183299999999624}, {'diff': 0.00017182000000000308}, {'diff': 0.00017181899999999667}, {'diff': 0.00017182000000000308}, {'diff': 0.0001718330000000031...</msg>
<status status="PASS" starttime="20201030 11:51:37.173" endtime="20201030 11:51:37.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.189" level="INFO">${RESULT} = {'diff': [0.0001724719999999999, 0.00017183299999999624, 0.00017182000000000308, 0.00017181899999999667, 0.00017182000000000308, 0.00017183300000000318, 0.0001718339999999957, 0.0001718060000000035, 0...</msg>
<status status="PASS" starttime="20201030 11:51:37.182" endtime="20201030 11:51:37.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.200" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:37.197" endtime="20201030 11:51:37.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.207" level="INFO">VALUE: [0.0001724719999999999, 0.00017183299999999624, 0.00017182000000000308, 0.00017181899999999667, 0.00017182000000000308, 0.00017183300000000318, 0.0001718339999999957, 0.0001718060000000035, 0.0001718049999999971, 0.0001718060000000035, 0.00017183299999999624, 0.00017182000000000308, 0.00017183299999999624, 0.00017190300000000103, 0.00017183400000000265, 0.00017183299999999624, 0.0001718060000000035, 0.0001718049999999971, 0.000171791999999997, 0.00017179200000000394, 0.00017172199999999915, 0.0001717499999999983, 0.0001718049999999971, 0.0001718060000000035, 0.00017179099999999753, 0.000171791999999997, 0.00017179200000000394, 0.00017177699999999796, 0.0001718049999999971, 0.00017177699999999796, 0.00017179200000000394, 0.00017177799999999743, 0.00017179099999999753, 0.00017173600000000566, 0.00017177799999999743, 0.00017181899999999667, 0.0001718060000000035, 0.00017176399999999786, 0.00017177699999999796, 0.00017179200000000394, 0.00017177800000000437, 0.00017180599999999657, 0.00017183400000000265, 0.0001718049999999971, 0.000171791999999997, 0.00017182000000000308, 0.00017180599999999657, 0.0001717770000000049, 0.00017184700000000275, 0.0001718049999999971]</msg>
<status status="PASS" starttime="20201030 11:51:37.202" endtime="20201030 11:51:37.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.191" endtime="20201030 11:51:37.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.712" endtime="20201030 11:51:37.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.682" endtime="20201030 11:51:37.212"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.218" endtime="20201030 11:51:37.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.214" endtime="20201030 11:51:37.241"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.262" endtime="20201030 11:51:37.281"></status>
</kw>
<msg timestamp="20201030 11:51:37.282" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.259" endtime="20201030 11:51:37.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.288" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.284" endtime="20201030 11:51:37.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.290" endtime="20201030 11:51:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.252" endtime="20201030 11:51:37.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.246" endtime="20201030 11:51:37.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.314" endtime="20201030 11:51:37.669"></status>
</kw>
<msg timestamp="20201030 11:51:37.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034530083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034721639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.310" endtime="20201030 11:51:37.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034530083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034721639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.679" endtime="20201030 11:51:37.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.697" endtime="20201030 11:51:37.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.303" endtime="20201030 11:51:37.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.298" endtime="20201030 11:51:37.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:37.713" level="INFO">${PHILIP_RES} = [{'diff': 0.0001915559999999955}, {'diff': 0.00019161100000000125}, {'diff': 0.00019161100000000125}, {'diff': 0.0001916390000000004}, {'diff': 0.00019159699999999474}, {'diff': 0.00019158400000000159...</msg>
<status status="PASS" starttime="20201030 11:51:37.705" endtime="20201030 11:51:37.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.723" level="INFO">${RESULT} = {'diff': [0.0001915559999999955, 0.00019161100000000125, 0.00019161100000000125, 0.0001916390000000004, 0.00019159699999999474, 0.00019158400000000159, 0.00019161099999999431, 0.00019162500000000082, ...</msg>
<status status="PASS" starttime="20201030 11:51:37.715" endtime="20201030 11:51:37.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.734" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:37.731" endtime="20201030 11:51:37.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.739" level="INFO">VALUE: [0.0001915559999999955, 0.00019161100000000125, 0.00019161100000000125, 0.0001916390000000004, 0.00019159699999999474, 0.00019158400000000159, 0.00019161099999999431, 0.00019162500000000082, 0.00019161100000000125, 0.00019165299999999996, 0.0001916390000000004, 0.00019166600000000006, 0.0001915689999999956, 0.00019162500000000082, 0.00019166699999999953, 0.00019162500000000082, 0.00019161100000000125, 0.00019162500000000082, 0.00019159700000000168, 0.00019162500000000082, 0.00019161100000000125, 0.0001916390000000004, 0.00019166699999999953, 0.00019161100000000125, 0.00019165299999999996, 0.00019162499999999388, 0.00019161100000000125, 0.00019159700000000168, 0.00019161100000000125, 0.00019161200000000073, 0.00019162500000000082, 0.00019162500000000082, 0.00019159700000000168, 0.00019161100000000125, 0.0001916390000000004, 0.00019157000000000202, 0.00019161100000000125, 0.0001915830000000021, 0.00019149999999999723, 0.00019161100000000125, 0.00019162500000000082, 0.00019166699999999953, 0.00019162500000000082, 0.0001916390000000004, 0.00019162500000000082, 0.00019165299999999996, 0.00019162500000000082, 0.0001916520000000005, 0.00019161200000000073, 0.00019162500000000082]</msg>
<status status="PASS" starttime="20201030 11:51:37.736" endtime="20201030 11:51:37.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.725" endtime="20201030 11:51:37.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.242" endtime="20201030 11:51:37.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.213" endtime="20201030 11:51:37.744"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.750" endtime="20201030 11:51:37.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.746" endtime="20201030 11:51:37.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.794" endtime="20201030 11:51:37.814"></status>
</kw>
<msg timestamp="20201030 11:51:37.815" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.791" endtime="20201030 11:51:37.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.821" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.817" endtime="20201030 11:51:37.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.823" endtime="20201030 11:51:37.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.784" endtime="20201030 11:51:37.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.779" endtime="20201030 11:51:37.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.847" endtime="20201030 11:51:38.196"></status>
</kw>
<msg timestamp="20201030 11:51:38.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034311847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034524458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.843" endtime="20201030 11:51:38.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034311847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034524458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.205" endtime="20201030 11:51:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.223" endtime="20201030 11:51:38.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.836" endtime="20201030 11:51:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.832" endtime="20201030 11:51:38.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:38.239" level="INFO">${PHILIP_RES} = [{'diff': 0.00021261100000000144}, {'diff': 0.00021237500000000076}, {'diff': 0.0002123480000000011}, {'diff': 0.00021233300000000205}, {'diff': 0.0002123610000000012}, {'diff': 0.000212319999999995},...</msg>
<status status="PASS" starttime="20201030 11:51:38.232" endtime="20201030 11:51:38.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.250" level="INFO">${RESULT} = {'diff': [0.00021261100000000144, 0.00021237500000000076, 0.0002123480000000011, 0.00021233300000000205, 0.0002123610000000012, 0.000212319999999995, 0.00021233300000000205, 0.00021233300000000205, 0....</msg>
<status status="PASS" starttime="20201030 11:51:38.241" endtime="20201030 11:51:38.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.261" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:38.258" endtime="20201030 11:51:38.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.266" level="INFO">VALUE: [0.00021261100000000144, 0.00021237500000000076, 0.0002123480000000011, 0.00021233300000000205, 0.0002123610000000012, 0.000212319999999995, 0.00021233300000000205, 0.00021233300000000205, 0.00021236200000000066, 0.0002123480000000011, 0.00021231900000000248, 0.00021234699999999468, 0.0002123610000000012, 0.00021238800000000085, 0.0002123329999999951, 0.00021234700000000162, 0.0002123610000000012, 0.00021234699999999468, 0.00021237500000000076, 0.00021232000000000195, 0.00021238900000000033, 0.00021233300000000205, 0.00021234700000000162, 0.000212319999999995, 0.00021234700000000162, 0.0002123610000000012, 0.0002123610000000012, 0.00021233400000000152, 0.0002123610000000012, 0.00021238900000000033, 0.00021234700000000162, 0.0002123610000000012, 0.00021236200000000066, 0.0002123610000000012, 0.00021237499999999382, 0.00021234700000000162, 0.00021237500000000076, 0.0002123610000000012, 0.00021238900000000033, 0.00021231899999999554, 0.00021241699999999947, 0.0002124029999999999, 0.00021237500000000076, 0.0002123610000000012, 0.00021227699999999683, 0.00021231900000000248, 0.00021232000000000195, 0.0002123610000000012, 0.0002124029999999999, 0.000212319999999995]</msg>
<status status="PASS" starttime="20201030 11:51:38.263" endtime="20201030 11:51:38.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.252" endtime="20201030 11:51:38.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.775" endtime="20201030 11:51:38.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.745" endtime="20201030 11:51:38.276"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.282" endtime="20201030 11:51:38.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.278" endtime="20201030 11:51:38.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.326" endtime="20201030 11:51:38.346"></status>
</kw>
<msg timestamp="20201030 11:51:38.348" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.323" endtime="20201030 11:51:38.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.354" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.350" endtime="20201030 11:51:38.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.356" endtime="20201030 11:51:38.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.315" endtime="20201030 11:51:38.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.310" endtime="20201030 11:51:38.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.379" endtime="20201030 11:51:38.724"></status>
</kw>
<msg timestamp="20201030 11:51:38.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034493653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034727764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.376" endtime="20201030 11:51:38.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034493653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034727764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.733" endtime="20201030 11:51:38.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.752" endtime="20201030 11:51:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.369" endtime="20201030 11:51:38.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.364" endtime="20201030 11:51:38.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:38.768" level="INFO">${PHILIP_RES} = [{'diff': 0.00023411100000000212}, {'diff': 0.00023313900000000026}, {'diff': 0.00023313900000000026}, {'diff': 0.00023313900000000026}, {'diff': 0.00023313900000000026}, {'diff': 0.000233166999999999...</msg>
<status status="PASS" starttime="20201030 11:51:38.760" endtime="20201030 11:51:38.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.777" level="INFO">${RESULT} = {'diff': [0.00023411100000000212, 0.00023313900000000026, 0.00023313900000000026, 0.00023313900000000026, 0.00023313900000000026, 0.0002331669999999994, 0.00023323599999999778, 0.0002331250000000007, ...</msg>
<status status="PASS" starttime="20201030 11:51:38.770" endtime="20201030 11:51:38.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.787" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:38.785" endtime="20201030 11:51:38.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.792" level="INFO">VALUE: [0.00023411100000000212, 0.00023313900000000026, 0.00023313900000000026, 0.00023313900000000026, 0.00023313900000000026, 0.0002331669999999994, 0.00023323599999999778, 0.0002331250000000007, 0.00023315299999999983, 0.00023319499999999854, 0.00023315299999999983, 0.0002332089999999981, 0.00023315200000000036, 0.0002331669999999994, 0.0002331669999999994, 0.00023316599999999993, 0.0002331799999999995, 0.00023320800000000558, 0.00023315200000000036, 0.00023315299999999983, 0.0002331669999999994, 0.00023311100000000112, 0.00023320799999999864, 0.00023316599999999993, 0.0002331250000000007, 0.00023316599999999993, 0.00023309700000000155, 0.00023311100000000112, 0.00023315299999999983, 0.00023315299999999983, 0.00023316599999999993, 0.00023316599999999993, 0.0002332089999999981, 0.00023320799999999864, 0.00023315299999999983, 0.00023316599999999993, 0.00023318099999999897, 0.00023322200000000515, 0.00023318099999999897, 0.00023315299999999983, 0.00023318099999999897, 0.00023313900000000026, 0.00023315299999999983, 0.00023320799999999864, 0.00023319399999999907, 0.00023311100000000112, 0.00023315299999999983, 0.0002332219999999982, 0.00023313900000000026, 0.00023315299999999983]</msg>
<status status="PASS" starttime="20201030 11:51:38.789" endtime="20201030 11:51:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.778" endtime="20201030 11:51:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.306" endtime="20201030 11:51:38.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.277" endtime="20201030 11:51:38.797"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.803" endtime="20201030 11:51:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.800" endtime="20201030 11:51:38.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.847" endtime="20201030 11:51:38.869"></status>
</kw>
<msg timestamp="20201030 11:51:38.870" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.844" endtime="20201030 11:51:38.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.876" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.872" endtime="20201030 11:51:38.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.878" endtime="20201030 11:51:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.837" endtime="20201030 11:51:38.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.832" endtime="20201030 11:51:38.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.903" endtime="20201030 11:51:39.245"></status>
</kw>
<msg timestamp="20201030 11:51:39.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034235681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034491264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.900" endtime="20201030 11:51:39.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034235681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034491264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.254" endtime="20201030 11:51:39.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.272" endtime="20201030 11:51:39.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.893" endtime="20201030 11:51:39.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.888" endtime="20201030 11:51:39.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:39.288" level="INFO">${PHILIP_RES} = [{'diff': 0.00025558300000000367}, {'diff': 0.000254944}, {'diff': 0.0002550140000000048}, {'diff': 0.000254944}, {'diff': 0.0002549309999999999}, {'diff': 0.0002548890000000012}, {'diff': 0.000254875...</msg>
<status status="PASS" starttime="20201030 11:51:39.280" endtime="20201030 11:51:39.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.297" level="INFO">${RESULT} = {'diff': [0.00025558300000000367, 0.000254944, 0.0002550140000000048, 0.000254944, 0.0002549309999999999, 0.0002548890000000012, 0.00025487500000000163, 0.00025493000000000043, 0.0002548330000000029, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.290" endtime="20201030 11:51:39.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.307" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:39.305" endtime="20201030 11:51:39.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.313" level="INFO">VALUE: [0.00025558300000000367, 0.000254944, 0.0002550140000000048, 0.000254944, 0.0002549309999999999, 0.0002548890000000012, 0.00025487500000000163, 0.00025493000000000043, 0.0002548330000000029, 0.0002549579999999996, 0.00025491700000000034, 0.00025488899999999426, 0.000254944, 0.0002549309999999999, 0.0002548890000000012, 0.0002548890000000012, 0.00025487500000000163, 0.0002548890000000012, 0.00025486100000000206, 0.00025491700000000034, 0.00025491600000000086, 0.00025490300000000077, 0.00025491700000000034, 0.00025491600000000086, 0.00025486100000000206, 0.00025486100000000206, 0.0002548609999999951, 0.000254847999999995, 0.0002548880000000017, 0.00025491700000000034, 0.000254959000000006, 0.00025490300000000077, 0.0002548890000000012, 0.00025491700000000034, 0.0002549020000000013, 0.00025490300000000077, 0.0002549449999999995, 0.00025491600000000086, 0.0002548609999999951, 0.00025490300000000077, 0.000254944, 0.0002549020000000013, 0.0002549449999999995, 0.0002548890000000012, 0.00025487500000000163, 0.00025493000000000043, 0.00025491700000000034, 0.00025487500000000163, 0.00025487500000000163, 0.0002549449999999995]</msg>
<status status="PASS" starttime="20201030 11:51:39.310" endtime="20201030 11:51:39.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.299" endtime="20201030 11:51:39.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.828" endtime="20201030 11:51:39.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.798" endtime="20201030 11:51:39.318"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.323" endtime="20201030 11:51:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.320" endtime="20201030 11:51:39.347"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.369" endtime="20201030 11:51:39.392"></status>
</kw>
<msg timestamp="20201030 11:51:39.393" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.366" endtime="20201030 11:51:39.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.399" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.395" endtime="20201030 11:51:39.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.401" endtime="20201030 11:51:39.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.359" endtime="20201030 11:51:39.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.353" endtime="20201030 11:51:39.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.425" endtime="20201030 11:51:39.767"></status>
</kw>
<msg timestamp="20201030 11:51:39.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035805944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.422" endtime="20201030 11:51:39.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035805944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.776" endtime="20201030 11:51:39.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.794" endtime="20201030 11:51:39.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.414" endtime="20201030 11:51:39.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.410" endtime="20201030 11:51:39.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:39.810" level="INFO">${PHILIP_RES} = [{'diff': 0.0002772639999999993}, {'diff': 0.00027779199999999893}, {'diff': 0.0002777500000000002}, {'diff': 0.0002777080000000015}, {'diff': 0.00027766599999999586}, {'diff': 0.00027773600000000065}...</msg>
<status status="PASS" starttime="20201030 11:51:39.803" endtime="20201030 11:51:39.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.819" level="INFO">${RESULT} = {'diff': [0.0002772639999999993, 0.00027779199999999893, 0.0002777500000000002, 0.0002777080000000015, 0.00027766599999999586, 0.00027773600000000065, 0.00027773600000000065, 0.0002777220000000011, 0....</msg>
<status status="PASS" starttime="20201030 11:51:39.812" endtime="20201030 11:51:39.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.830" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:39.827" endtime="20201030 11:51:39.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.836" level="INFO">VALUE: [0.0002772639999999993, 0.00027779199999999893, 0.0002777500000000002, 0.0002777080000000015, 0.00027766599999999586, 0.00027773600000000065, 0.00027773600000000065, 0.0002777220000000011, 0.00027773600000000065, 0.00027773600000000065, 0.0002777220000000011, 0.0002777639999999998, 0.00027765299999999576, 0.0002777500000000002, 0.00027773600000000065, 0.000277709000000001, 0.0002777220000000011, 0.00027770799999999457, 0.0002776389999999962, 0.0002777220000000011, 0.00027773600000000065, 0.00027768100000000184, 0.00027767999999999543, 0.0002777220000000011, 0.0002776670000000023, 0.0002777080000000015, 0.0002776950000000014, 0.000277693999999995, 0.0002776670000000023, 0.00027768000000000237, 0.00027766699999999533, 0.00027768100000000184, 0.00027769400000000194, 0.00027768100000000184, 0.00027765299999999576, 0.0002776670000000023, 0.0002776660000000028, 0.0002776389999999962, 0.00027769400000000194, 0.00027763900000000313, 0.00027765299999999576, 0.0002776530000000027, 0.00027768000000000237, 0.00027770799999999457, 0.00027768000000000237, 0.0002776670000000023, 0.00027766599999999586, 0.0002776670000000023, 0.00027763900000000313, 0.00027777799999999936]</msg>
<status status="PASS" starttime="20201030 11:51:39.832" endtime="20201030 11:51:39.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.821" endtime="20201030 11:51:39.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.348" endtime="20201030 11:51:39.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.318" endtime="20201030 11:51:39.842"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.847" endtime="20201030 11:51:39.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.844" endtime="20201030 11:51:39.871"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.892" endtime="20201030 11:51:39.915"></status>
</kw>
<msg timestamp="20201030 11:51:39.916" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.888" endtime="20201030 11:51:39.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.923" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.919" endtime="20201030 11:51:39.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.925" endtime="20201030 11:51:39.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.881" endtime="20201030 11:51:39.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.876" endtime="20201030 11:51:39.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.948" endtime="20201030 11:51:40.293"></status>
</kw>
<msg timestamp="20201030 11:51:40.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034119792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034421167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.945" endtime="20201030 11:51:40.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034119792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034421167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.303" endtime="20201030 11:51:40.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.321" endtime="20201030 11:51:40.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.938" endtime="20201030 11:51:40.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.933" endtime="20201030 11:51:40.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:40.336" level="INFO">${PHILIP_RES} = [{'diff': 0.00030137499999999956}, {'diff': 0.00030155500000000196}, {'diff': 0.0003014999999999962}, {'diff': 0.00030148700000000306}, {'diff': 0.0003015419999999949}, {'diff': 0.000301472000000004},...</msg>
<status status="PASS" starttime="20201030 11:51:40.329" endtime="20201030 11:51:40.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.347" level="INFO">${RESULT} = {'diff': [0.00030137499999999956, 0.00030155500000000196, 0.0003014999999999962, 0.00030148700000000306, 0.0003015419999999949, 0.000301472000000004, 0.0003015139999999958, 0.00030150000000000315, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:40.338" endtime="20201030 11:51:40.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.357" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:40.355" endtime="20201030 11:51:40.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.363" level="INFO">VALUE: [0.00030137499999999956, 0.00030155500000000196, 0.0003014999999999962, 0.00030148700000000306, 0.0003015419999999949, 0.000301472000000004, 0.0003015139999999958, 0.00030150000000000315, 0.0003014869999999961, 0.00030150000000000315, 0.000301472000000004, 0.0003014999999999962, 0.00030144500000000435, 0.0003015270000000028, 0.0003014579999999975, 0.0003015410000000024, 0.00030152799999999536, 0.0003015280000000023, 0.00030152799999999536, 0.00030150000000000315, 0.0003015410000000024, 0.000301570000000001, 0.00030159700000000067, 0.00030161100000000024, 0.0003015830000000011, 0.0003015559999999945, 0.0003015410000000024, 0.00030155600000000143, 0.0003015419999999949, 0.00030154200000000186, 0.00030152799999999536, 0.00030155500000000196, 0.0003015419999999949, 0.00030155600000000143, 0.00030154099999999545, 0.00030154200000000186, 0.00030152799999999536, 0.0003014860000000036, 0.00030154200000000186, 0.00030155500000000196, 0.0003015270000000028, 0.000301570000000001, 0.0003015410000000024, 0.000301570000000001, 0.00030155500000000196, 0.00030155600000000143, 0.00030158299999999416, 0.00030159700000000067, 0.00030155600000000143, 0.0003014579999999975]</msg>
<status status="PASS" starttime="20201030 11:51:40.360" endtime="20201030 11:51:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.349" endtime="20201030 11:51:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.872" endtime="20201030 11:51:40.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.842" endtime="20201030 11:51:40.368"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.373" endtime="20201030 11:51:40.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.370" endtime="20201030 11:51:40.397"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.418" endtime="20201030 11:51:40.443"></status>
</kw>
<msg timestamp="20201030 11:51:40.444" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.414" endtime="20201030 11:51:40.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.452" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.446" endtime="20201030 11:51:40.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.455" endtime="20201030 11:51:40.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.407" endtime="20201030 11:51:40.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.402" endtime="20201030 11:51:40.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.479" endtime="20201030 11:51:40.821"></status>
</kw>
<msg timestamp="20201030 11:51:40.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034310653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.476" endtime="20201030 11:51:40.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034310653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.830" endtime="20201030 11:51:40.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.848" endtime="20201030 11:51:40.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.468" endtime="20201030 11:51:40.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.464" endtime="20201030 11:51:40.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:40.864" level="INFO">${PHILIP_RES} = [{'diff': 0.00032470799999999994}, {'diff': 0.00032416600000000073}, {'diff': 0.00032424999999999815}, {'diff': 0.0003242920000000038}, {'diff': 0.0003242769999999978}, {'diff': 0.00032424999999999815...</msg>
<status status="PASS" starttime="20201030 11:51:40.857" endtime="20201030 11:51:40.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.875" level="INFO">${RESULT} = {'diff': [0.00032470799999999994, 0.00032416600000000073, 0.00032424999999999815, 0.0003242920000000038, 0.0003242769999999978, 0.00032424999999999815, 0.0003242639999999977, 0.00032430600000000337, 0...</msg>
<status status="PASS" starttime="20201030 11:51:40.866" endtime="20201030 11:51:40.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.886" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:40.883" endtime="20201030 11:51:40.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.891" level="INFO">VALUE: [0.00032470799999999994, 0.00032416600000000073, 0.00032424999999999815, 0.0003242920000000038, 0.0003242769999999978, 0.00032424999999999815, 0.0003242639999999977, 0.00032430600000000337, 0.00032431900000000347, 0.0003242920000000038, 0.0003242779999999973, 0.0003242359999999986, 0.0003242359999999986, 0.0003242639999999977, 0.000324221999999999, 0.0003243189999999965, 0.0003242779999999973, 0.0003242779999999973, 0.00032429199999999686, 0.00032424999999999815, 0.00032424999999999815, 0.000324319999999996, 0.0003242359999999986, 0.0003242779999999973, 0.0003242909999999974, 0.00032432000000000294, 0.0003242500000000051, 0.00032424999999999815, 0.0003243340000000025, 0.00032426400000000466, 0.00032430600000000337, 0.00032429199999999686, 0.000324221999999999, 0.00032423699999999805, 0.00032420799999999944, 0.0003242779999999973, 0.0003241809999999998, 0.0003242910000000043, 0.00032424999999999815, 0.0003242229999999985, 0.0003242359999999986, 0.00032426299999999825, 0.0003242089999999989, 0.0003242359999999986, 0.0003242779999999973, 0.00032419499999999934, 0.0003242910000000043, 0.000324221999999999, 0.00032427700000000476, 0.00032427800000000423]</msg>
<status status="PASS" starttime="20201030 11:51:40.888" endtime="20201030 11:51:40.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.877" endtime="20201030 11:51:40.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.398" endtime="20201030 11:51:40.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.369" endtime="20201030 11:51:40.896"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.902" endtime="20201030 11:51:40.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.898" endtime="20201030 11:51:40.925"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.946" endtime="20201030 11:51:40.972"></status>
</kw>
<msg timestamp="20201030 11:51:40.974" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.943" endtime="20201030 11:51:40.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.980" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.976" endtime="20201030 11:51:40.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.982" endtime="20201030 11:51:40.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.936" endtime="20201030 11:51:40.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.930" endtime="20201030 11:51:40.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.006" endtime="20201030 11:51:41.349"></status>
</kw>
<msg timestamp="20201030 11:51:41.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034211111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034560431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.002" endtime="20201030 11:51:41.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034211111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034560431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.359" endtime="20201030 11:51:41.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.377" endtime="20201030 11:51:41.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.995" endtime="20201030 11:51:41.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.990" endtime="20201030 11:51:41.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:41.393" level="INFO">${PHILIP_RES} = [{'diff': 0.0003493200000000002}, {'diff': 0.0003490969999999996}, {'diff': 0.0003490559999999934}, {'diff': 0.0003490550000000009}, {'diff': 0.0003491529999999979}, {'diff': 0.0003490410000000013}, {...</msg>
<status status="PASS" starttime="20201030 11:51:41.385" endtime="20201030 11:51:41.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.402" level="INFO">${RESULT} = {'diff': [0.0003493200000000002, 0.0003490969999999996, 0.0003490559999999934, 0.0003490550000000009, 0.0003491529999999979, 0.0003490410000000013, 0.0003490000000000021, 0.00034897200000000295, 0.000...</msg>
<status status="PASS" starttime="20201030 11:51:41.395" endtime="20201030 11:51:41.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.412" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:41.410" endtime="20201030 11:51:41.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.418" level="INFO">VALUE: [0.0003493200000000002, 0.0003490969999999996, 0.0003490559999999934, 0.0003490550000000009, 0.0003491529999999979, 0.0003490410000000013, 0.0003490000000000021, 0.00034897200000000295, 0.00034905600000000037, 0.0003490410000000013, 0.0003490839999999995, 0.0003490550000000009, 0.00034905600000000037, 0.00034911099999999917, 0.00034906999999999994, 0.0003490130000000022, 0.00034905600000000037, 0.00034906999999999994, 0.0003490550000000009, 0.00034902700000000175, 0.0003490839999999995, 0.0003490550000000009, 0.00034908300000000003, 0.00034906900000000046, 0.0003490550000000009, 0.000349098000000006, 0.00034908300000000003, 0.0003490420000000008, 0.0003490280000000012, 0.0003490410000000013, 0.00034908300000000003, 0.00034908300000000003, 0.00034901400000000166, 0.00034906999999999994, 0.0003490279999999943, 0.0003490550000000009, 0.0003490000000000021, 0.0003490280000000012, 0.0003490420000000008, 0.0003490550000000009, 0.00034905600000000037, 0.00034908300000000003, 0.0003490969999999996, 0.0003490550000000009, 0.00034911099999999917, 0.0003490550000000009, 0.0003490139999999947, 0.00034906900000000046, 0.00034911099999999917, 0.0003490969999999996]</msg>
<status status="PASS" starttime="20201030 11:51:41.415" endtime="20201030 11:51:41.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.404" endtime="20201030 11:51:41.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.926" endtime="20201030 11:51:41.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.897" endtime="20201030 11:51:41.423"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.428" endtime="20201030 11:51:41.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.425" endtime="20201030 11:51:41.452"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.473" endtime="20201030 11:51:41.501"></status>
</kw>
<msg timestamp="20201030 11:51:41.502" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.470" endtime="20201030 11:51:41.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.508" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.504" endtime="20201030 11:51:41.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.510" endtime="20201030 11:51:41.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.462" endtime="20201030 11:51:41.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.457" endtime="20201030 11:51:41.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.535" endtime="20201030 11:51:41.877"></status>
</kw>
<msg timestamp="20201030 11:51:41.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034446097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.532" endtime="20201030 11:51:41.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034446097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.886" endtime="20201030 11:51:41.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.904" endtime="20201030 11:51:41.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.525" endtime="20201030 11:51:41.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.520" endtime="20201030 11:51:41.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:41.920" level="INFO">${PHILIP_RES} = [{'diff': 0.0003745559999999981}, {'diff': 0.0003749160000000029}, {'diff': 0.00037484700000000454}, {'diff': 0.00037494400000000205}, {'diff': 0.00037488900000000325}, {'diff': 0.0003748750000000037}...</msg>
<status status="PASS" starttime="20201030 11:51:41.913" endtime="20201030 11:51:41.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.930" level="INFO">${RESULT} = {'diff': [0.0003745559999999981, 0.0003749160000000029, 0.00037484700000000454, 0.00037494400000000205, 0.00037488900000000325, 0.0003748750000000037, 0.00037483299999999803, 0.00037486099999999717, 0...</msg>
<status status="PASS" starttime="20201030 11:51:41.923" endtime="20201030 11:51:41.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.940" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:41.938" endtime="20201030 11:51:41.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.945" level="INFO">VALUE: [0.0003745559999999981, 0.0003749160000000029, 0.00037484700000000454, 0.00037494400000000205, 0.00037488900000000325, 0.0003748750000000037, 0.00037483299999999803, 0.00037486099999999717, 0.000374915999999996, 0.0003749170000000024, 0.00037487499999999674, 0.0003749160000000029, 0.0003748750000000037, 0.0003749170000000024, 0.0003749030000000028, 0.0003749030000000028, 0.00037483299999999803, 0.00037486099999999717, 0.00037483299999999803, 0.00037484700000000454, 0.0003748889999999963, 0.00037483299999999803, 0.0003749450000000015, 0.0003748339999999975, 0.00037486099999999717, 0.0003748750000000037, 0.0003748049999999989, 0.0003747779999999992, 0.0003748750000000037, 0.00037481999999999793, 0.0003748610000000041, 0.0003748750000000037, 0.0003748469999999976, 0.00037487499999999674, 0.00037490200000000334, 0.00037484700000000454, 0.00037493100000000196, 0.0003749029999999959, 0.00037483299999999803, 0.0003748610000000041, 0.0003748750000000037, 0.00037483299999999803, 0.0003749590000000011, 0.00037493100000000196, 0.00037490200000000334, 0.000374848000000004, 0.0003749030000000028, 0.0003748889999999963, 0.0003748889999999963, 0.0003748889999999963]</msg>
<status status="PASS" starttime="20201030 11:51:41.942" endtime="20201030 11:51:41.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.931" endtime="20201030 11:51:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.453" endtime="20201030 11:51:41.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.423" endtime="20201030 11:51:41.950"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.956" endtime="20201030 11:51:41.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.952" endtime="20201030 11:51:41.980"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.002" endtime="20201030 11:51:42.031"></status>
</kw>
<msg timestamp="20201030 11:51:42.032" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.999" endtime="20201030 11:51:42.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.039" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.034" endtime="20201030 11:51:42.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.041" endtime="20201030 11:51:42.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.991" endtime="20201030 11:51:42.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.986" endtime="20201030 11:51:42.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.064" endtime="20201030 11:51:42.407"></status>
</kw>
<msg timestamp="20201030 11:51:42.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035941292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036342097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.061" endtime="20201030 11:51:42.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035941292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036342097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.416" endtime="20201030 11:51:42.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.434" endtime="20201030 11:51:42.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.054" endtime="20201030 11:51:42.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.049" endtime="20201030 11:51:42.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:42.450" level="INFO">${PHILIP_RES} = [{'diff': 0.00040080499999999714}, {'diff': 0.00040073599999999876}, {'diff': 0.00040074999999999833}, {'diff': 0.00040068099999999995}, {'diff': 0.0004007079999999996}, {'diff': 0.0004007499999999983...</msg>
<status status="PASS" starttime="20201030 11:51:42.443" endtime="20201030 11:51:42.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.459" level="INFO">${RESULT} = {'diff': [0.00040080499999999714, 0.00040073599999999876, 0.00040074999999999833, 0.00040068099999999995, 0.0004007079999999996, 0.00040074999999999833, 0.00040076400000000484, 0.00040077799999999747,...</msg>
<status status="PASS" starttime="20201030 11:51:42.452" endtime="20201030 11:51:42.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.470" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:42.467" endtime="20201030 11:51:42.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.476" level="INFO">VALUE: [0.00040080499999999714, 0.00040073599999999876, 0.00040074999999999833, 0.00040068099999999995, 0.0004007079999999996, 0.00040074999999999833, 0.00040076400000000484, 0.00040077799999999747, 0.00040080600000000355, 0.00040077799999999747, 0.0004006670000000004, 0.00040070900000000603, 0.0004006800000000005, 0.0004007079999999996, 0.00040069400000000005, 0.0004006949999999995, 0.0004007219999999992, 0.00040068099999999995, 0.0004007079999999996, 0.0004007219999999992, 0.00040075000000000527, 0.0004007079999999996, 0.00040069400000000005, 0.0004006389999999943, 0.00040069400000000005, 0.0004007219999999992, 0.00040073599999999876, 0.0004006670000000004, 0.0004007219999999992, 0.0004007360000000057, 0.00040068099999999995, 0.000400792000000004, 0.0004007639999999979, 0.0004007219999999992, 0.0004006949999999995, 0.00040074999999999833, 0.00040073599999999876, 0.00040079199999999704, 0.0004007639999999979, 0.00040069400000000005, 0.00040074999999999833, 0.00040072200000000613, 0.0004007219999999992, 0.0004006110000000021, 0.0004006949999999995, 0.00040077799999999747, 0.0004007219999999992, 0.0004007219999999992, 0.00040076400000000484, 0.00040079099999999757]</msg>
<status status="PASS" starttime="20201030 11:51:42.472" endtime="20201030 11:51:42.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.461" endtime="20201030 11:51:42.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.981" endtime="20201030 11:51:42.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.951" endtime="20201030 11:51:42.482"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.487" endtime="20201030 11:51:42.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.484" endtime="20201030 11:51:42.511"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.532" endtime="20201030 11:51:42.562"></status>
</kw>
<msg timestamp="20201030 11:51:42.564" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.529" endtime="20201030 11:51:42.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.570" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.566" endtime="20201030 11:51:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.572" endtime="20201030 11:51:42.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.522" endtime="20201030 11:51:42.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.516" endtime="20201030 11:51:42.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.595" endtime="20201030 11:51:42.936"></status>
</kw>
<msg timestamp="20201030 11:51:42.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034464875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034891708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.592" endtime="20201030 11:51:42.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034464875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034891708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.946" endtime="20201030 11:51:42.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.964" endtime="20201030 11:51:42.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.585" endtime="20201030 11:51:42.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.580" endtime="20201030 11:51:42.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:42.980" level="INFO">${PHILIP_RES} = [{'diff': 0.00042683300000000146}, {'diff': 0.00042651400000000284}, {'diff': 0.00042648599999999676}, {'diff': 0.0004264719999999972}, {'diff': 0.0004264720000000041}, {'diff': 0.00042647299999999666...</msg>
<status status="PASS" starttime="20201030 11:51:42.972" endtime="20201030 11:51:42.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.990" level="INFO">${RESULT} = {'diff': [0.00042683300000000146, 0.00042651400000000284, 0.00042648599999999676, 0.0004264719999999972, 0.0004264720000000041, 0.00042647299999999666, 0.0004264730000000036, 0.0004264579999999976, 0....</msg>
<status status="PASS" starttime="20201030 11:51:42.982" endtime="20201030 11:51:42.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.001" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:42.999" endtime="20201030 11:51:43.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.006" level="INFO">VALUE: [0.00042683300000000146, 0.00042651400000000284, 0.00042648599999999676, 0.0004264719999999972, 0.0004264720000000041, 0.00042647299999999666, 0.0004264730000000036, 0.0004264579999999976, 0.0004264579999999976, 0.00042650000000000327, 0.00042637499999999967, 0.0004264449999999975, 0.000426444000000005, 0.0004264169999999984, 0.00042637499999999967, 0.0004264159999999989, 0.0004264719999999972, 0.0004265280000000024, 0.000426526999999996, 0.0004265280000000024, 0.0004264999999999963, 0.00042655500000000207, 0.0004264999999999963, 0.00042648599999999676, 0.00042648599999999676, 0.000426542000000002, 0.000426542000000002, 0.00042652799999999547, 0.000426542000000002, 0.0004264860000000037, 0.00042652799999999547, 0.0004264579999999976, 0.00042644399999999805, 0.0004264860000000037, 0.0004265559999999946, 0.00042652700000000293, 0.0004265700000000011, 0.0004264999999999963, 0.0004264860000000037, 0.00042644399999999805, 0.00042644399999999805, 0.00042655500000000207, 0.0004265280000000024, 0.00042655500000000207, 0.00042648599999999676, 0.00042650000000000327, 0.000426542000000002, 0.00042655600000000155, 0.00042661100000000035, 0.00042651400000000284]</msg>
<status status="PASS" starttime="20201030 11:51:43.003" endtime="20201030 11:51:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.992" endtime="20201030 11:51:43.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.512" endtime="20201030 11:51:43.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.482" endtime="20201030 11:51:43.011"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.017" endtime="20201030 11:51:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.013" endtime="20201030 11:51:43.041"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.061" endtime="20201030 11:51:43.093"></status>
</kw>
<msg timestamp="20201030 11:51:43.094" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.058" endtime="20201030 11:51:43.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.101" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.096" endtime="20201030 11:51:43.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.103" endtime="20201030 11:51:43.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.051" endtime="20201030 11:51:43.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.046" endtime="20201030 11:51:43.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.126" endtime="20201030 11:51:43.469"></status>
</kw>
<msg timestamp="20201030 11:51:43.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034285306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034739819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.123" endtime="20201030 11:51:43.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034285306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034739819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.478" endtime="20201030 11:51:43.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.496" endtime="20201030 11:51:43.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.116" endtime="20201030 11:51:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.111" endtime="20201030 11:51:43.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:43.512" level="INFO">${PHILIP_RES} = [{'diff': 0.00045451299999999667}, {'diff': 0.00045425000000000326}, {'diff': 0.0004543059999999946}, {'diff': 0.00045429200000000197}, {'diff': 0.00045423599999999675}, {'diff': 0.0004541939999999980...</msg>
<status status="PASS" starttime="20201030 11:51:43.504" endtime="20201030 11:51:43.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.523" level="INFO">${RESULT} = {'diff': [0.00045451299999999667, 0.00045425000000000326, 0.0004543059999999946, 0.00045429200000000197, 0.00045423599999999675, 0.00045419399999999804, 0.00045425000000000326, 0.00045426400000000283,...</msg>
<status status="PASS" starttime="20201030 11:51:43.514" endtime="20201030 11:51:43.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.533" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:43.531" endtime="20201030 11:51:43.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.539" level="INFO">VALUE: [0.00045451299999999667, 0.00045425000000000326, 0.0004543059999999946, 0.00045429200000000197, 0.00045423599999999675, 0.00045419399999999804, 0.00045425000000000326, 0.00045426400000000283, 0.00045419399999999804, 0.0004541529999999988, 0.00045425000000000326, 0.000454209000000004, 0.0004541799999999985, 0.0004542219999999972, 0.0004541949999999975, 0.00045423599999999675, 0.00045420800000000455, 0.0004541800000000054, 0.00045413899999999924, 0.0004542780000000024, 0.0004542219999999972, 0.00045407000000000086, 0.00045411199999999957, 0.0004542089999999971, 0.0004542219999999972, 0.0004541659999999989, 0.00045426400000000283, 0.0004542780000000024, 0.0004542089999999971, 0.0004542639999999959, 0.00045429200000000197, 0.000454276999999996, 0.0004542230000000036, 0.00045427700000000293, 0.00045423599999999675, 0.0004542230000000036, 0.00045430500000000207, 0.0004543189999999947, 0.0004542780000000024, 0.0004542499999999963, 0.00045426400000000283, 0.00045423599999999675, 0.00045420800000000455, 0.0004542780000000024, 0.00045429199999999503, 0.00045427700000000293, 0.0004542639999999959, 0.00045425000000000326, 0.00045425000000000326, 0.0004542639999999959]</msg>
<status status="PASS" starttime="20201030 11:51:43.536" endtime="20201030 11:51:43.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.525" endtime="20201030 11:51:43.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.042" endtime="20201030 11:51:43.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.012" endtime="20201030 11:51:43.549"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.554" endtime="20201030 11:51:43.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.551" endtime="20201030 11:51:43.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.599" endtime="20201030 11:51:43.632"></status>
</kw>
<msg timestamp="20201030 11:51:43.633" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.595" endtime="20201030 11:51:43.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.639" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.635" endtime="20201030 11:51:43.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.642" endtime="20201030 11:51:43.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.588" endtime="20201030 11:51:43.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.583" endtime="20201030 11:51:43.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.665" endtime="20201030 11:51:44.010"></status>
</kw>
<msg timestamp="20201030 11:51:44.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034290764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034773736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.662" endtime="20201030 11:51:44.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034290764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034773736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.020" endtime="20201030 11:51:44.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.038" endtime="20201030 11:51:44.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.654" endtime="20201030 11:51:44.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.650" endtime="20201030 11:51:44.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:44.054" level="INFO">${PHILIP_RES} = [{'diff': 0.0004829719999999982}, {'diff': 0.0004829719999999982}, {'diff': 0.0004829999999999973}, {'diff': 0.00048305600000000254}, {'diff': 0.00048294399999999904}, {'diff': 0.0004829719999999982},...</msg>
<status status="PASS" starttime="20201030 11:51:44.046" endtime="20201030 11:51:44.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.063" level="INFO">${RESULT} = {'diff': [0.0004829719999999982, 0.0004829719999999982, 0.0004829999999999973, 0.00048305600000000254, 0.00048294399999999904, 0.0004829719999999982, 0.00048295800000000555, 0.0004829300000000064, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:44.056" endtime="20201030 11:51:44.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.073" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:44.071" endtime="20201030 11:51:44.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.079" level="INFO">VALUE: [0.0004829719999999982, 0.0004829719999999982, 0.0004829999999999973, 0.00048305600000000254, 0.00048294399999999904, 0.0004829719999999982, 0.00048295800000000555, 0.0004829300000000064, 0.0004829449999999985, 0.0004829719999999982, 0.0004829999999999973, 0.0004830139999999969, 0.00048304099999999656, 0.0004829579999999986, 0.00048300000000000426, 0.0004830280000000034, 0.00048301400000000383, 0.00048301400000000383, 0.0004829999999999973, 0.0004829999999999973, 0.00048301400000000383, 0.0004829589999999981, 0.00048292999999999947, 0.0004829579999999986, 0.0004829589999999981, 0.00048292999999999947, 0.00048294500000000545, 0.0004828470000000015, 0.00048280599999999535, 0.0004828470000000015, 0.0004829310000000059, 0.0004828470000000015, 0.0004829029999999998, 0.00048293099999999894, 0.0004829720000000051, 0.0004829579999999986, 0.0004829589999999981, 0.00048297299999999765, 0.0004829029999999998, 0.0004828610000000011, 0.00048290200000000033, 0.0004828470000000015, 0.000482848000000001, 0.0004829449999999985, 0.0004829310000000059, 0.00048297299999999765, 0.00048287500000000066, 0.00048286099999999416, 0.0004829159999999999, 0.00048288900000000023]</msg>
<status status="PASS" starttime="20201030 11:51:44.076" endtime="20201030 11:51:44.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.065" endtime="20201030 11:51:44.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.579" endtime="20201030 11:51:44.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.550" endtime="20201030 11:51:44.084"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.089" endtime="20201030 11:51:44.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.086" endtime="20201030 11:51:44.113"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.134" endtime="20201030 11:51:44.169"></status>
</kw>
<msg timestamp="20201030 11:51:44.170" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.130" endtime="20201030 11:51:44.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.176" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.172" endtime="20201030 11:51:44.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.178" endtime="20201030 11:51:44.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.123" endtime="20201030 11:51:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.118" endtime="20201030 11:51:44.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.202" endtime="20201030 11:51:44.544"></status>
</kw>
<msg timestamp="20201030 11:51:44.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034237417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.198" endtime="20201030 11:51:44.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034237417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.554" endtime="20201030 11:51:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.571" endtime="20201030 11:51:44.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.191" endtime="20201030 11:51:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.186" endtime="20201030 11:51:44.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:44.587" level="INFO">${PHILIP_RES} = [{'diff': 0.0005116800000000005}, {'diff': 0.0005118329999999963}, {'diff': 0.0005118189999999967}, {'diff': 0.0005118890000000015}, {'diff': 0.0005117779999999975}, {'diff': 0.0005118199999999962}, {...</msg>
<status status="PASS" starttime="20201030 11:51:44.580" endtime="20201030 11:51:44.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.596" level="INFO">${RESULT} = {'diff': [0.0005116800000000005, 0.0005118329999999963, 0.0005118189999999967, 0.0005118890000000015, 0.0005117779999999975, 0.0005118199999999962, 0.0005118609999999954, 0.000511888000000002, 0.00051...</msg>
<status status="PASS" starttime="20201030 11:51:44.589" endtime="20201030 11:51:44.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.607" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:44.605" endtime="20201030 11:51:44.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.612" level="INFO">VALUE: [0.0005116800000000005, 0.0005118329999999963, 0.0005118189999999967, 0.0005118890000000015, 0.0005117779999999975, 0.0005118199999999962, 0.0005118609999999954, 0.000511888000000002, 0.0005119160000000011, 0.0005119719999999994, 0.0005118480000000022, 0.0005118890000000015, 0.0005118609999999954, 0.0005118890000000015, 0.0005118610000000023, 0.0005118610000000023, 0.0005119029999999941, 0.0005118750000000019, 0.0005119170000000006, 0.0005118890000000015, 0.0005118890000000015, 0.0005119160000000011, 0.0005119579999999999, 0.0005119719999999994, 0.0005118890000000015, 0.000511903000000001, 0.0005118750000000019, 0.0005118190000000036, 0.0005118610000000023, 0.000511903000000001, 0.000511792000000004, 0.0005118049999999971, 0.000511792000000004, 0.0005119020000000016, 0.0005118330000000032, 0.0005118890000000015, 0.0005118470000000028, 0.0005119169999999937, 0.0005118750000000019, 0.0005118480000000022, 0.000511903000000001, 0.0005118060000000035, 0.0005119310000000002, 0.0005118890000000015, 0.0005117359999999987, 0.0005118049999999971, 0.0005118200000000031, 0.0005118480000000022, 0.0005118610000000023, 0.0005118620000000018]</msg>
<status status="PASS" starttime="20201030 11:51:44.609" endtime="20201030 11:51:44.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.598" endtime="20201030 11:51:44.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.114" endtime="20201030 11:51:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.084" endtime="20201030 11:51:44.617"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.623" endtime="20201030 11:51:44.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.619" endtime="20201030 11:51:44.646"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.669" endtime="20201030 11:51:44.705"></status>
</kw>
<msg timestamp="20201030 11:51:44.706" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.665" endtime="20201030 11:51:44.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.713" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.709" endtime="20201030 11:51:44.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.715" endtime="20201030 11:51:44.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.658" endtime="20201030 11:51:44.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.653" endtime="20201030 11:51:44.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.738" endtime="20201030 11:51:45.079"></status>
</kw>
<msg timestamp="20201030 11:51:45.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035800653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.735" endtime="20201030 11:51:45.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035800653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.088" endtime="20201030 11:51:45.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.107" endtime="20201030 11:51:45.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.728" endtime="20201030 11:51:45.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.723" endtime="20201030 11:51:45.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:45.123" level="INFO">${PHILIP_RES} = [{'diff': 0.0005405139999999989}, {'diff': 0.0005405689999999977}, {'diff': 0.000540624999999996}, {'diff': 0.0005406110000000033}, {'diff': 0.0005406250000000029}, {'diff': 0.000540653000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:45.115" endtime="20201030 11:51:45.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.131" level="INFO">${RESULT} = {'diff': [0.0005405139999999989, 0.0005405689999999977, 0.000540624999999996, 0.0005406110000000033, 0.0005406250000000029, 0.000540653000000002, 0.0005404859999999997, 0.0005404999999999993, 0.000540...</msg>
<status status="PASS" starttime="20201030 11:51:45.125" endtime="20201030 11:51:45.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.142" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:45.140" endtime="20201030 11:51:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.149" level="INFO">VALUE: [0.0005405139999999989, 0.0005405689999999977, 0.000540624999999996, 0.0005406110000000033, 0.0005406250000000029, 0.000540653000000002, 0.0005404859999999997, 0.0005404999999999993, 0.000540542000000005, 0.000540526999999999, 0.0005404580000000006, 0.0005405550000000051, 0.0005404720000000002, 0.0005405689999999977, 0.0005404999999999993, 0.0005404579999999937, 0.0005405279999999985, 0.0005404999999999993, 0.0005404450000000005, 0.0005405409999999986, 0.0005405279999999985, 0.0005405140000000058, 0.0005405279999999985, 0.0005405140000000058, 0.0005404999999999993, 0.0005404999999999993, 0.0005404859999999997, 0.0005405559999999976, 0.0005405410000000055, 0.0005406109999999964, 0.0005406389999999955, 0.0005405139999999989, 0.000540541999999998, 0.000540542000000005, 0.0005406390000000025, 0.0005405409999999986, 0.0005405280000000054, 0.0005405829999999973, 0.0005406109999999964, 0.0005405139999999989, 0.0005404859999999997, 0.0005405559999999976, 0.0005405690000000046, 0.0005405559999999976, 0.0005405970000000038, 0.0005405700000000041, 0.000540542000000005, 0.0005405690000000046, 0.0005405699999999902, 0.0005404579999999937]</msg>
<status status="PASS" starttime="20201030 11:51:45.144" endtime="20201030 11:51:45.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.133" endtime="20201030 11:51:45.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.647" endtime="20201030 11:51:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.618" endtime="20201030 11:51:45.154"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.160" endtime="20201030 11:51:45.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.156" endtime="20201030 11:51:45.183"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.204" endtime="20201030 11:51:45.242"></status>
</kw>
<msg timestamp="20201030 11:51:45.243" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.201" endtime="20201030 11:51:45.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.249" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.245" endtime="20201030 11:51:45.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.251" endtime="20201030 11:51:45.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.193" endtime="20201030 11:51:45.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.188" endtime="20201030 11:51:45.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.275" endtime="20201030 11:51:45.620"></status>
</kw>
<msg timestamp="20201030 11:51:45.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034609389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:45.271" endtime="20201030 11:51:45.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034038, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034609389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:45.630" endtime="20201030 11:51:45.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.648" endtime="20201030 11:51:45.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.264" endtime="20201030 11:51:45.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.260" endtime="20201030 11:51:45.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:45.664" level="INFO">${PHILIP_RES} = [{'diff': 0.0005713889999999985}, {'diff': 0.0005716389999999988}, {'diff': 0.0005715269999999953}, {'diff': 0.0005715420000000013}, {'diff': 0.0005715420000000013}, {'diff': 0.0005714580000000039}, {...</msg>
<status status="PASS" starttime="20201030 11:51:45.656" endtime="20201030 11:51:45.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.674" level="INFO">${RESULT} = {'diff': [0.0005713889999999985, 0.0005716389999999988, 0.0005715269999999953, 0.0005715420000000013, 0.0005715420000000013, 0.0005714580000000039, 0.000571472999999996, 0.0005715140000000021, 0.00057...</msg>
<status status="PASS" starttime="20201030 11:51:45.666" endtime="20201030 11:51:45.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.685" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:45.683" endtime="20201030 11:51:45.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.690" level="INFO">VALUE: [0.0005713889999999985, 0.0005716389999999988, 0.0005715269999999953, 0.0005715420000000013, 0.0005715420000000013, 0.0005714580000000039, 0.000571472999999996, 0.0005715140000000021, 0.0005715560000000008, 0.0005714300000000047, 0.0005714999999999956, 0.000571472999999996, 0.0005715690000000009, 0.0005715690000000009, 0.0005715270000000022, 0.0005714579999999969, 0.0005714580000000039, 0.0005715140000000021, 0.000571485999999996, 0.0005715829999999936, 0.0005715139999999952, 0.0005715280000000017, 0.0005715410000000018, 0.0005714440000000043, 0.0005713889999999985, 0.0005714309999999972, 0.0005714440000000043, 0.0005714579999999969, 0.0005714999999999956, 0.0005714720000000034, 0.0005713889999999985, 0.0005714310000000042, 0.0005714439999999973, 0.000571486000000003, 0.0005714449999999968, 0.0005714720000000034, 0.0005714580000000039, 0.0005714449999999968, 0.000571486000000003, 0.0005715420000000013, 0.0005715000000000026, 0.0005715549999999944, 0.0005715560000000008, 0.0005715549999999944, 0.0005715550000000014, 0.0005716249999999992, 0.0005715140000000021, 0.0005715419999999943, 0.0005715550000000014, 0.0005715969999999931]</msg>
<status status="PASS" starttime="20201030 11:51:45.687" endtime="20201030 11:51:45.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.676" endtime="20201030 11:51:45.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.184" endtime="20201030 11:51:45.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.155" endtime="20201030 11:51:45.695"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.701" endtime="20201030 11:51:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.697" endtime="20201030 11:51:45.724"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.745" endtime="20201030 11:51:45.785"></status>
</kw>
<msg timestamp="20201030 11:51:45.786" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.742" endtime="20201030 11:51:45.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.792" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.788" endtime="20201030 11:51:45.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.794" endtime="20201030 11:51:45.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.735" endtime="20201030 11:51:45.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.730" endtime="20201030 11:51:45.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.818" endtime="20201030 11:51:46.159"></status>
</kw>
<msg timestamp="20201030 11:51:46.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034331569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034933222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.814" endtime="20201030 11:51:46.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034331569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034933222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.168" endtime="20201030 11:51:46.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.186" endtime="20201030 11:51:46.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.807" endtime="20201030 11:51:46.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.803" endtime="20201030 11:51:46.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:46.202" level="INFO">${PHILIP_RES} = [{'diff': 0.0006016530000000006}, {'diff': 0.0006023470000000031}, {'diff': 0.0006022640000000051}, {'diff': 0.0006022079999999999}, {'diff': 0.000602235999999999}, {'diff': 0.0006021940000000003}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:46.194" endtime="20201030 11:51:46.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.212" level="INFO">${RESULT} = {'diff': [0.0006016530000000006, 0.0006023470000000031, 0.0006022640000000051, 0.0006022079999999999, 0.000602235999999999, 0.0006021940000000003, 0.0006022639999999982, 0.0006022079999999999, 0.00060...</msg>
<status status="PASS" starttime="20201030 11:51:46.204" endtime="20201030 11:51:46.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.223" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:46.221" endtime="20201030 11:51:46.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.228" level="INFO">VALUE: [0.0006016530000000006, 0.0006023470000000031, 0.0006022640000000051, 0.0006022079999999999, 0.000602235999999999, 0.0006021940000000003, 0.0006022639999999982, 0.0006022079999999999, 0.000602235999999999, 0.0006022639999999982, 0.0006022369999999985, 0.0006021810000000002, 0.0006022629999999987, 0.0006021949999999998, 0.0006021940000000003, 0.0006022079999999999, 0.0006022779999999978, 0.0006022370000000055, 0.0006023200000000034, 0.0006021940000000003, 0.0006021810000000002, 0.0006022919999999973, 0.0006021390000000015, 0.0006022500000000056, 0.0006022230000000059, 0.0006021670000000007, 0.0006022079999999999, 0.000602235999999999, 0.0006022219999999995, 0.0006021390000000015, 0.000602042000000004, 0.0006021379999999951, 0.0006020829999999963, 0.0006020830000000033, 0.0006020549999999972, 0.000602125000000002, 0.000602124999999995, 0.0006021810000000002, 0.0006021110000000024, 0.0006020969999999959, 0.0006021110000000024, 0.0006021120000000019, 0.0006021810000000002, 0.0006021380000000021, 0.000602124999999995, 0.0006020700000000101, 0.0006020550000000041, 0.0006019720000000062, 0.0006019579999999997, 0.0006020280000000044]</msg>
<status status="PASS" starttime="20201030 11:51:46.225" endtime="20201030 11:51:46.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.214" endtime="20201030 11:51:46.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.726" endtime="20201030 11:51:46.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.696" endtime="20201030 11:51:46.233"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.239" endtime="20201030 11:51:46.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.235" endtime="20201030 11:51:46.263"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.284" endtime="20201030 11:51:46.325"></status>
</kw>
<msg timestamp="20201030 11:51:46.326" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.280" endtime="20201030 11:51:46.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.333" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.329" endtime="20201030 11:51:46.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.335" endtime="20201030 11:51:46.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.273" endtime="20201030 11:51:46.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.268" endtime="20201030 11:51:46.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.360" endtime="20201030 11:51:46.702"></status>
</kw>
<msg timestamp="20201030 11:51:46.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034523361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035156819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.356" endtime="20201030 11:51:46.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034523361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035156819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.711" endtime="20201030 11:51:46.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.729" endtime="20201030 11:51:46.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.349" endtime="20201030 11:51:46.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.344" endtime="20201030 11:51:46.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:46.745" level="INFO">${PHILIP_RES} = [{'diff': 0.0006334579999999965}, {'diff': 0.0006340140000000022}, {'diff': 0.0006340550000000014}, {'diff': 0.0006341109999999997}, {'diff': 0.0006341109999999997}, {'diff': 0.0006340830000000006}, {...</msg>
<status status="PASS" starttime="20201030 11:51:46.738" endtime="20201030 11:51:46.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.754" level="INFO">${RESULT} = {'diff': [0.0006334579999999965, 0.0006340140000000022, 0.0006340550000000014, 0.0006341109999999997, 0.0006341109999999997, 0.0006340830000000006, 0.0006340979999999996, 0.0006341119999999992, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:46.747" endtime="20201030 11:51:46.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.765" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:46.762" endtime="20201030 11:51:46.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.770" level="INFO">VALUE: [0.0006334579999999965, 0.0006340140000000022, 0.0006340550000000014, 0.0006341109999999997, 0.0006341109999999997, 0.0006340830000000006, 0.0006340979999999996, 0.0006341119999999992, 0.0006341109999999997, 0.0006340560000000009, 0.0006340280000000018, 0.0006341109999999997, 0.0006341939999999976, 0.0006341109999999997, 0.0006340970000000001, 0.0006341249999999993, 0.0006341250000000062, 0.0006342360000000033, 0.0006341950000000041, 0.0006341529999999984, 0.000634166999999998, 0.0006340970000000001, 0.000634278000000002, 0.000634278000000002, 0.0006342079999999972, 0.0006342080000000042, 0.000634180000000005, 0.0006341530000000054, 0.0006341520000000059, 0.0006340829999999936, 0.0006342220000000037, 0.0006341249999999993, 0.0006341249999999993, 0.0006341810000000045, 0.000634166999999998, 0.0006342639999999955, 0.0006342220000000037, 0.0006341810000000045, 0.0006341519999999989, 0.000634166999999998, 0.0006341659999999985, 0.0006342360000000033, 0.0006341530000000123, 0.0006341950000000041, 0.0006341390000000058, 0.0006341110000000066, 0.0006340970000000001, 0.0006341529999999984, 0.0006340979999999996, 0.0006341529999999984]</msg>
<status status="PASS" starttime="20201030 11:51:46.767" endtime="20201030 11:51:46.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.756" endtime="20201030 11:51:46.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.264" endtime="20201030 11:51:46.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.234" endtime="20201030 11:51:46.775"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.781" endtime="20201030 11:51:46.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.777" endtime="20201030 11:51:46.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.825" endtime="20201030 11:51:46.870"></status>
</kw>
<msg timestamp="20201030 11:51:46.871" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.822" endtime="20201030 11:51:46.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.877" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.873" endtime="20201030 11:51:46.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.880" endtime="20201030 11:51:46.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.815" endtime="20201030 11:51:46.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.810" endtime="20201030 11:51:46.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.903" endtime="20201030 11:51:47.244"></status>
</kw>
<msg timestamp="20201030 11:51:47.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035905569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036571903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.900" endtime="20201030 11:51:47.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035905569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036571903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.254" endtime="20201030 11:51:47.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.272" endtime="20201030 11:51:47.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.893" endtime="20201030 11:51:47.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.888" endtime="20201030 11:51:47.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:47.288" level="INFO">${PHILIP_RES} = [{'diff': 0.0006663340000000045}, {'diff': 0.0006658610000000037}, {'diff': 0.000665819000000005}, {'diff': 0.0006657909999999989}, {'diff': 0.0006658329999999976}, {'diff': 0.0006658329999999976}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:47.280" endtime="20201030 11:51:47.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.297" level="INFO">${RESULT} = {'diff': [0.0006663340000000045, 0.0006658610000000037, 0.000665819000000005, 0.0006657909999999989, 0.0006658329999999976, 0.0006658329999999976, 0.0006658199999999975, 0.0006658049999999985, 0.00066...</msg>
<status status="PASS" starttime="20201030 11:51:47.290" endtime="20201030 11:51:47.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.307" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:47.305" endtime="20201030 11:51:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.313" level="INFO">VALUE: [0.0006663340000000045, 0.0006658610000000037, 0.000665819000000005, 0.0006657909999999989, 0.0006658329999999976, 0.0006658329999999976, 0.0006658199999999975, 0.0006658049999999985, 0.0006658890000000028, 0.0006657769999999993, 0.0006657919999999984, 0.0006657769999999993, 0.000665834000000004, 0.0006658330000000046, 0.0006659160000000025, 0.0006658469999999972, 0.0006658469999999972, 0.0006659029999999955, 0.0006657639999999992, 0.0006658889999999959, 0.0006658610000000037, 0.0006659030000000024, 0.0006659439999999947, 0.0006659440000000016, 0.0006658750000000033, 0.0006659440000000016, 0.0006659860000000004, 0.000665917000000002, 0.000665805999999998, 0.0006658049999999985, 0.0006658750000000033, 0.0006659299999999951, 0.0006658329999999976, 0.0006658890000000028, 0.000665818999999998, 0.0006658610000000037, 0.0006659300000000021, 0.0006658480000000036, 0.000665917000000002, 0.0006658199999999975, 0.000665805999999991, 0.0006659730000000003, 0.0006659999999999999, 0.0006659310000000085, 0.000665917000000002, 0.0006658049999999915, 0.0006658750000000102, 0.0006658749999999963, 0.0006658330000000046, 0.0006659169999999881]</msg>
<status status="PASS" starttime="20201030 11:51:47.310" endtime="20201030 11:51:47.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.299" endtime="20201030 11:51:47.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.806" endtime="20201030 11:51:47.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.776" endtime="20201030 11:51:47.317"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.323" endtime="20201030 11:51:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.320" endtime="20201030 11:51:47.347"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.371" endtime="20201030 11:51:47.416"></status>
</kw>
<msg timestamp="20201030 11:51:47.417" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.367" endtime="20201030 11:51:47.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.423" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.419" endtime="20201030 11:51:47.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.426" endtime="20201030 11:51:47.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.360" endtime="20201030 11:51:47.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.354" endtime="20201030 11:51:47.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.449" endtime="20201030 11:51:47.790"></status>
</kw>
<msg timestamp="20201030 11:51:47.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037626944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038326042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.446" endtime="20201030 11:51:47.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037626944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038326042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.800" endtime="20201030 11:51:47.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.818" endtime="20201030 11:51:47.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.439" endtime="20201030 11:51:47.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.434" endtime="20201030 11:51:47.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:47.834" level="INFO">${PHILIP_RES} = [{'diff': 0.0006990979999999952}, {'diff': 0.0006986109999999948}, {'diff': 0.0006986809999999996}, {'diff': 0.000698569000000003}, {'diff': 0.0006986250000000013}, {'diff': 0.0006986390000000009}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:47.826" endtime="20201030 11:51:47.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.843" level="INFO">${RESULT} = {'diff': [0.0006990979999999952, 0.0006986109999999948, 0.0006986809999999996, 0.000698569000000003, 0.0006986250000000013, 0.0006986390000000009, 0.0006987919999999967, 0.000698652000000001, 0.000698...</msg>
<status status="PASS" starttime="20201030 11:51:47.836" endtime="20201030 11:51:47.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.853" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:47.851" endtime="20201030 11:51:47.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.860" level="INFO">VALUE: [0.0006990979999999952, 0.0006986109999999948, 0.0006986809999999996, 0.000698569000000003, 0.0006986250000000013, 0.0006986390000000009, 0.0006987919999999967, 0.000698652000000001, 0.0006987359999999984, 0.0006986800000000001, 0.000698667, 0.0006986949999999992, 0.0006986530000000005, 0.0006986250000000013, 0.0006986109999999948, 0.0006986110000000018, 0.0006986390000000009, 0.0006986530000000005, 0.0006986390000000009, 0.0006986949999999992, 0.0006986949999999992, 0.0006985550000000035, 0.0006986250000000013, 0.0006986250000000013, 0.0006985689999999961, 0.0006984859999999982, 0.0006985000000000047, 0.0006985970000000022, 0.000698556000000003, 0.0006985830000000026, 0.000698569000000003, 0.0006985830000000026, 0.0006985969999999952, 0.0006985970000000022, 0.0006986800000000071, 0.0006986390000000009, 0.0006985969999999952, 0.0006986939999999997, 0.0006985549999999896, 0.0006985689999999961, 0.000698749999999998, 0.0006985689999999961, 0.0006986390000000009, 0.0006986660000000006, 0.0006986110000000018, 0.000698667, 0.0006987229999999983, 0.0006987080000000062, 0.000698749999999998, 0.0006987920000000036]</msg>
<status status="PASS" starttime="20201030 11:51:47.855" endtime="20201030 11:51:47.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.844" endtime="20201030 11:51:47.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.348" endtime="20201030 11:51:47.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.318" endtime="20201030 11:51:47.865"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.871" endtime="20201030 11:51:47.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.867" endtime="20201030 11:51:47.894"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.915" endtime="20201030 11:51:47.961"></status>
</kw>
<msg timestamp="20201030 11:51:47.963" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.912" endtime="20201030 11:51:47.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.969" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.965" endtime="20201030 11:51:47.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.971" endtime="20201030 11:51:47.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.905" endtime="20201030 11:51:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.899" endtime="20201030 11:51:47.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.994" endtime="20201030 11:51:48.336"></status>
</kw>
<msg timestamp="20201030 11:51:48.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034326806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035058833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.991" endtime="20201030 11:51:48.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034326806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035058833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.346" endtime="20201030 11:51:48.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.364" endtime="20201030 11:51:48.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.984" endtime="20201030 11:51:48.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.979" endtime="20201030 11:51:48.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:48.380" level="INFO">${PHILIP_RES} = [{'diff': 0.0007320269999999962}, {'diff': 0.0007323750000000004}, {'diff': 0.0007324029999999995}, {'diff': 0.0007323610000000008}, {'diff': 0.0007324729999999974}, {'diff': 0.000732499999999997}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:48.372" endtime="20201030 11:51:48.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.391" level="INFO">${RESULT} = {'diff': [0.0007320269999999962, 0.0007323750000000004, 0.0007324029999999995, 0.0007323610000000008, 0.0007324729999999974, 0.000732499999999997, 0.000732500000000004, 0.000732500000000004, 0.0007324...</msg>
<status status="PASS" starttime="20201030 11:51:48.382" endtime="20201030 11:51:48.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.402" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:48.399" endtime="20201030 11:51:48.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.407" level="INFO">VALUE: [0.0007320269999999962, 0.0007323750000000004, 0.0007324029999999995, 0.0007323610000000008, 0.0007324729999999974, 0.000732499999999997, 0.000732500000000004, 0.000732500000000004, 0.0007324859999999975, 0.0007325280000000031, 0.0007324860000000044, 0.0007325280000000031, 0.0007325279999999962, 0.0007325139999999966, 0.0007323609999999939, 0.000732499999999997, 0.0007325420000000027, 0.0007324579999999983, 0.0007325409999999963, 0.0007324309999999987, 0.0007324720000000048, 0.0007324859999999975, 0.0007323339999999942, 0.0007324729999999974, 0.000732389, 0.000732499999999997, 0.0007324310000000056, 0.0007324309999999987, 0.0007324590000000047, 0.0007324579999999983, 0.0007324309999999987, 0.0007325269999999967, 0.0007325969999999946, 0.000732499999999997, 0.0007326250000000006, 0.000732597999999994, 0.0007325549999999958, 0.0007325690000000024, 0.0007324860000000044, 0.0007324729999999974, 0.0007324729999999974, 0.0007325840000000083, 0.0007325420000000027, 0.0007325269999999967, 0.0007324719999999979, 0.0007325559999999953, 0.0007324720000000118, 0.0007324859999999905, 0.0007325549999999958, 0.0007325420000000027]</msg>
<status status="PASS" starttime="20201030 11:51:48.404" endtime="20201030 11:51:48.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.393" endtime="20201030 11:51:48.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.895" endtime="20201030 11:51:48.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.866" endtime="20201030 11:51:48.413"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.419" endtime="20201030 11:51:48.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.415" endtime="20201030 11:51:48.442"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.463" endtime="20201030 11:51:48.511"></status>
</kw>
<msg timestamp="20201030 11:51:48.512" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.460" endtime="20201030 11:51:48.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.519" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.514" endtime="20201030 11:51:48.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.521" endtime="20201030 11:51:48.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.453" endtime="20201030 11:51:48.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.447" endtime="20201030 11:51:48.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.544" endtime="20201030 11:51:48.887"></status>
</kw>
<msg timestamp="20201030 11:51:48.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035287639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.541" endtime="20201030 11:51:48.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035287639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.896" endtime="20201030 11:51:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.914" endtime="20201030 11:51:48.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.534" endtime="20201030 11:51:48.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.529" endtime="20201030 11:51:48.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:48.930" level="INFO">${PHILIP_RES} = [{'diff': 0.0007671810000000057}, {'diff': 0.0007661949999999973}, {'diff': 0.000766250000000003}, {'diff': 0.0007662780000000022}, {'diff': 0.0007663200000000009}, {'diff': 0.0007664169999999984}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:48.922" endtime="20201030 11:51:48.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.941" level="INFO">${RESULT} = {'diff': [0.0007671810000000057, 0.0007661949999999973, 0.000766250000000003, 0.0007662780000000022, 0.0007663200000000009, 0.0007664169999999984, 0.0007663190000000014, 0.0007663610000000001, 0.00076...</msg>
<status status="PASS" starttime="20201030 11:51:48.932" endtime="20201030 11:51:48.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.951" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:48.949" endtime="20201030 11:51:48.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.956" level="INFO">VALUE: [0.0007671810000000057, 0.0007661949999999973, 0.000766250000000003, 0.0007662780000000022, 0.0007663200000000009, 0.0007664169999999984, 0.0007663190000000014, 0.0007663610000000001, 0.0007663190000000014, 0.0007663340000000005, 0.0007662920000000017, 0.0007662079999999974, 0.0007663200000000009, 0.000766250000000003, 0.0007662079999999974, 0.0007662770000000027, 0.0007662079999999974, 0.0007662220000000039, 0.0007663050000000018, 0.0007662499999999961, 0.000766221999999997, 0.0007662360000000035, 0.0007661949999999973, 0.000766250000000003, 0.0007662639999999957, 0.0007662499999999961, 0.0007662920000000017, 0.0007664169999999984, 0.0007662230000000034, 0.0007662359999999965, 0.0007663189999999945, 0.0007663200000000009, 0.0007663200000000009, 0.0007661939999999978, 0.0007662359999999965, 0.0007662360000000035, 0.0007661530000000055, 0.0007662640000000026, 0.0007661939999999978, 0.0007662080000000043, 0.0007661250000000064, 0.00076625000000001, 0.0007662229999999964, 0.0007661810000000047, 0.0007663470000000006, 0.0007662090000000038, 0.0007661530000000055, 0.0007661529999999916, 0.0007663049999999949, 0.0007661810000000047]</msg>
<status status="PASS" starttime="20201030 11:51:48.954" endtime="20201030 11:51:48.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.942" endtime="20201030 11:51:48.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.443" endtime="20201030 11:51:48.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.414" endtime="20201030 11:51:48.967"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.972" endtime="20201030 11:51:48.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.969" endtime="20201030 11:51:48.996"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.017" endtime="20201030 11:51:49.067"></status>
</kw>
<msg timestamp="20201030 11:51:49.068" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.014" endtime="20201030 11:51:49.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.074" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.070" endtime="20201030 11:51:49.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.077" endtime="20201030 11:51:49.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.007" endtime="20201030 11:51:49.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.001" endtime="20201030 11:51:49.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.100" endtime="20201030 11:51:49.448"></status>
</kw>
<msg timestamp="20201030 11:51:49.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034621778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035423806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.097" endtime="20201030 11:51:49.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034621778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035423806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.457" endtime="20201030 11:51:49.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.475" endtime="20201030 11:51:49.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.090" endtime="20201030 11:51:49.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.085" endtime="20201030 11:51:49.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:49.491" level="INFO">${PHILIP_RES} = [{'diff': 0.0008020280000000032}, {'diff': 0.0008020559999999954}, {'diff': 0.000802070000000002}, {'diff': 0.0008021529999999999}, {'diff': 0.0008021669999999995}, {'diff': 0.0008021529999999999}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:49.484" endtime="20201030 11:51:49.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.500" level="INFO">${RESULT} = {'diff': [0.0008020280000000032, 0.0008020559999999954, 0.000802070000000002, 0.0008021529999999999, 0.0008021669999999995, 0.0008021529999999999, 0.0008021799999999996, 0.0008022359999999978, 0.00080...</msg>
<status status="PASS" starttime="20201030 11:51:49.493" endtime="20201030 11:51:49.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.511" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:49.508" endtime="20201030 11:51:49.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.516" level="INFO">VALUE: [0.0008020280000000032, 0.0008020559999999954, 0.000802070000000002, 0.0008021529999999999, 0.0008021669999999995, 0.0008021529999999999, 0.0008021799999999996, 0.0008022359999999978, 0.0008021390000000003, 0.0008021949999999986, 0.0008022359999999978, 0.0008022640000000039, 0.000802277000000004, 0.0008022359999999978, 0.0008021799999999996, 0.0008022079999999987, 0.000802263999999997, 0.0008021949999999986, 0.0008022089999999982, 0.0008021250000000008, 0.0008022640000000039, 0.0008022080000000056, 0.0008022359999999978, 0.0008021799999999996, 0.0008021250000000008, 0.0008021939999999991, 0.0008021390000000003, 0.0008019999999999972, 0.000802083000000002, 0.0008021389999999934, 0.0008021390000000003, 0.0008020000000000041, 0.0008020829999999951, 0.0008020279999999963, 0.0008020840000000085, 0.0008020269999999968, 0.0008020130000000042, 0.0008020420000000028, 0.0008021810000000129, 0.0008022360000000117, 0.0008020980000000011, 0.0008021669999999925, 0.0008022089999999982, 0.0008021670000000064, 0.0008021520000000004, 0.0008021529999999999, 0.0008022500000000043, 0.0008021529999999999, 0.0008020970000000016, 0.0008020970000000016]</msg>
<status status="PASS" starttime="20201030 11:51:49.513" endtime="20201030 11:51:49.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.502" endtime="20201030 11:51:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.997" endtime="20201030 11:51:49.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.967" endtime="20201030 11:51:49.521"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.527" endtime="20201030 11:51:49.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.523" endtime="20201030 11:51:49.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.571" endtime="20201030 11:51:49.624"></status>
</kw>
<msg timestamp="20201030 11:51:49.625" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.567" endtime="20201030 11:51:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.631" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.627" endtime="20201030 11:51:49.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.634" endtime="20201030 11:51:49.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.560" endtime="20201030 11:51:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.555" endtime="20201030 11:51:49.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.657" endtime="20201030 11:51:50.001"></status>
</kw>
<msg timestamp="20201030 11:51:50.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.654" endtime="20201030 11:51:50.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035457153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.010" endtime="20201030 11:51:50.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.028" endtime="20201030 11:51:50.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.646" endtime="20201030 11:51:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.642" endtime="20201030 11:51:50.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:50.044" level="INFO">${PHILIP_RES} = [{'diff': 0.0008375690000000033}, {'diff': 0.0008378889999999944}, {'diff': 0.0008378880000000019}, {'diff': 0.0008379300000000006}, {'diff': 0.0008378190000000035}, {'diff': 0.0008378750000000018}, {...</msg>
<status status="PASS" starttime="20201030 11:51:50.036" endtime="20201030 11:51:50.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.053" level="INFO">${RESULT} = {'diff': [0.0008375690000000033, 0.0008378889999999944, 0.0008378880000000019, 0.0008379300000000006, 0.0008378190000000035, 0.0008378750000000018, 0.0008379859999999989, 0.0008377639999999978, 0.0008...</msg>
<status status="PASS" starttime="20201030 11:51:50.046" endtime="20201030 11:51:50.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.063" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:50.061" endtime="20201030 11:51:50.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.069" level="INFO">VALUE: [0.0008375690000000033, 0.0008378889999999944, 0.0008378880000000019, 0.0008379300000000006, 0.0008378190000000035, 0.0008378750000000018, 0.0008379859999999989, 0.0008377639999999978, 0.0008377920000000039, 0.0008378189999999966, 0.0008378189999999966, 0.0008377079999999995, 0.0008378330000000031, 0.0008377639999999978, 0.0008378749999999949, 0.0008377639999999978, 0.0008377920000000039, 0.0008377079999999995, 0.0008377499999999982, 0.0008378330000000031, 0.0008378470000000027, 0.000837805000000004, 0.0008377780000000043, 0.0008377910000000044, 0.000837903000000001, 0.000837903000000001, 0.000837820000000003, 0.0008378339999999956, 0.0008378340000000026, 0.000837805000000004, 0.0008378330000000031, 0.0008378470000000027, 0.0008378059999999965, 0.00083779199999999, 0.0008377499999999982, 0.0008379169999999936, 0.000837804999999997, 0.0008378469999999888, 0.000837903000000001, 0.0008378889999999944, 0.0008377359999999917, 0.0008378609999999953, 0.000837903000000001, 0.000837903000000001, 0.0008378329999999962, 0.000837903000000001, 0.000837916000000008, 0.0008379300000000006, 0.0008378470000000027, 0.0008378609999999953]</msg>
<status status="PASS" starttime="20201030 11:51:50.066" endtime="20201030 11:51:50.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.055" endtime="20201030 11:51:50.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.551" endtime="20201030 11:51:50.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.522" endtime="20201030 11:51:50.074"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.079" endtime="20201030 11:51:50.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.076" endtime="20201030 11:51:50.103"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.125" endtime="20201030 11:51:50.179"></status>
</kw>
<msg timestamp="20201030 11:51:50.180" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.122" endtime="20201030 11:51:50.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.187" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.183" endtime="20201030 11:51:50.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.189" endtime="20201030 11:51:50.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.115" endtime="20201030 11:51:50.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.110" endtime="20201030 11:51:50.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.212" endtime="20201030 11:51:50.560"></status>
</kw>
<msg timestamp="20201030 11:51:50.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035897597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036771583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.209" endtime="20201030 11:51:50.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035897597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036771583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.569" endtime="20201030 11:51:50.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.587" endtime="20201030 11:51:50.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.202" endtime="20201030 11:51:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.197" endtime="20201030 11:51:50.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:50.603" level="INFO">${PHILIP_RES} = [{'diff': 0.0008739859999999933}, {'diff': 0.0008746250000000039}, {'diff': 0.0008746940000000022}, {'diff': 0.0008746799999999957}, {'diff': 0.0008746799999999957}, {'diff': 0.0008747909999999998}, {...</msg>
<status status="PASS" starttime="20201030 11:51:50.596" endtime="20201030 11:51:50.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.612" level="INFO">${RESULT} = {'diff': [0.0008739859999999933, 0.0008746250000000039, 0.0008746940000000022, 0.0008746799999999957, 0.0008746799999999957, 0.0008747909999999998, 0.0008747640000000001, 0.0008746669999999956, 0.0008...</msg>
<status status="PASS" starttime="20201030 11:51:50.605" endtime="20201030 11:51:50.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.623" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:50.621" endtime="20201030 11:51:50.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.630" level="INFO">VALUE: [0.0008739859999999933, 0.0008746250000000039, 0.0008746940000000022, 0.0008746799999999957, 0.0008746799999999957, 0.0008747909999999998, 0.0008747640000000001, 0.0008746669999999956, 0.0008746390000000034, 0.0008745839999999977, 0.000874736000000001, 0.0008747090000000013, 0.0008748329999999985, 0.0008748889999999968, 0.0008749309999999955, 0.0008748889999999968, 0.0008748329999999985, 0.0008747919999999992, 0.0008747919999999992, 0.0008747909999999998, 0.000874736000000001, 0.0008747230000000009, 0.0008748059999999988, 0.0008748750000000041, 0.000874862000000004, 0.0008747640000000001, 0.0008747640000000001, 0.0008747909999999998, 0.0008748889999999968, 0.0008749440000000025, 0.0008748060000000057, 0.0008748609999999907, 0.0008746669999999956, 0.000874736000000001, 0.0008749309999999955, 0.0008748749999999972, 0.0008748189999999989, 0.0008749160000000034, 0.0008748340000000049, 0.0008748060000000057, 0.0008747220000000083, 0.0008746109999999974, 0.000874653000000003, 0.000874653000000003, 0.0008746949999999948, 0.0008746520000000035, 0.0008746250000000039, 0.0008745829999999982, 0.0008745829999999982, 0.000874541999999992]</msg>
<status status="PASS" starttime="20201030 11:51:50.625" endtime="20201030 11:51:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.614" endtime="20201030 11:51:50.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.104" endtime="20201030 11:51:50.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.074" endtime="20201030 11:51:50.635"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.640" endtime="20201030 11:51:50.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.637" endtime="20201030 11:51:50.664"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.685" endtime="20201030 11:51:50.740"></status>
</kw>
<msg timestamp="20201030 11:51:50.742" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.682" endtime="20201030 11:51:50.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.748" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.744" endtime="20201030 11:51:50.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.750" endtime="20201030 11:51:50.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.674" endtime="20201030 11:51:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.669" endtime="20201030 11:51:50.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.773" endtime="20201030 11:51:51.114"></status>
</kw>
<msg timestamp="20201030 11:51:51.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034300097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035212319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.770" endtime="20201030 11:51:51.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034300097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035212319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.123" endtime="20201030 11:51:51.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.141" endtime="20201030 11:51:51.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.763" endtime="20201030 11:51:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.758" endtime="20201030 11:51:51.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:51.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0009122219999999973}, {'diff': 0.0009114719999999965}, {'diff': 0.0009115560000000009}, {'diff': 0.0009114439999999974}, {'diff': 0.0009115130000000027}, {'diff': 0.0009114719999999965}, {...</msg>
<status status="PASS" starttime="20201030 11:51:51.149" endtime="20201030 11:51:51.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.167" level="INFO">${RESULT} = {'diff': [0.0009122219999999973, 0.0009114719999999965, 0.0009115560000000009, 0.0009114439999999974, 0.0009115130000000027, 0.0009114719999999965, 0.0009115139999999952, 0.0009115280000000017, 0.0009...</msg>
<status status="PASS" starttime="20201030 11:51:51.159" endtime="20201030 11:51:51.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.178" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:51.175" endtime="20201030 11:51:51.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.183" level="INFO">VALUE: [0.0009122219999999973, 0.0009114719999999965, 0.0009115560000000009, 0.0009114439999999974, 0.0009115130000000027, 0.0009114719999999965, 0.0009115139999999952, 0.0009115280000000017, 0.0009115560000000009, 0.0009117640000000024, 0.0009115830000000005, 0.0009116659999999985, 0.0009114720000000034, 0.0009114590000000033, 0.0009114029999999981, 0.0009113889999999986, 0.0009114450000000038, 0.0009114449999999968, 0.0009113609999999994, 0.0009113469999999999, 0.0009114029999999981, 0.0009114719999999965, 0.0009114169999999977, 0.0009114029999999981, 0.0009114439999999974, 0.0009114299999999978, 0.0009113750000000059, 0.0009113879999999991, 0.0009115139999999952, 0.0009115410000000018, 0.0009115560000000078, 0.0009114439999999974, 0.000911486000000003, 0.0009115549999999945, 0.0009115829999999936, 0.0009114999999999956, 0.0009115410000000018, 0.0009115560000000078, 0.0009115140000000022, 0.000911569000000001, 0.00091145799999999, 0.0009113330000000003, 0.0009114590000000033, 0.0009114719999999965, 0.0009115420000000013, 0.0009114999999999956, 0.0009116109999999927, 0.0009115970000000001, 0.0009114450000000107, 0.0009115839999999931]</msg>
<status status="PASS" starttime="20201030 11:51:51.180" endtime="20201030 11:51:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.169" endtime="20201030 11:51:51.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.665" endtime="20201030 11:51:51.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.635" endtime="20201030 11:51:51.188"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.194" endtime="20201030 11:51:51.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.190" endtime="20201030 11:51:51.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.238" endtime="20201030 11:51:51.296"></status>
</kw>
<msg timestamp="20201030 11:51:51.297" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.235" endtime="20201030 11:51:51.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.303" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.299" endtime="20201030 11:51:51.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.305" endtime="20201030 11:51:51.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.228" endtime="20201030 11:51:51.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.222" endtime="20201030 11:51:51.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.329" endtime="20201030 11:51:51.672"></status>
</kw>
<msg timestamp="20201030 11:51:51.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034270139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035220361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.326" endtime="20201030 11:51:51.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034270139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035220361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.681" endtime="20201030 11:51:51.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.699" endtime="20201030 11:51:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.318" endtime="20201030 11:51:51.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.314" endtime="20201030 11:51:51.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:51.715" level="INFO">${PHILIP_RES} = [{'diff': 0.0009502220000000006}, {'diff': 0.0009501110000000035}, {'diff': 0.0009502909999999989}, {'diff': 0.0009502220000000006}, {'diff': 0.0009502780000000058}, {'diff': 0.0009503189999999981}, {...</msg>
<status status="PASS" starttime="20201030 11:51:51.708" endtime="20201030 11:51:51.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.726" level="INFO">${RESULT} = {'diff': [0.0009502220000000006, 0.0009501110000000035, 0.0009502909999999989, 0.0009502220000000006, 0.0009502780000000058, 0.0009503189999999981, 0.0009502220000000006, 0.000950208000000001, 0.00095...</msg>
<status status="PASS" starttime="20201030 11:51:51.717" endtime="20201030 11:51:51.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.736" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:51.734" endtime="20201030 11:51:51.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.742" level="INFO">VALUE: [0.0009502220000000006, 0.0009501110000000035, 0.0009502909999999989, 0.0009502220000000006, 0.0009502780000000058, 0.0009503189999999981, 0.0009502220000000006, 0.000950208000000001, 0.0009502360000000001, 0.000950096999999997, 0.0009501520000000027, 0.0009501810000000013, 0.0009503189999999981, 0.0009502640000000062, 0.000950223, 0.0009502220000000006, 0.0009502360000000001, 0.0009502220000000006, 0.0009501110000000035, 0.0009501660000000023, 0.0009502919999999984, 0.0009501810000000013, 0.0009502090000000005, 0.0009503609999999968, 0.0009503480000000036, 0.0009502639999999993, 0.0009502639999999993, 0.0009502220000000006, 0.0009502360000000001, 0.0009501110000000035, 0.0009504030000000024, 0.0009503889999999959, 0.0009502769999999994, 0.0009502779999999988, 0.000950319000000005, 0.0009503189999999911, 0.0009504580000000012, 0.0009503330000000115, 0.0009503750000000033, 0.0009503889999999959, 0.0009504030000000024, 0.000950305999999998, 0.0009503620000000101, 0.000950417000000009, 0.0009504730000000072, 0.0009504580000000012, 0.0009503470000000042, 0.000950402000000003, 0.0009503609999999968, 0.000950417000000009]</msg>
<status status="PASS" starttime="20201030 11:51:51.739" endtime="20201030 11:51:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.727" endtime="20201030 11:51:51.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.218" endtime="20201030 11:51:51.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.189" endtime="20201030 11:51:51.746"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.752" endtime="20201030 11:51:51.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.749" endtime="20201030 11:51:51.776"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.797" endtime="20201030 11:51:51.856"></status>
</kw>
<msg timestamp="20201030 11:51:51.858" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.794" endtime="20201030 11:51:51.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.864" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.860" endtime="20201030 11:51:51.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.866" endtime="20201030 11:51:51.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.786" endtime="20201030 11:51:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.781" endtime="20201030 11:51:51.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.889" endtime="20201030 11:51:52.234"></status>
</kw>
<msg timestamp="20201030 11:51:52.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035635056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:51.886" endtime="20201030 11:51:52.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035635056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:52.243" endtime="20201030 11:51:52.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.261" endtime="20201030 11:51:52.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.879" endtime="20201030 11:51:52.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.874" endtime="20201030 11:51:52.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:52.277" level="INFO">${PHILIP_RES} = [{'diff': 0.000989055999999995}, {'diff': 0.0009887910000000028}, {'diff': 0.0009888059999999949}, {'diff': 0.0009887920000000022}, {'diff': 0.0009889019999999998}, {'diff': 0.0009888200000000014}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:52.270" endtime="20201030 11:51:52.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.286" level="INFO">${RESULT} = {'diff': [0.000989055999999995, 0.0009887910000000028, 0.0009888059999999949, 0.0009887920000000022, 0.0009889019999999998, 0.0009888200000000014, 0.0009889169999999989, 0.0009889159999999994, 0.00098...</msg>
<status status="PASS" starttime="20201030 11:51:52.279" endtime="20201030 11:51:52.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.297" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:52.294" endtime="20201030 11:51:52.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.302" level="INFO">VALUE: [0.000989055999999995, 0.0009887910000000028, 0.0009888059999999949, 0.0009887920000000022, 0.0009889019999999998, 0.0009888200000000014, 0.0009889169999999989, 0.0009889159999999994, 0.000988929999999999, 0.0009890000000000038, 0.000989041000000003, 0.0009888610000000006, 0.0009889999999999968, 0.0009889859999999973, 0.0009889170000000058, 0.0009889029999999993, 0.0009888750000000002, 0.0009890139999999964, 0.0009889590000000045, 0.0009887779999999957, 0.0009889720000000046, 0.0009889720000000046, 0.0009888889999999997, 0.000989056000000002, 0.0009889729999999972, 0.0009889169999999989, 0.000988847000000001, 0.0009888190000000019, 0.0009888890000000067, 0.0009888750000000002, 0.000988916999999992, 0.0009889729999999902, 0.000988847000000001, 0.0009888890000000067, 0.000988944999999991, 0.0009889720000000046, 0.000988945000000005, 0.0009889859999999973, 0.000989028000000003, 0.000989028000000003, 0.000989040999999996, 0.0009889859999999973, 0.0009890830000000017, 0.0009890969999999943, 0.0009891110000000009, 0.000989139, 0.0009890699999999947, 0.000989027999999989, 0.0009890419999999955, 0.0009891530000000065]</msg>
<status status="PASS" starttime="20201030 11:51:52.299" endtime="20201030 11:51:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.288" endtime="20201030 11:51:52.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.777" endtime="20201030 11:51:52.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.747" endtime="20201030 11:51:52.307"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.313" endtime="20201030 11:51:52.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.309" endtime="20201030 11:51:52.336"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.357" endtime="20201030 11:51:52.420"></status>
</kw>
<msg timestamp="20201030 11:51:52.422" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.354" endtime="20201030 11:51:52.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.428" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.424" endtime="20201030 11:51:52.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.430" endtime="20201030 11:51:52.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.347" endtime="20201030 11:51:52.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.341" endtime="20201030 11:51:52.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.453" endtime="20201030 11:51:52.795"></status>
</kw>
<msg timestamp="20201030 11:51:52.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036975361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.450" endtime="20201030 11:51:52.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036975361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.804" endtime="20201030 11:51:52.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.822" endtime="20201030 11:51:52.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.443" endtime="20201030 11:51:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.438" endtime="20201030 11:51:52.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:52.838" level="INFO">${PHILIP_RES} = [{'diff': 0.0010286249999999983}, {'diff': 0.0010277500000000009}, {'diff': 0.001027778}, {'diff': 0.0010277919999999996}, {'diff': 0.001027749999999994}, {'diff': 0.0010278469999999984}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:52.831" endtime="20201030 11:51:52.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.847" level="INFO">${RESULT} = {'diff': [0.0010286249999999983, 0.0010277500000000009, 0.001027778, 0.0010277919999999996, 0.001027749999999994, 0.0010278469999999984, 0.0010278190000000062, 0.001027972000000002, 0.0010278329999999...</msg>
<status status="PASS" starttime="20201030 11:51:52.840" endtime="20201030 11:51:52.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.858" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:52.856" endtime="20201030 11:51:52.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.863" level="INFO">VALUE: [0.0010286249999999983, 0.0010277500000000009, 0.001027778, 0.0010277919999999996, 0.001027749999999994, 0.0010278469999999984, 0.0010278190000000062, 0.001027972000000002, 0.0010278329999999988, 0.0010278329999999988, 0.0010279160000000037, 0.0010280280000000003, 0.0010280140000000007, 0.0010278329999999988, 0.001027889000000004, 0.0010278750000000045, 0.0010279309999999958, 0.0010279030000000036, 0.0010279170000000032, 0.0010280000000000011, 0.0010278469999999984, 0.0010278749999999975, 0.0010280000000000011, 0.0010279159999999968, 0.0010278889999999971, 0.0010277640000000005, 0.0010277770000000075, 0.001027832999999992, 0.0010277080000000022, 0.0010277360000000013, 0.001027666999999996, 0.001027861000000005, 0.0010278059999999922, 0.0010279029999999967, 0.0010278749999999975, 0.0010279019999999972, 0.001027860999999991, 0.0010277919999999996, 0.0010278050000000066, 0.0010277770000000075, 0.001027777999999993, 0.001027778000000007, 0.001027832999999992, 0.0010278050000000066, 0.001027861000000005, 0.0010277919999999996, 0.0010278469999999984, 0.0010278749999999975, 0.0010276939999999957, 0.0010277220000000087]</msg>
<status status="PASS" starttime="20201030 11:51:52.860" endtime="20201030 11:51:52.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.849" endtime="20201030 11:51:52.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.337" endtime="20201030 11:51:52.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.308" endtime="20201030 11:51:52.868"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.874" endtime="20201030 11:51:52.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.870" endtime="20201030 11:51:52.897"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.920" endtime="20201030 11:51:52.984"></status>
</kw>
<msg timestamp="20201030 11:51:52.985" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.917" endtime="20201030 11:51:52.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.992" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.987" endtime="20201030 11:51:52.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.994" endtime="20201030 11:51:52.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.909" endtime="20201030 11:51:52.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.904" endtime="20201030 11:51:53.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.017" endtime="20201030 11:51:53.360"></status>
</kw>
<msg timestamp="20201030 11:51:53.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036194264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037263861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.014" endtime="20201030 11:51:53.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036194264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037263861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.369" endtime="20201030 11:51:53.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.387" endtime="20201030 11:51:53.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.007" endtime="20201030 11:51:53.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.002" endtime="20201030 11:51:53.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:53.403" level="INFO">${PHILIP_RES} = [{'diff': 0.0010695970000000055}, {'diff': 0.0010687779999999994}, {'diff': 0.0010688469999999978}, {'diff': 0.001068791999999999}, {'diff': 0.0010688609999999973}, {'diff': 0.0010689440000000022}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:53.395" endtime="20201030 11:51:53.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.412" level="INFO">${RESULT} = {'diff': [0.0010695970000000055, 0.0010687779999999994, 0.0010688469999999978, 0.001068791999999999, 0.0010688609999999973, 0.0010689440000000022, 0.0010687779999999994, 0.0010687779999999994, 0.00106...</msg>
<status status="PASS" starttime="20201030 11:51:53.405" endtime="20201030 11:51:53.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.422" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:53.420" endtime="20201030 11:51:53.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.429" level="INFO">VALUE: [0.0010695970000000055, 0.0010687779999999994, 0.0010688469999999978, 0.001068791999999999, 0.0010688609999999973, 0.0010689440000000022, 0.0010687779999999994, 0.0010687779999999994, 0.0010687500000000003, 0.0010689169999999956, 0.0010689019999999966, 0.0010688610000000043, 0.0010688610000000043, 0.0010688330000000051, 0.0010688890000000034, 0.001068693999999995, 0.0010687779999999994, 0.0010687500000000003, 0.0010686670000000023, 0.0010686669999999954, 0.0010686660000000028, 0.0010687220000000011, 0.0010686529999999958, 0.001068610999999997, 0.0010686670000000092, 0.0010687080000000015, 0.0010686519999999894, 0.001068693999999995, 0.0010686250000000036, 0.0010686800000000024, 0.0010686669999999954, 0.001068722000000008, 0.0010685970000000045, 0.0010688060000000055, 0.0010688339999999907, 0.0010686669999999954, 0.0010686670000000092, 0.0010688049999999921, 0.0010687499999999933, 0.0010686530000000027, 0.0010687219999999942, 0.0010687639999999998, 0.0010686530000000027, 0.0010686379999999968, 0.001068722000000008, 0.0010687360000000007, 0.0010686530000000027, 0.001068582999999998, 0.0010685139999999926, 0.0010685689999999914]</msg>
<status status="PASS" starttime="20201030 11:51:53.425" endtime="20201030 11:51:53.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.414" endtime="20201030 11:51:53.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.899" endtime="20201030 11:51:53.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.869" endtime="20201030 11:51:53.434"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.440" endtime="20201030 11:51:53.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.436" endtime="20201030 11:51:53.464"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.484" endtime="20201030 11:51:53.550"></status>
</kw>
<msg timestamp="20201030 11:51:53.552" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.481" endtime="20201030 11:51:53.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.558" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.554" endtime="20201030 11:51:53.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.560" endtime="20201030 11:51:53.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.474" endtime="20201030 11:51:53.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.469" endtime="20201030 11:51:53.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.585" endtime="20201030 11:51:53.925"></status>
</kw>
<msg timestamp="20201030 11:51:53.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034240458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.582" endtime="20201030 11:51:53.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034240458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.934" endtime="20201030 11:51:53.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.952" endtime="20201030 11:51:53.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.574" endtime="20201030 11:51:53.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.569" endtime="20201030 11:51:53.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:53.970" level="INFO">${PHILIP_RES} = [{'diff': 0.0011092359999999996}, {'diff': 0.0011094030000000019}, {'diff': 0.0011094439999999942}, {'diff': 0.0011094859999999998}, {'diff': 0.0011095279999999985}, {'diff': 0.0011097499999999996}, {...</msg>
<status status="PASS" starttime="20201030 11:51:53.961" endtime="20201030 11:51:53.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.981" level="INFO">${RESULT} = {'diff': [0.0011092359999999996, 0.0011094030000000019, 0.0011094439999999942, 0.0011094859999999998, 0.0011095279999999985, 0.0011097499999999996, 0.001109736, 0.0011097779999999988, 0.00110968100000...</msg>
<status status="PASS" starttime="20201030 11:51:53.973" endtime="20201030 11:51:53.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.992" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:53.989" endtime="20201030 11:51:53.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.997" level="INFO">VALUE: [0.0011092359999999996, 0.0011094030000000019, 0.0011094439999999942, 0.0011094859999999998, 0.0011095279999999985, 0.0011097499999999996, 0.001109736, 0.0011097779999999988, 0.0011096810000000012, 0.0011095969999999969, 0.0011095549999999982, 0.0011096110000000034, 0.001109736, 0.0011096110000000034, 0.0011094859999999998, 0.001109444000000001, 0.001109513999999999, 0.0011096660000000022, 0.0011095549999999982, 0.001109542000000005, 0.0011094720000000002, 0.001109624999999996, 0.0011094580000000007, 0.001109332999999997, 0.0011095699999999903, 0.0011095140000000059, 0.0011094169999999876, 0.0011093890000000023, 0.0011095830000000112, 0.001109625000000003, 0.0011096530000000021, 0.0011096669999999947, 0.0011096530000000021, 0.0011096109999999965, 0.0011094859999999929, 0.0011096109999999965, 0.0011095279999999985, 0.0011095830000000112, 0.001109542000000005, 0.0011096810000000012, 0.0011096669999999947, 0.0011095559999999977, 0.0011096529999999882, 0.001109625000000003, 0.0011096810000000012, 0.0011097499999999927, 0.0011096669999999947, 0.0011096530000000021, 0.0011094720000000002, 0.0011095979999999894]</msg>
<status status="PASS" starttime="20201030 11:51:53.994" endtime="20201030 11:51:54.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.983" endtime="20201030 11:51:54.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.465" endtime="20201030 11:51:54.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.435" endtime="20201030 11:51:54.007"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.013" endtime="20201030 11:51:54.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.009" endtime="20201030 11:51:54.036"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.057" endtime="20201030 11:51:54.126"></status>
</kw>
<msg timestamp="20201030 11:51:54.127" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.053" endtime="20201030 11:51:54.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.133" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.129" endtime="20201030 11:51:54.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.135" endtime="20201030 11:51:54.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.046" endtime="20201030 11:51:54.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.041" endtime="20201030 11:51:54.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.158" endtime="20201030 11:51:54.503"></status>
</kw>
<msg timestamp="20201030 11:51:54.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035046764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036197972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.155" endtime="20201030 11:51:54.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035046764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036197972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.513" endtime="20201030 11:51:54.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.531" endtime="20201030 11:51:54.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.148" endtime="20201030 11:51:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.143" endtime="20201030 11:51:54.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:54.547" level="INFO">${PHILIP_RES} = [{'diff': 0.0011512080000000008}, {'diff': 0.0011514440000000015}, {'diff': 0.0011513890000000027}, {'diff': 0.001151430000000002}, {'diff': 0.0011514169999999949}, {'diff': 0.0011512499999999995}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:54.540" endtime="20201030 11:51:54.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.558" level="INFO">${RESULT} = {'diff': [0.0011512080000000008, 0.0011514440000000015, 0.0011513890000000027, 0.001151430000000002, 0.0011514169999999949, 0.0011512499999999995, 0.0011513610000000035, 0.0011513189999999979, 0.00115...</msg>
<status status="PASS" starttime="20201030 11:51:54.549" endtime="20201030 11:51:54.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.569" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:54.566" endtime="20201030 11:51:54.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.574" level="INFO">VALUE: [0.0011512080000000008, 0.0011514440000000015, 0.0011513890000000027, 0.001151430000000002, 0.0011514169999999949, 0.0011512499999999995, 0.0011513610000000035, 0.0011513189999999979, 0.0011514310000000014, 0.0011514860000000002, 0.001151639000000003, 0.0011515970000000042, 0.0011515829999999977, 0.0011515689999999981, 0.0011515420000000054, 0.0011515699999999976, 0.0011514169999999949, 0.001151445000000001, 0.0011514590000000005, 0.0011513610000000035, 0.0011515139999999993, 0.0011515139999999993, 0.001151444999999994, 0.0011513470000000109, 0.0011514720000000006, 0.0011514030000000092, 0.0011514310000000083, 0.0011514720000000006, 0.0011515279999999989, 0.001151541000000006, 0.001151445000000001, 0.001151236, 0.0011513890000000027, 0.00115137500000001, 0.0011513199999999973, 0.0011513199999999973, 0.0011513890000000027, 0.0011515139999999924, 0.0011514029999999953, 0.0011514439999999876, 0.001151457999999994, 0.0011513609999999896, 0.0011513609999999896, 0.001151362000000003, 0.0011513199999999973, 0.0011513749999999962, 0.0011514869999999927, 0.0011513610000000035, 0.0011513199999999973, 0.0011513189999999979]</msg>
<status status="PASS" starttime="20201030 11:51:54.571" endtime="20201030 11:51:54.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.560" endtime="20201030 11:51:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.037" endtime="20201030 11:51:54.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.008" endtime="20201030 11:51:54.581"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.588" endtime="20201030 11:51:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.584" endtime="20201030 11:51:54.613"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.634" endtime="20201030 11:51:54.705"></status>
</kw>
<msg timestamp="20201030 11:51:54.706" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.631" endtime="20201030 11:51:54.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.713" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.709" endtime="20201030 11:51:54.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.715" endtime="20201030 11:51:54.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.624" endtime="20201030 11:51:54.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.618" endtime="20201030 11:51:54.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.739" endtime="20201030 11:51:55.097"></status>
</kw>
<msg timestamp="20201030 11:51:55.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035409542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036603361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.735" endtime="20201030 11:51:55.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035409542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036603361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.107" endtime="20201030 11:51:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.125" endtime="20201030 11:51:55.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.728" endtime="20201030 11:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.723" endtime="20201030 11:51:55.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:55.141" level="INFO">${PHILIP_RES} = [{'diff': 0.0011938189999999987}, {'diff': 0.0011931660000000024}, {'diff': 0.0011933329999999978}, {'diff': 0.0011932360000000003}, {'diff': 0.0011931940000000016}, {'diff': 0.0011931250000000032}, {...</msg>
<status status="PASS" starttime="20201030 11:51:55.133" endtime="20201030 11:51:55.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.150" level="INFO">${RESULT} = {'diff': [0.0011938189999999987, 0.0011931660000000024, 0.0011933329999999978, 0.0011932360000000003, 0.0011931940000000016, 0.0011931250000000032, 0.001193263, 0.001193277999999999, 0.001193166999999...</msg>
<status status="PASS" starttime="20201030 11:51:55.143" endtime="20201030 11:51:55.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.161" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:55.159" endtime="20201030 11:51:55.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.166" level="INFO">VALUE: [0.0011938189999999987, 0.0011931660000000024, 0.0011933329999999978, 0.0011932360000000003, 0.0011931940000000016, 0.0011931250000000032, 0.001193263, 0.001193277999999999, 0.001193166999999995, 0.0011932080000000012, 0.0011931809999999946, 0.0011932219999999938, 0.0011933059999999981, 0.0011933059999999981, 0.0011931390000000028, 0.0011931110000000036, 0.0011931249999999963, 0.0011932220000000007, 0.0011932639999999994, 0.0011934030000000026, 0.0011934450000000013, 0.0011934030000000026, 0.0011932919999999986, 0.0011935559999999984, 0.0011936530000000029, 0.001193554999999999, 0.0011935690000000054, 0.001193570000000005, 0.0011936389999999963, 0.0011935560000000123, 0.001193472000000001, 0.0011936249999999898, 0.001193487000000007, 0.0011935279999999993, 0.0011935139999999927, 0.001193598000000004, 0.0011934450000000013, 0.0011935279999999993, 0.0011934029999999957, 0.0011933469999999974, 0.001193570000000005, 0.0011933479999999969, 0.0011933889999999892, 0.0011932090000000006, 0.0011932219999999938, 0.001193278000000006, 0.0011933610000000039, 0.001193306000000005, 0.0011933189999999982, 0.0011934029999999957]</msg>
<status status="PASS" starttime="20201030 11:51:55.163" endtime="20201030 11:51:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.152" endtime="20201030 11:51:55.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.614" endtime="20201030 11:51:55.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.582" endtime="20201030 11:51:55.171"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.177" endtime="20201030 11:51:55.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.173" endtime="20201030 11:51:55.201"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.222" endtime="20201030 11:51:55.296"></status>
</kw>
<msg timestamp="20201030 11:51:55.297" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.219" endtime="20201030 11:51:55.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.304" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.300" endtime="20201030 11:51:55.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.306" endtime="20201030 11:51:55.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.211" endtime="20201030 11:51:55.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.206" endtime="20201030 11:51:55.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.330" endtime="20201030 11:51:55.684"></status>
</kw>
<msg timestamp="20201030 11:51:55.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036213847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037449694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.327" endtime="20201030 11:51:55.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036213847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037449694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.694" endtime="20201030 11:51:55.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.712" endtime="20201030 11:51:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.320" endtime="20201030 11:51:55.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.315" endtime="20201030 11:51:55.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:55.729" level="INFO">${PHILIP_RES} = [{'diff': 0.0012358469999999983}, {'diff': 0.0012360419999999997}, {'diff': 0.0012363059999999995}, {'diff': 0.0012361250000000046}, {'diff': 0.0012360280000000001}, {'diff': 0.001235901999999997}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:55.721" endtime="20201030 11:51:55.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.738" level="INFO">${RESULT} = {'diff': [0.0012358469999999983, 0.0012360419999999997, 0.0012363059999999995, 0.0012361250000000046, 0.0012360280000000001, 0.001235901999999997, 0.0012361810000000029, 0.0012360969999999985, 0.00123...</msg>
<status status="PASS" starttime="20201030 11:51:55.731" endtime="20201030 11:51:55.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.748" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:55.746" endtime="20201030 11:51:55.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.754" level="INFO">VALUE: [0.0012358469999999983, 0.0012360419999999997, 0.0012363059999999995, 0.0012361250000000046, 0.0012360280000000001, 0.001235901999999997, 0.0012361810000000029, 0.0012360969999999985, 0.0012360140000000006, 0.0012359029999999965, 0.0012360410000000002, 0.0012360830000000059, 0.001235999999999994, 0.001236000000000001, 0.0012360559999999993, 0.0012359440000000027, 0.0012360969999999985, 0.001236209000000002, 0.001236208999999995, 0.0012361810000000029, 0.0012363470000000057, 0.0012363469999999988, 0.0012361530000000037, 0.0012362499999999943, 0.0012362500000000082, 0.0012363610000000053, 0.0012362910000000005, 0.0012362780000000073, 0.001236319999999999, 0.0012362779999999934, 0.0012363340000000056, 0.0012362360000000017, 0.0012364170000000035, 0.0012363889999999905, 0.0012365420000000071, 0.001236402999999997, 0.001236374999999998, 0.0012363330000000061, 0.0012363890000000044, 0.0012361659999999969, 0.001236304999999993, 0.0012362640000000008, 0.0012365139999999941, 0.0012363329999999922, 0.0012362910000000005, 0.0012362360000000017, 0.0012362780000000073, 0.0012362640000000008, 0.001236304999999993, 0.0012361250000000046]</msg>
<status status="PASS" starttime="20201030 11:51:55.751" endtime="20201030 11:51:55.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.740" endtime="20201030 11:51:55.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.202" endtime="20201030 11:51:55.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.172" endtime="20201030 11:51:55.759"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.765" endtime="20201030 11:51:55.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.761" endtime="20201030 11:51:55.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.811" endtime="20201030 11:51:55.886"></status>
</kw>
<msg timestamp="20201030 11:51:55.887" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.808" endtime="20201030 11:51:55.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.894" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.890" endtime="20201030 11:51:55.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.896" endtime="20201030 11:51:55.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.800" endtime="20201030 11:51:55.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.795" endtime="20201030 11:51:55.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.920" endtime="20201030 11:51:56.274"></status>
</kw>
<msg timestamp="20201030 11:51:56.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036466444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037745819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.917" endtime="20201030 11:51:56.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036466444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037745819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.283" endtime="20201030 11:51:56.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.302" endtime="20201030 11:51:56.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.909" endtime="20201030 11:51:56.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.905" endtime="20201030 11:51:56.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:56.318" level="INFO">${PHILIP_RES} = [{'diff': 0.0012793749999999993}, {'diff': 0.0012797359999999966}, {'diff': 0.0012798749999999998}, {'diff': 0.0012798749999999998}, {'diff': 0.0012799299999999986}, {'diff': 0.0012798340000000005}, {...</msg>
<status status="PASS" starttime="20201030 11:51:56.310" endtime="20201030 11:51:56.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.327" level="INFO">${RESULT} = {'diff': [0.0012793749999999993, 0.0012797359999999966, 0.0012798749999999998, 0.0012798749999999998, 0.0012799299999999986, 0.0012798340000000005, 0.0012799719999999973, 0.0012798470000000006, 0.0012...</msg>
<status status="PASS" starttime="20201030 11:51:56.320" endtime="20201030 11:51:56.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.337" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:56.335" endtime="20201030 11:51:56.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.345" level="INFO">VALUE: [0.0012793749999999993, 0.0012797359999999966, 0.0012798749999999998, 0.0012798749999999998, 0.0012799299999999986, 0.0012798340000000005, 0.0012799719999999973, 0.0012798470000000006, 0.001280013999999996, 0.0012797910000000023, 0.0012796939999999979, 0.0012797909999999954, 0.0012798470000000006, 0.001279820000000001, 0.0012799169999999985, 0.0012799019999999994, 0.0012799579999999977, 0.0012798190000000015, 0.001279736999999996, 0.0012797360000000035, 0.0012796250000000065, 0.001279638999999999, 0.0012796250000000065, 0.001279638999999999, 0.0012799579999999977, 0.0012797769999999958, 0.0012798059999999944, 0.0012796809999999909, 0.0012797090000000039, 0.0012798340000000075, 0.0012798749999999998, 0.001279804999999995, 0.0012798050000000089, 0.0012798610000000071, 0.001279804999999995, 0.0012796939999999979, 0.0012798890000000063, 0.001279930999999998, 0.0012798329999999941, 0.0012798060000000083, 0.001280013999999996, 0.0012799299999999986, 0.001279916000000006, 0.0012799439999999912, 0.0012800140000000099, 0.0012799170000000054, 0.0012799720000000042, 0.001279902999999999, 0.0012799720000000042, 0.0012800000000000034]</msg>
<status status="PASS" starttime="20201030 11:51:56.340" endtime="20201030 11:51:56.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.329" endtime="20201030 11:51:56.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.790" endtime="20201030 11:51:56.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.760" endtime="20201030 11:51:56.350"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.356" endtime="20201030 11:51:56.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.352" endtime="20201030 11:51:56.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.401" endtime="20201030 11:51:56.478"></status>
</kw>
<msg timestamp="20201030 11:51:56.479" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.397" endtime="20201030 11:51:56.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.486" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.482" endtime="20201030 11:51:56.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.488" endtime="20201030 11:51:56.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.390" endtime="20201030 11:51:56.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.385" endtime="20201030 11:51:56.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.512" endtime="20201030 11:51:56.866"></status>
</kw>
<msg timestamp="20201030 11:51:56.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036149625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.508" endtime="20201030 11:51:56.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036149625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.875" endtime="20201030 11:51:56.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.894" endtime="20201030 11:51:56.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.501" endtime="20201030 11:51:56.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.496" endtime="20201030 11:51:56.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:56.910" level="INFO">${PHILIP_RES} = [{'diff': 0.0013245689999999977}, {'diff': 0.0013246520000000025}, {'diff': 0.0013246520000000025}, {'diff': 0.001324846999999997}, {'diff': 0.0013247639999999991}, {'diff': 0.001324846999999997}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:56.902" endtime="20201030 11:51:56.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.921" level="INFO">${RESULT} = {'diff': [0.0013245689999999977, 0.0013246520000000025, 0.0013246520000000025, 0.001324846999999997, 0.0013247639999999991, 0.001324846999999997, 0.0013247080000000008, 0.0013247770000000061, 0.001324...</msg>
<status status="PASS" starttime="20201030 11:51:56.912" endtime="20201030 11:51:56.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.931" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:56.929" endtime="20201030 11:51:56.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.937" level="INFO">VALUE: [0.0013245689999999977, 0.0013246520000000025, 0.0013246520000000025, 0.001324846999999997, 0.0013247639999999991, 0.001324846999999997, 0.0013247080000000008, 0.0013247770000000061, 0.001324847000000004, 0.0013248750000000031, 0.0013246800000000017, 0.001324624999999996, 0.0013246390000000025, 0.001324638000000003, 0.001324736, 0.0013246110000000033, 0.0013246669999999947, 0.001324736, 0.001324833999999997, 0.0013247779999999987, 0.0013248190000000049, 0.001324735999999993, 0.0013246669999999877, 0.0013246519999999956, 0.001324652999999995, 0.0013247079999999939, 0.0013245690000000115, 0.0013246670000000016, 0.0013248059999999978, 0.0013249719999999937, 0.0013248610000000105, 0.0013249720000000076, 0.0013249860000000002, 0.0013249030000000023, 0.0013250139999999994, 0.0013249030000000023, 0.0013249590000000006, 0.0013249310000000014, 0.0013248749999999893, 0.0013248750000000031, 0.0013250000000000067, 0.0013250000000000067, 0.0013248049999999983, 0.001324736000000007, 0.0013247499999999995, 0.0013247229999999999, 0.0013249310000000014, 0.001324818999999991, 0.0013248889999999958, 0.0013247639999999922]</msg>
<status status="PASS" starttime="20201030 11:51:56.934" endtime="20201030 11:51:56.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.923" endtime="20201030 11:51:56.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.381" endtime="20201030 11:51:56.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.351" endtime="20201030 11:51:56.942"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.948" endtime="20201030 11:51:56.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.944" endtime="20201030 11:51:56.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.993" endtime="20201030 11:51:57.073"></status>
</kw>
<msg timestamp="20201030 11:51:57.074" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.989" endtime="20201030 11:51:57.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.080" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.076" endtime="20201030 11:51:57.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.082" endtime="20201030 11:51:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.982" endtime="20201030 11:51:57.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.977" endtime="20201030 11:51:57.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.106" endtime="20201030 11:51:57.461"></status>
</kw>
<msg timestamp="20201030 11:51:57.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036255167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.103" endtime="20201030 11:51:57.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034885069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036255167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.470" endtime="20201030 11:51:57.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.488" endtime="20201030 11:51:57.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.095" endtime="20201030 11:51:57.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.091" endtime="20201030 11:51:57.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:57.505" level="INFO">${PHILIP_RES} = [{'diff': 0.0013700980000000001}, {'diff': 0.0013695700000000005}, {'diff': 0.001369569000000001}, {'diff': 0.0013695279999999949}, {'diff': 0.0013695700000000005}, {'diff': 0.001369458000000004}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:57.497" endtime="20201030 11:51:57.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.516" level="INFO">${RESULT} = {'diff': [0.0013700980000000001, 0.0013695700000000005, 0.001369569000000001, 0.0013695279999999949, 0.0013695700000000005, 0.001369458000000004, 0.0013694450000000039, 0.0013694590000000034, 0.001369...</msg>
<status status="PASS" starttime="20201030 11:51:57.507" endtime="20201030 11:51:57.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.526" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:57.524" endtime="20201030 11:51:57.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.532" level="INFO">VALUE: [0.0013700980000000001, 0.0013695700000000005, 0.001369569000000001, 0.0013695279999999949, 0.0013695700000000005, 0.001369458000000004, 0.0013694450000000039, 0.0013694590000000034, 0.0013694450000000039, 0.0013694590000000034, 0.0013694720000000035, 0.0013694720000000035, 0.001369444999999997, 0.001369444999999997, 0.0013694719999999966, 0.0013694439999999974, 0.0013694870000000026, 0.0013698190000000013, 0.0013696530000000054, 0.0013695970000000002, 0.0013695420000000014, 0.0013695829999999937, 0.0013695829999999937, 0.0013698750000000065, 0.0013697770000000026, 0.0013696109999999928, 0.0013695280000000087, 0.0013695420000000014, 0.0013696390000000058, 0.0013697920000000086, 0.0013696529999999985, 0.0013696380000000064, 0.0013695140000000022, 0.0013692370000000093, 0.0013693050000000012, 0.0013694310000000043, 0.0013695280000000087, 0.0013693609999999995, 0.0013694439999999974, 0.0013693470000000069, 0.0013694159999999983, 0.0013693190000000077, 0.0013693889999999986, 0.0013694029999999913, 0.0013694590000000034, 0.0013693470000000069, 0.0013693339999999998, 0.0013695000000000096, 0.0013696109999999928, 0.0013695140000000022]</msg>
<status status="PASS" starttime="20201030 11:51:57.529" endtime="20201030 11:51:57.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.517" endtime="20201030 11:51:57.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.973" endtime="20201030 11:51:57.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.943" endtime="20201030 11:51:57.537"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.543" endtime="20201030 11:51:57.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.539" endtime="20201030 11:51:57.566"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.587" endtime="20201030 11:51:57.670"></status>
</kw>
<msg timestamp="20201030 11:51:57.671" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.584" endtime="20201030 11:51:57.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.677" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.673" endtime="20201030 11:51:57.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.680" endtime="20201030 11:51:57.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.577" endtime="20201030 11:51:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.571" endtime="20201030 11:51:57.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.705" endtime="20201030 11:51:58.063"></status>
</kw>
<msg timestamp="20201030 11:51:58.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034760153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036175653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.701" endtime="20201030 11:51:58.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034760153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036175653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.072" endtime="20201030 11:51:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.091" endtime="20201030 11:51:58.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.694" endtime="20201030 11:51:58.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.689" endtime="20201030 11:51:58.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:58.107" level="INFO">${PHILIP_RES} = [{'diff': 0.0014155}, {'diff': 0.001415597999999997}, {'diff': 0.0014155559999999984}, {'diff': 0.0014153059999999981}, {'diff': 0.0014152360000000003}, {'diff': 0.0014153749999999965}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201030 11:51:58.099" endtime="20201030 11:51:58.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.116" level="INFO">${RESULT} = {'diff': [0.0014155, 0.001415597999999997, 0.0014155559999999984, 0.0014153059999999981, 0.0014152360000000003, 0.0014153749999999965, 0.0014153479999999968, 0.0014153330000000047, 0.00141543000000000...</msg>
<status status="PASS" starttime="20201030 11:51:58.109" endtime="20201030 11:51:58.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.126" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:58.124" endtime="20201030 11:51:58.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.132" level="INFO">VALUE: [0.0014155, 0.001415597999999997, 0.0014155559999999984, 0.0014153059999999981, 0.0014152360000000003, 0.0014153749999999965, 0.0014153479999999968, 0.0014153330000000047, 0.0014154300000000022, 0.0014153750000000034, 0.0014154030000000026, 0.0014153469999999974, 0.001415388999999996, 0.001415291000000006, 0.001415472000000001, 0.001415598000000004, 0.001415582999999998, 0.0014156519999999964, 0.001415694000000002, 0.0014155, 0.001415598000000004, 0.0014154160000000027, 0.0014156250000000037, 0.0014156949999999946, 0.001415764, 0.0014157500000000073, 0.0014157780000000064, 0.001415764, 0.0014157360000000008, 0.001415458999999994, 0.001415611000000011, 0.001415764, 0.001415764, 0.0014155970000000045, 0.0014155140000000066, 0.001415582999999998, 0.0014154580000000083, 0.0014155139999999927, 0.0014156389999999963, 0.001415598000000004, 0.0014155, 0.0014155, 0.0014153749999999965, 0.001415569999999991, 0.0014154450000000013, 0.0014155689999999915, 0.001415389000000003, 0.0014154730000000004, 0.0014155279999999992, 0.0014156389999999963]</msg>
<status status="PASS" starttime="20201030 11:51:58.129" endtime="20201030 11:51:58.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.118" endtime="20201030 11:51:58.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.567" endtime="20201030 11:51:58.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.537" endtime="20201030 11:51:58.137"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.143" endtime="20201030 11:51:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.139" endtime="20201030 11:51:58.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.187" endtime="20201030 11:51:58.274"></status>
</kw>
<msg timestamp="20201030 11:51:58.275" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.184" endtime="20201030 11:51:58.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.281" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.277" endtime="20201030 11:51:58.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.283" endtime="20201030 11:51:58.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.177" endtime="20201030 11:51:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.172" endtime="20201030 11:51:58.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.307" endtime="20201030 11:51:58.658"></status>
</kw>
<msg timestamp="20201030 11:51:58.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036270681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037732125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.304" endtime="20201030 11:51:58.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036270681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037732125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.667" endtime="20201030 11:51:58.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.686" endtime="20201030 11:51:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.296" endtime="20201030 11:51:58.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.292" endtime="20201030 11:51:58.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:58.702" level="INFO">${PHILIP_RES} = [{'diff': 0.0014614439999999992}, {'diff': 0.0014619450000000062}, {'diff': 0.0014619859999999985}, {'diff': 0.0014619719999999989}, {'diff': 0.001461806000000003}, {'diff': 0.0014620560000000032}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:58.694" endtime="20201030 11:51:58.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.711" level="INFO">${RESULT} = {'diff': [0.0014614439999999992, 0.0014619450000000062, 0.0014619859999999985, 0.0014619719999999989, 0.001461806000000003, 0.0014620560000000032, 0.0014619030000000005, 0.0014619719999999989, 0.00146...</msg>
<status status="PASS" starttime="20201030 11:51:58.704" endtime="20201030 11:51:58.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.723" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:58.720" endtime="20201030 11:51:58.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.728" level="INFO">VALUE: [0.0014614439999999992, 0.0014619450000000062, 0.0014619859999999985, 0.0014619719999999989, 0.001461806000000003, 0.0014620560000000032, 0.0014619030000000005, 0.0014619719999999989, 0.0014620840000000024, 0.0014620279999999972, 0.0014620840000000024, 0.0014620970000000025, 0.0014620139999999976, 0.0014620140000000045, 0.001462194, 0.0014621800000000004, 0.0014621530000000008, 0.0014621389999999942, 0.0014619590000000127, 0.0014620559999999894, 0.0014620969999999955, 0.0014621249999999947, 0.0014620139999999976, 0.0014619440000000067, 0.0014620419999999967, 0.001461999999999991, 0.0014620559999999894, 0.0014619440000000067, 0.0014620270000000046, 0.0014620970000000094, 0.0014618470000000022, 0.00146179099999999, 0.0014619720000000058, 0.0014621120000000015, 0.0014622499999999983, 0.0014620699999999959, 0.0014620550000000038, 0.0014621250000000086, 0.0014620419999999967, 0.001462028000000004, 0.0014620550000000038, 0.0014622360000000056, 0.001462097999999995, 0.001462209000000006, 0.0014620560000000032, 0.0014619589999999988, 0.0014620560000000032, 0.0014620969999999955, 0.001461971999999992, 0.0014618329999999957]</msg>
<status status="PASS" starttime="20201030 11:51:58.725" endtime="20201030 11:51:58.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.713" endtime="20201030 11:51:58.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.167" endtime="20201030 11:51:58.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.138" endtime="20201030 11:51:58.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.384" endtime="20201030 11:51:58.734"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:29.281" endtime="20201030 11:51:58.737" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:00.362" endtime="20201030 11:51:58.763"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.951" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:58.967" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:52:00.911" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:58.948" endtime="20201030 11:52:00.912"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.917" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:52:00.914" endtime="20201030 11:52:00.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.945" endtime="20201030 11:52:00.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.925" endtime="20201030 11:52:01.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.922" endtime="20201030 11:52:01.269"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.309" endtime="20201030 11:52:01.339"></status>
</kw>
<msg timestamp="20201030 11:52:01.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.305" endtime="20201030 11:52:01.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.343" endtime="20201030 11:52:01.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.356" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:01.350" endtime="20201030 11:52:01.357"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:01.297" endtime="20201030 11:52:01.359"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:01.290" endtime="20201030 11:52:01.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.286" endtime="20201030 11:52:01.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:01.369" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:01.368" endtime="20201030 11:52:01.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.363" endtime="20201030 11:52:01.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.284" endtime="20201030 11:52:01.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.281" endtime="20201030 11:52:01.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.373" endtime="20201030 11:52:01.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.276" endtime="20201030 11:52:01.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.380" endtime="20201030 11:52:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.271" endtime="20201030 11:52:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.942" endtime="20201030 11:52:01.386"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.401" endtime="20201030 11:52:01.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.397" endtime="20201030 11:52:01.425"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.459" endtime="20201030 11:52:01.489"></status>
</kw>
<msg timestamp="20201030 11:52:01.490" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.456" endtime="20201030 11:52:01.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.492" endtime="20201030 11:52:01.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.503" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:01.499" endtime="20201030 11:52:01.504"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:01.449" endtime="20201030 11:52:01.506"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:01.442" endtime="20201030 11:52:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.439" endtime="20201030 11:52:01.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:01.516" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:01.515" endtime="20201030 11:52:01.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.510" endtime="20201030 11:52:01.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.437" endtime="20201030 11:52:01.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.436" endtime="20201030 11:52:01.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.522" endtime="20201030 11:52:01.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.432" endtime="20201030 11:52:01.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.427" endtime="20201030 11:52:01.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.394" endtime="20201030 11:52:01.529"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.555" endtime="20201030 11:52:01.573"></status>
</kw>
<msg timestamp="20201030 11:52:01.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.552" endtime="20201030 11:52:01.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.577" endtime="20201030 11:52:01.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.583" endtime="20201030 11:52:01.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.545" endtime="20201030 11:52:01.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.539" endtime="20201030 11:52:01.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.606" endtime="20201030 11:52:01.986"></status>
</kw>
<msg timestamp="20201030 11:52:01.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146334694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.146345014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:52:01.603" endtime="20201030 11:52:01.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146334694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.146345014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:52:01.997" endtime="20201030 11:52:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.016" endtime="20201030 11:52:02.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.596" endtime="20201030 11:52:02.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.591" endtime="20201030 11:52:02.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.034" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5653000000004358e-05}, {'diff': 1.6181000000003998e-05}, {'diff': 1.5999999999988246e-05}, {'diff': 1.5819999999999723e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.58329...</msg>
<status status="PASS" starttime="20201030 11:52:02.025" endtime="20201030 11:52:02.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.046" level="INFO">${ACCURACY} = {'diff': [0, 1.5653000000004358e-05, 1.6181000000003998e-05, 1.5999999999988246e-05, 1.5819999999999723e-05, 1.6500000000002624e-05, 1.583299999999288e-05, 1.6013999999980877e-05, 1.5653000000004358e-...</msg>
<status status="PASS" starttime="20201030 11:52:02.036" endtime="20201030 11:52:02.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.058" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.055" endtime="20201030 11:52:02.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.063" level="INFO">VALUE: [0, 1.5653000000004358e-05, 1.6181000000003998e-05, 1.5999999999988246e-05, 1.5819999999999723e-05, 1.6500000000002624e-05, 1.583299999999288e-05, 1.6013999999980877e-05, 1.5653000000004358e-05, 1.6500000000002624e-05, 1.584699999998551e-05, 1.6361000000020276e-05, 1.581900000000025e-05, 1.6417000000018556e-05, 1.6305000000021996e-05, 1.5653000000004358e-05, 1.634699999999989e-05, 1.6486000000009993e-05, 1.6125000000005718e-05, 1.5819999999999723e-05, 1.5833000000020636e-05, 1.583299999999288e-05, 1.5679999999990146e-05, 1.625000000002319e-05, 1.580500000000762e-05, 1.6207999999989786e-05, 1.5652999999976602e-05, 1.6013999999980877e-05, 1.583299999999288e-05, 1.6167000000011367e-05, 1.6236000000002804e-05, 1.5985999999995615e-05, 1.5999999999988246e-05, 1.6500000000002624e-05, 1.598600000002337e-05, 1.584800000001274e-05, 1.5679999999990146e-05, 1.6013999999980877e-05, 1.5973000000002457e-05, 1.5665999999997515e-05, 1.580500000000762e-05, 1.634699999999989e-05, 1.5833999999992354e-05, 1.563899999998397e-05, 1.6486000000009993e-05, 1.6319000000014627e-05, 1.583299999999288e-05, 1.633300000000726e-05, 1.598600000002337e-05, 1.663899999998497e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.060" endtime="20201030 11:52:02.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.048" endtime="20201030 11:52:02.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.075" endtime="20201030 11:52:02.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.071" endtime="20201030 11:52:02.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.068" endtime="20201030 11:52:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.534" endtime="20201030 11:52:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.533" endtime="20201030 11:52:02.101"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.124" endtime="20201030 11:52:02.142"></status>
</kw>
<msg timestamp="20201030 11:52:02.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.120" endtime="20201030 11:52:02.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.145" endtime="20201030 11:52:02.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.152" endtime="20201030 11:52:02.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.113" endtime="20201030 11:52:02.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.107" endtime="20201030 11:52:02.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.176" endtime="20201030 11:52:02.537"></status>
</kw>
<msg timestamp="20201030 11:52:02.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.172" endtime="20201030 11:52:02.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040114472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.547" endtime="20201030 11:52:02.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.566" endtime="20201030 11:52:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.165" endtime="20201030 11:52:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.160" endtime="20201030 11:52:02.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.584" level="INFO">${RESULT} = [{'diff': 1.6679999999998085e-05}, {'diff': 1.5985999999995615e-05}, {'diff': 1.615299999999792e-05}, {'diff': 1.6499999999995685e-05}, {'diff': 1.565299999999742e-05}, {'diff': 1.6500000000002624e-05...</msg>
<status status="PASS" starttime="20201030 11:52:02.575" endtime="20201030 11:52:02.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.595" level="INFO">${ACCURACY} = {'diff': [1.6679999999998085e-05, 1.5985999999995615e-05, 1.615299999999792e-05, 1.6499999999995685e-05, 1.565299999999742e-05, 1.6500000000002624e-05, 1.5680000000004024e-05, 1.5971999999996045e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:02.586" endtime="20201030 11:52:02.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.606" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.604" endtime="20201030 11:52:02.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.612" level="INFO">VALUE: [1.6679999999998085e-05, 1.5985999999995615e-05, 1.615299999999792e-05, 1.6499999999995685e-05, 1.565299999999742e-05, 1.6500000000002624e-05, 1.5680000000004024e-05, 1.5971999999996045e-05, 1.6348000000006302e-05, 1.559699999999914e-05, 1.6431000000004248e-05, 1.5653000000004358e-05, 1.6208000000003664e-05, 1.581900000000025e-05, 1.5972000000002984e-05, 1.565299999999742e-05, 1.665299999999842e-05, 1.5986000000002554e-05, 1.6485999999996115e-05, 1.640299999999817e-05, 1.611099999999921e-05, 1.561099999999871e-05, 1.6278000000001513e-05, 1.616699999999749e-05, 1.5693999999996655e-05, 1.631900000000075e-05, 1.583299999999982e-05, 1.5679999999997085e-05, 1.6166000000004954e-05, 1.6513999999995255e-05, 1.6320000000000223e-05, 1.580500000000068e-05, 1.6333999999999793e-05, 1.6139000000005288e-05, 1.5806000000000153e-05, 1.565299999999742e-05, 1.604100000000136e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.5665999999997515e-05, 1.6485999999996115e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.6320000000000223e-05, 1.662499999999928e-05, 1.581900000000025e-05, 1.6320000000000223e-05, 1.6708000000004164e-05, 1.5985999999995615e-05, 1.580500000000068e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.608" endtime="20201030 11:52:02.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.597" endtime="20201030 11:52:02.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.624" endtime="20201030 11:52:02.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.619" endtime="20201030 11:52:02.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.617" endtime="20201030 11:52:02.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.103" endtime="20201030 11:52:02.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.102" endtime="20201030 11:52:02.649"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.672" endtime="20201030 11:52:02.691"></status>
</kw>
<msg timestamp="20201030 11:52:02.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.669" endtime="20201030 11:52:02.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.694" endtime="20201030 11:52:02.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.700" endtime="20201030 11:52:02.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.662" endtime="20201030 11:52:02.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.656" endtime="20201030 11:52:02.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.725" endtime="20201030 11:52:03.081"></status>
</kw>
<msg timestamp="20201030 11:52:03.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.721" endtime="20201030 11:52:03.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040293722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040309542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.090" endtime="20201030 11:52:03.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.110" endtime="20201030 11:52:03.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.714" endtime="20201030 11:52:03.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.709" endtime="20201030 11:52:03.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.127" level="INFO">${RESULT} = [{'diff': 1.5819999999999723e-05}, {'diff': 1.631900000000075e-05}, {'diff': 1.6013999999994755e-05}, {'diff': 1.6693999999997655e-05}, {'diff': 1.584699999999939e-05}, {'diff': 1.665299999999842e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:03.118" endtime="20201030 11:52:03.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.137" level="INFO">${ACCURACY} = {'diff': [1.5819999999999723e-05, 1.631900000000075e-05, 1.6013999999994755e-05, 1.6693999999997655e-05, 1.584699999999939e-05, 1.665299999999842e-05, 1.581899999999331e-05, 1.581900000000025e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 11:52:03.129" endtime="20201030 11:52:03.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.148" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.145" endtime="20201030 11:52:03.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.153" level="INFO">VALUE: [1.5819999999999723e-05, 1.631900000000075e-05, 1.6013999999994755e-05, 1.6693999999997655e-05, 1.584699999999939e-05, 1.665299999999842e-05, 1.581899999999331e-05, 1.581900000000025e-05, 1.583299999999982e-05, 1.6320000000000223e-05, 1.6667000000004928e-05, 1.5985999999995615e-05, 1.6000000000002124e-05, 1.5819999999999723e-05, 1.6389000000005538e-05, 1.583299999999982e-05, 1.655499999999449e-05, 1.6333999999999793e-05, 1.5971999999996045e-05, 1.630500000000118e-05, 1.5985999999995615e-05, 1.665299999999842e-05, 1.6514000000002194e-05, 1.5986000000002554e-05, 1.631900000000075e-05, 1.566699999999699e-05, 1.633300000000032e-05, 1.565299999999742e-05, 1.6500000000002624e-05, 1.581900000000025e-05, 1.6514000000002194e-05, 1.5972000000002984e-05, 1.6000000000002124e-05, 1.6514000000002194e-05, 1.581900000000025e-05, 1.6000000000002124e-05, 1.584699999999939e-05, 1.6500000000002624e-05, 1.5889000000005038e-05, 1.5819999999999723e-05, 1.5985999999995615e-05, 1.583299999999982e-05, 1.5806000000000153e-05, 1.6014000000001694e-05, 1.6499999999995685e-05, 1.6499999999995685e-05, 1.5999999999995185e-05, 1.633300000000032e-05, 1.6486000000003054e-05, 1.5985999999995615e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.150" endtime="20201030 11:52:03.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.139" endtime="20201030 11:52:03.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.165" endtime="20201030 11:52:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.161" endtime="20201030 11:52:03.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.158" endtime="20201030 11:52:03.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.651" endtime="20201030 11:52:03.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.650" endtime="20201030 11:52:03.191"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.213" endtime="20201030 11:52:03.231"></status>
</kw>
<msg timestamp="20201030 11:52:03.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.210" endtime="20201030 11:52:03.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.235" endtime="20201030 11:52:03.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.242" endtime="20201030 11:52:03.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.203" endtime="20201030 11:52:03.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.197" endtime="20201030 11:52:03.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.266" endtime="20201030 11:52:03.619"></status>
</kw>
<msg timestamp="20201030 11:52:03.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041296389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.262" endtime="20201030 11:52:03.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041296389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.628" endtime="20201030 11:52:03.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.648" endtime="20201030 11:52:03.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.255" endtime="20201030 11:52:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.250" endtime="20201030 11:52:03.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.665" level="INFO">${RESULT} = [{'diff': 1.581900000000025e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.631900000000075e-05}, {'diff': 1.6473000000002957e-05}, {'diff': 1.5972000000002984e-05}, {'diff': 1.6471999999996545e-05...</msg>
<status status="PASS" starttime="20201030 11:52:03.656" endtime="20201030 11:52:03.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.675" level="INFO">${ACCURACY} = {'diff': [1.581900000000025e-05, 1.6485999999996115e-05, 1.631900000000075e-05, 1.6473000000002957e-05, 1.5972000000002984e-05, 1.6471999999996545e-05, 1.581900000000025e-05, 1.6514000000002194e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:03.667" endtime="20201030 11:52:03.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.686" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.684" endtime="20201030 11:52:03.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.691" level="INFO">VALUE: [1.581900000000025e-05, 1.6485999999996115e-05, 1.631900000000075e-05, 1.6473000000002957e-05, 1.5972000000002984e-05, 1.6471999999996545e-05, 1.581900000000025e-05, 1.6514000000002194e-05, 1.6429999999997835e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.6167000000004428e-05, 1.631900000000075e-05, 1.583299999999982e-05, 1.5999999999995185e-05, 1.630500000000118e-05, 1.5833999999999293e-05, 1.587499999999853e-05, 1.6485999999996115e-05, 1.665299999999842e-05, 1.6667000000004928e-05, 1.565299999999742e-05, 1.6500000000002624e-05, 1.6042000000000833e-05, 1.584699999999939e-05, 1.566699999999699e-05, 1.6333999999999793e-05, 1.6500000000002624e-05, 1.616699999999749e-05, 1.5695000000003068e-05, 1.5819999999999723e-05, 1.666699999999799e-05, 1.6513999999995255e-05, 1.565299999999742e-05, 1.5819999999999723e-05, 1.6457999999996975e-05, 1.6320000000000223e-05, 1.5819999999999723e-05, 1.5667000000003928e-05, 1.597299999999552e-05, 1.6181000000003998e-05, 1.6014000000001694e-05, 1.6485999999996115e-05, 1.5833999999999293e-05, 1.6000000000002124e-05, 1.631900000000075e-05, 1.5945000000003318e-05, 1.6445000000003818e-05, 1.6167000000004428e-05, 1.6471999999996545e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.688" endtime="20201030 11:52:03.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.677" endtime="20201030 11:52:03.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.705" endtime="20201030 11:52:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.699" endtime="20201030 11:52:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.696" endtime="20201030 11:52:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.193" endtime="20201030 11:52:03.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.191" endtime="20201030 11:52:03.730"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.754" endtime="20201030 11:52:03.770"></status>
</kw>
<msg timestamp="20201030 11:52:03.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.750" endtime="20201030 11:52:03.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.774" endtime="20201030 11:52:03.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.780" endtime="20201030 11:52:03.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.743" endtime="20201030 11:52:03.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.737" endtime="20201030 11:52:03.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.804" endtime="20201030 11:52:04.158"></status>
</kw>
<msg timestamp="20201030 11:52:04.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.801" endtime="20201030 11:52:04.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040688347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.168" endtime="20201030 11:52:04.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.187" endtime="20201030 11:52:04.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.793" endtime="20201030 11:52:04.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.788" endtime="20201030 11:52:04.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.204" level="INFO">${RESULT} = [{'diff': 1.6320000000000223e-05}, {'diff': 1.6165999999998015e-05}, {'diff': 1.6014000000001694e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.5848000000005802e-05}, {'diff': 1.583299999999982e-0...</msg>
<status status="PASS" starttime="20201030 11:52:04.196" endtime="20201030 11:52:04.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.215" level="INFO">${ACCURACY} = {'diff': [1.6320000000000223e-05, 1.6165999999998015e-05, 1.6014000000001694e-05, 1.6500000000002624e-05, 1.5848000000005802e-05, 1.583299999999982e-05, 1.565299999999742e-05, 1.561099999999871e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:04.206" endtime="20201030 11:52:04.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.226" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.224" endtime="20201030 11:52:04.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.232" level="INFO">VALUE: [1.6320000000000223e-05, 1.6165999999998015e-05, 1.6014000000001694e-05, 1.6500000000002624e-05, 1.5848000000005802e-05, 1.583299999999982e-05, 1.565299999999742e-05, 1.561099999999871e-05, 1.566699999999699e-05, 1.5639000000004788e-05, 1.6166000000004954e-05, 1.581900000000025e-05, 1.633300000000032e-05, 1.590299999999767e-05, 1.6499999999995685e-05, 1.6486000000003054e-05, 1.5806000000000153e-05, 1.587499999999853e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.5653000000004358e-05, 1.6179999999997585e-05, 1.6513999999995255e-05, 1.6458000000003914e-05, 1.5985999999995615e-05, 1.6306000000000653e-05, 1.5665999999997515e-05, 1.6651999999998945e-05, 1.566699999999699e-05, 1.561099999999871e-05, 1.6320000000000223e-05, 1.630500000000118e-05, 1.631900000000075e-05, 1.613899999999835e-05, 1.581900000000025e-05, 1.6165999999998015e-05, 1.631900000000075e-05, 1.581900000000025e-05, 1.5819999999999723e-05, 1.6402000000005634e-05, 1.5820000000006662e-05, 1.6500000000002624e-05, 1.6000000000002124e-05, 1.6167000000004428e-05, 1.5653000000004358e-05, 1.6165999999998015e-05, 1.6471999999996545e-05, 1.631900000000075e-05, 1.6499999999995685e-05, 1.5806000000000153e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.229" endtime="20201030 11:52:04.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.217" endtime="20201030 11:52:04.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.244" endtime="20201030 11:52:04.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.240" endtime="20201030 11:52:04.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.237" endtime="20201030 11:52:04.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.732" endtime="20201030 11:52:04.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.731" endtime="20201030 11:52:04.269"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.302" endtime="20201030 11:52:04.319"></status>
</kw>
<msg timestamp="20201030 11:52:04.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.299" endtime="20201030 11:52:04.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.322" endtime="20201030 11:52:04.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.329" endtime="20201030 11:52:04.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.292" endtime="20201030 11:52:04.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.285" endtime="20201030 11:52:04.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.352" endtime="20201030 11:52:04.704"></status>
</kw>
<msg timestamp="20201030 11:52:04.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049961181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049977361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.349" endtime="20201030 11:52:04.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049961181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049977361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.714" endtime="20201030 11:52:04.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.733" endtime="20201030 11:52:04.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.342" endtime="20201030 11:52:04.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.337" endtime="20201030 11:52:04.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.750" level="INFO">${RESULT} = [{'diff': 1.6179999999997585e-05}, {'diff': 1.5985999999995615e-05}, {'diff': 1.586099999999896e-05}, {'diff': 1.5999999999995185e-05}, {'diff': 1.6165999999998015e-05}, {'diff': 1.5722000000002734e-0...</msg>
<status status="PASS" starttime="20201030 11:52:04.741" endtime="20201030 11:52:04.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.762" level="INFO">${ACCURACY} = {'diff': [1.6179999999997585e-05, 1.5985999999995615e-05, 1.586099999999896e-05, 1.5999999999995185e-05, 1.6165999999998015e-05, 1.5722000000002734e-05, 1.581900000000025e-05, 1.6486000000003054e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:04.752" endtime="20201030 11:52:04.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.773" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.771" endtime="20201030 11:52:04.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.779" level="INFO">VALUE: [1.6179999999997585e-05, 1.5985999999995615e-05, 1.586099999999896e-05, 1.5999999999995185e-05, 1.6165999999998015e-05, 1.5722000000002734e-05, 1.581900000000025e-05, 1.6486000000003054e-05, 1.6000000000002124e-05, 1.6485999999996115e-05, 1.666699999999799e-05, 1.633300000000032e-05, 1.5861000000005898e-05, 1.6333999999999793e-05, 1.6181000000003998e-05, 1.6000000000002124e-05, 1.618099999999706e-05, 1.563899999999785e-05, 1.5985999999995615e-05, 1.5986000000002554e-05, 1.5971999999996045e-05, 1.6167000000004428e-05, 1.583299999999982e-05, 1.565299999999742e-05, 1.6500000000002624e-05, 1.6014000000001694e-05, 1.5999999999995185e-05, 1.5667000000003928e-05, 1.5806000000000153e-05, 1.666699999999799e-05, 1.583299999999982e-05, 1.5985999999995615e-05, 1.583299999999982e-05, 1.568099999999656e-05, 1.6165999999998015e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.566699999999699e-05, 1.608300000000007e-05, 1.6000000000002124e-05, 1.5985999999995615e-05, 1.5709000000002638e-05, 1.562499999999828e-05, 1.5665999999997515e-05, 1.6486000000003054e-05, 1.6179999999997585e-05, 1.6250000000002374e-05, 1.5833999999999293e-05, 1.615299999999792e-05, 1.6333999999999793e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.775" endtime="20201030 11:52:04.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.764" endtime="20201030 11:52:04.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.791" endtime="20201030 11:52:04.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.786" endtime="20201030 11:52:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.784" endtime="20201030 11:52:04.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.272" endtime="20201030 11:52:04.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.270" endtime="20201030 11:52:04.817"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.840" endtime="20201030 11:52:04.856"></status>
</kw>
<msg timestamp="20201030 11:52:04.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.836" endtime="20201030 11:52:04.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.860" endtime="20201030 11:52:04.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.866" endtime="20201030 11:52:04.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.829" endtime="20201030 11:52:04.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.823" endtime="20201030 11:52:04.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.890" endtime="20201030 11:52:05.243"></status>
</kw>
<msg timestamp="20201030 11:52:05.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:04.886" endtime="20201030 11:52:05.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039955333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:05.253" endtime="20201030 11:52:05.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.272" endtime="20201030 11:52:05.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.879" endtime="20201030 11:52:05.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.874" endtime="20201030 11:52:05.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.290" level="INFO">${RESULT} = [{'diff': 1.633300000000032e-05}, {'diff': 1.6194000000004094e-05}, {'diff': 1.5986000000002554e-05}, {'diff': 1.5957999999996475e-05}, {'diff': 1.5999999999995185e-05}, {'diff': 1.5611999999998183e-0...</msg>
<status status="PASS" starttime="20201030 11:52:05.281" endtime="20201030 11:52:05.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.299" level="INFO">${ACCURACY} = {'diff': [1.633300000000032e-05, 1.6194000000004094e-05, 1.5986000000002554e-05, 1.5957999999996475e-05, 1.5999999999995185e-05, 1.5611999999998183e-05, 1.6014000000001694e-05, 1.631900000000075e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:05.292" endtime="20201030 11:52:05.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.310" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.308" endtime="20201030 11:52:05.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.316" level="INFO">VALUE: [1.633300000000032e-05, 1.6194000000004094e-05, 1.5986000000002554e-05, 1.5957999999996475e-05, 1.5999999999995185e-05, 1.5611999999998183e-05, 1.6014000000001694e-05, 1.631900000000075e-05, 1.6151999999998445e-05, 1.6207999999996725e-05, 1.581899999999331e-05, 1.6500000000002624e-05, 1.6473000000002957e-05, 1.6500000000002624e-05, 1.6653000000005358e-05, 1.5986000000002554e-05, 1.6139000000005288e-05, 1.597299999999552e-05, 1.581900000000025e-05, 1.6264000000001944e-05, 1.634699999999989e-05, 1.586099999999896e-05, 1.583299999999982e-05, 1.6333999999999793e-05, 1.615299999999792e-05, 1.6472000000003484e-05, 1.581900000000025e-05, 1.5666000000004454e-05, 1.6207999999996725e-05, 1.5985999999995615e-05, 1.563899999999785e-05, 1.631900000000075e-05, 1.583299999999982e-05, 1.5679999999997085e-05, 1.584699999999939e-05, 1.616699999999749e-05, 1.6499999999995685e-05, 1.612499999999878e-05, 1.6153000000004858e-05, 1.613899999999835e-05, 1.6679999999998085e-05, 1.615299999999792e-05, 1.67089999999967e-05, 1.6514000000002194e-05, 1.6014000000001694e-05, 1.5651999999997945e-05, 1.6485999999996115e-05, 1.6499999999995685e-05, 1.6320000000000223e-05, 1.5778000000001013e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.313" endtime="20201030 11:52:05.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.301" endtime="20201030 11:52:05.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.329" endtime="20201030 11:52:05.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.324" endtime="20201030 11:52:05.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.322" endtime="20201030 11:52:05.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.819" endtime="20201030 11:52:05.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.818" endtime="20201030 11:52:05.354"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.377" endtime="20201030 11:52:05.394"></status>
</kw>
<msg timestamp="20201030 11:52:05.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.374" endtime="20201030 11:52:05.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.398" endtime="20201030 11:52:05.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.404" endtime="20201030 11:52:05.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.366" endtime="20201030 11:52:05.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.361" endtime="20201030 11:52:05.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.429" endtime="20201030 11:52:05.780"></status>
</kw>
<msg timestamp="20201030 11:52:05.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040145903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.426" endtime="20201030 11:52:05.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040145903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040168486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.789" endtime="20201030 11:52:05.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.809" endtime="20201030 11:52:05.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.419" endtime="20201030 11:52:05.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.414" endtime="20201030 11:52:05.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.826" level="INFO">${RESULT} = [{'diff': 2.258300000000657e-05}, {'diff': 2.336099999999952e-05}, {'diff': 2.2735999999995427e-05}, {'diff': 2.3193999999997217e-05}, {'diff': 2.3415999999998327e-05}, {'diff': 2.3443999999997467e-05...</msg>
<status status="PASS" starttime="20201030 11:52:05.817" endtime="20201030 11:52:05.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.836" level="INFO">${ACCURACY} = {'diff': [2.258300000000657e-05, 2.336099999999952e-05, 2.2735999999995427e-05, 2.3193999999997217e-05, 2.3415999999998327e-05, 2.3443999999997467e-05, 2.3556000000000965e-05, 2.2736000000002365e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:05.828" endtime="20201030 11:52:05.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.847" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.844" endtime="20201030 11:52:05.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.852" level="INFO">VALUE: [2.258300000000657e-05, 2.336099999999952e-05, 2.2735999999995427e-05, 2.3193999999997217e-05, 2.3415999999998327e-05, 2.3443999999997467e-05, 2.3556000000000965e-05, 2.2736000000002365e-05, 2.355500000000149e-05, 2.3221999999996357e-05, 2.2693999999996717e-05, 2.283299999999988e-05, 2.2902000000005196e-05, 2.3292000000001145e-05, 2.2750000000001935e-05, 2.2999999999995246e-05, 2.30969999999997e-05, 2.27090000000027e-05, 2.330500000000124e-05, 2.290300000000467e-05, 2.306900000000056e-05, 2.2722000000002796e-05, 2.356900000000106e-05, 2.312499999999884e-05, 2.305500000000099e-05, 2.3235999999995927e-05, 2.27369999999949e-05, 2.290300000000467e-05, 2.3387999999999187e-05, 2.2554999999993552e-05, 2.290299999999773e-05, 2.295900000000295e-05, 2.3097999999999175e-05, 2.28890000000051e-05, 2.290300000000467e-05, 2.2915999999997827e-05, 2.308300000000013e-05, 2.287499999999859e-05, 2.2736000000002365e-05, 2.290299999999773e-05, 2.33890000000056e-05, 2.288899999999816e-05, 2.3236000000002865e-05, 2.344500000000388e-05, 2.340299999999823e-05, 2.2750000000001935e-05, 2.32090000000032e-05, 2.355500000000149e-05, 2.340299999999823e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.849" endtime="20201030 11:52:05.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.837" endtime="20201030 11:52:05.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.866" endtime="20201030 11:52:05.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.861" endtime="20201030 11:52:05.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.858" endtime="20201030 11:52:05.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.356" endtime="20201030 11:52:05.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.355" endtime="20201030 11:52:05.892"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.915" endtime="20201030 11:52:05.931"></status>
</kw>
<msg timestamp="20201030 11:52:05.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.911" endtime="20201030 11:52:05.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.935" endtime="20201030 11:52:05.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.941" endtime="20201030 11:52:05.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.904" endtime="20201030 11:52:05.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.898" endtime="20201030 11:52:05.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.966" endtime="20201030 11:52:06.318"></status>
</kw>
<msg timestamp="20201030 11:52:06.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.963" endtime="20201030 11:52:06.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.328" endtime="20201030 11:52:06.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.347" endtime="20201030 11:52:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.955" endtime="20201030 11:52:06.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.950" endtime="20201030 11:52:06.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.364" level="INFO">${RESULT} = [{'diff': 2.340300000000517e-05}, {'diff': 2.2901999999998257e-05}, {'diff': 2.3180000000004586e-05}, {'diff': 2.3236000000002865e-05}, {'diff': 2.3055999999993526e-05}, {'diff': 2.3235999999995927e-0...</msg>
<status status="PASS" starttime="20201030 11:52:06.355" endtime="20201030 11:52:06.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.375" level="INFO">${ACCURACY} = {'diff': [2.340300000000517e-05, 2.2901999999998257e-05, 2.3180000000004586e-05, 2.3236000000002865e-05, 2.3055999999993526e-05, 2.3235999999995927e-05, 2.290300000000467e-05, 2.3222000000003296e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:06.366" endtime="20201030 11:52:06.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.386" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.384" endtime="20201030 11:52:06.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.392" level="INFO">VALUE: [2.340300000000517e-05, 2.2901999999998257e-05, 2.3180000000004586e-05, 2.3236000000002865e-05, 2.3055999999993526e-05, 2.3235999999995927e-05, 2.290300000000467e-05, 2.3222000000003296e-05, 2.2749999999994996e-05, 2.3250000000002435e-05, 2.3070000000000035e-05, 2.3542000000001395e-05, 2.3471999999996607e-05, 2.290299999999773e-05, 2.28890000000051e-05, 2.290300000000467e-05, 2.2722000000002796e-05, 2.2901999999998257e-05, 2.2736000000002365e-05, 2.362499999999934e-05, 2.3235999999995927e-05, 2.290299999999773e-05, 2.3070000000000035e-05, 2.2902000000005196e-05, 2.338899999999866e-05, 2.3221999999996357e-05, 2.3277999999994636e-05, 2.269500000000313e-05, 2.3570000000000535e-05, 2.3221999999996357e-05, 2.2764000000001505e-05, 2.334699999999995e-05, 2.337499999999909e-05, 2.3235999999995927e-05, 2.2569999999999535e-05, 2.3097999999999175e-05, 2.316699999999755e-05, 2.294499999999644e-05, 2.3263999999995066e-05, 2.3430000000004836e-05, 2.338899999999866e-05, 2.2555999999999965e-05, 2.3250000000002435e-05, 2.3250000000002435e-05, 2.305500000000099e-05, 2.2722000000002796e-05, 2.2957999999996537e-05, 2.358300000000063e-05, 2.340299999999823e-05, 2.272299999999533e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.389" endtime="20201030 11:52:06.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.377" endtime="20201030 11:52:06.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.404" endtime="20201030 11:52:06.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.400" endtime="20201030 11:52:06.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.397" endtime="20201030 11:52:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.894" endtime="20201030 11:52:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.893" endtime="20201030 11:52:06.430"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.453" endtime="20201030 11:52:06.470"></status>
</kw>
<msg timestamp="20201030 11:52:06.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.450" endtime="20201030 11:52:06.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.473" endtime="20201030 11:52:06.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.480" endtime="20201030 11:52:06.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.442" endtime="20201030 11:52:06.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.436" endtime="20201030 11:52:06.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.503" endtime="20201030 11:52:06.856"></status>
</kw>
<msg timestamp="20201030 11:52:06.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.500" endtime="20201030 11:52:06.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040307889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040331083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.866" endtime="20201030 11:52:06.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.885" endtime="20201030 11:52:06.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.493" endtime="20201030 11:52:06.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.488" endtime="20201030 11:52:06.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.903" level="INFO">${RESULT} = [{'diff': 2.3193999999997217e-05}, {'diff': 2.286100000000596e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.356900000000106e-05}, {'diff': 2.290299999999773e-05}, {'diff': 2.305500000000099e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:06.894" endtime="20201030 11:52:06.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.914" level="INFO">${ACCURACY} = {'diff': [2.3193999999997217e-05, 2.286100000000596e-05, 2.3056000000000465e-05, 2.356900000000106e-05, 2.290299999999773e-05, 2.305500000000099e-05, 2.3250000000002435e-05, 2.290300000000467e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 11:52:06.905" endtime="20201030 11:52:06.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.925" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.923" endtime="20201030 11:52:06.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.931" level="INFO">VALUE: [2.3193999999997217e-05, 2.286100000000596e-05, 2.3056000000000465e-05, 2.356900000000106e-05, 2.290299999999773e-05, 2.305500000000099e-05, 2.3250000000002435e-05, 2.290300000000467e-05, 2.337499999999909e-05, 2.3222000000003296e-05, 2.3264000000002005e-05, 2.322300000000277e-05, 2.3068999999993622e-05, 2.2985999999995677e-05, 2.345899999999651e-05, 2.288899999999816e-05, 2.2901999999998257e-05, 2.340299999999823e-05, 2.3222000000003296e-05, 2.3556000000000965e-05, 2.29169999999973e-05, 2.312499999999884e-05, 2.3471999999996607e-05, 2.3401999999998757e-05, 2.2722000000002796e-05, 2.2721999999995857e-05, 2.288899999999816e-05, 2.320899999999626e-05, 2.358300000000063e-05, 2.3570000000000535e-05, 2.3083999999999605e-05, 2.2665999999997577e-05, 2.3000000000002185e-05, 2.344500000000388e-05, 2.338899999999866e-05, 2.2750000000001935e-05, 2.29169999999973e-05, 2.3542000000001395e-05, 2.288899999999816e-05, 2.337499999999909e-05, 2.34169999999978e-05, 2.355500000000149e-05, 2.27770000000016e-05, 2.294499999999644e-05, 2.338899999999866e-05, 2.306900000000056e-05, 2.337499999999909e-05, 2.3556000000000965e-05, 2.3555999999994026e-05, 2.3054999999994052e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.927" endtime="20201030 11:52:06.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.916" endtime="20201030 11:52:06.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.943" endtime="20201030 11:52:06.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.939" endtime="20201030 11:52:06.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.936" endtime="20201030 11:52:06.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.432" endtime="20201030 11:52:06.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.431" endtime="20201030 11:52:06.969"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.993" endtime="20201030 11:52:07.010"></status>
</kw>
<msg timestamp="20201030 11:52:07.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.989" endtime="20201030 11:52:07.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.014" endtime="20201030 11:52:07.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.020" endtime="20201030 11:52:07.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.982" endtime="20201030 11:52:07.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.975" endtime="20201030 11:52:07.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.044" endtime="20201030 11:52:07.403"></status>
</kw>
<msg timestamp="20201030 11:52:07.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041313653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.041" endtime="20201030 11:52:07.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041313653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.413" endtime="20201030 11:52:07.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.433" endtime="20201030 11:52:07.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.033" endtime="20201030 11:52:07.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.028" endtime="20201030 11:52:07.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.450" level="INFO">${RESULT} = [{'diff': 2.3083999999999605e-05}, {'diff': 2.3264000000002005e-05}, {'diff': 2.2721999999995857e-05}, {'diff': 2.358300000000063e-05}, {'diff': 2.2708000000003226e-05}, {'diff': 2.3542000000001395e-0...</msg>
<status status="PASS" starttime="20201030 11:52:07.441" endtime="20201030 11:52:07.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.460" level="INFO">${ACCURACY} = {'diff': [2.3083999999999605e-05, 2.3264000000002005e-05, 2.2721999999995857e-05, 2.358300000000063e-05, 2.2708000000003226e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3070000000000035e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:07.452" endtime="20201030 11:52:07.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.471" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.468" endtime="20201030 11:52:07.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.476" level="INFO">VALUE: [2.3083999999999605e-05, 2.3264000000002005e-05, 2.2721999999995857e-05, 2.358300000000063e-05, 2.2708000000003226e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3070000000000035e-05, 2.3056000000000465e-05, 2.3000000000002185e-05, 2.2721999999995857e-05, 2.3249999999995496e-05, 2.290300000000467e-05, 2.27090000000027e-05, 2.3570000000000535e-05, 2.2915999999997827e-05, 2.290299999999773e-05, 2.2902000000005196e-05, 2.35970000000002e-05, 2.3584000000000105e-05, 2.3570000000000535e-05, 2.2958000000003476e-05, 2.258299999999963e-05, 2.2736000000002365e-05, 2.29169999999973e-05, 2.3263999999995066e-05, 2.3264000000002005e-05, 2.305500000000099e-05, 2.3306000000000715e-05, 2.3014000000001755e-05, 2.3584000000000105e-05, 2.3236000000002865e-05, 2.2750000000001935e-05, 2.2736000000002365e-05, 2.2735999999995427e-05, 2.3250000000002435e-05, 2.283299999999988e-05, 2.258299999999963e-05, 2.3415999999998327e-05, 2.288899999999816e-05, 2.290300000000467e-05, 2.340299999999823e-05, 2.272300000000227e-05, 2.338899999999866e-05, 2.2749999999994996e-05, 2.336099999999952e-05, 2.2540999999993983e-05, 2.3042000000000895e-05, 2.338899999999866e-05, 2.2736000000002365e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.473" endtime="20201030 11:52:07.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.461" endtime="20201030 11:52:07.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.489" endtime="20201030 11:52:07.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.484" endtime="20201030 11:52:07.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.482" endtime="20201030 11:52:07.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.971" endtime="20201030 11:52:07.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.970" endtime="20201030 11:52:07.514"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.537" endtime="20201030 11:52:07.556"></status>
</kw>
<msg timestamp="20201030 11:52:07.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.534" endtime="20201030 11:52:07.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.559" endtime="20201030 11:52:07.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.566" endtime="20201030 11:52:07.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.527" endtime="20201030 11:52:07.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.521" endtime="20201030 11:52:07.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.589" endtime="20201030 11:52:07.942"></status>
</kw>
<msg timestamp="20201030 11:52:07.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.586" endtime="20201030 11:52:07.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041571375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.951" endtime="20201030 11:52:07.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.970" endtime="20201030 11:52:07.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.579" endtime="20201030 11:52:07.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.574" endtime="20201030 11:52:07.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.988" level="INFO">${RESULT} = [{'diff': 2.3208000000003726e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.3250000000002435e-05}, {'diff': 2.3083999999999605e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.286099999999902e-05...</msg>
<status status="PASS" starttime="20201030 11:52:07.979" endtime="20201030 11:52:07.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.997" level="INFO">${ACCURACY} = {'diff': [2.3208000000003726e-05, 2.3514000000002255e-05, 2.3250000000002435e-05, 2.3083999999999605e-05, 2.306900000000056e-05, 2.286099999999902e-05, 2.3222000000003296e-05, 2.2750000000001935e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:07.990" endtime="20201030 11:52:07.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.008" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.006" endtime="20201030 11:52:08.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.014" level="INFO">VALUE: [2.3208000000003726e-05, 2.3514000000002255e-05, 2.3250000000002435e-05, 2.3083999999999605e-05, 2.306900000000056e-05, 2.286099999999902e-05, 2.3222000000003296e-05, 2.2750000000001935e-05, 2.281900000000031e-05, 2.287499999999859e-05, 2.35970000000002e-05, 2.3264000000002005e-05, 2.3056000000000465e-05, 2.337499999999909e-05, 2.265299999999748e-05, 2.340299999999823e-05, 2.2943999999996967e-05, 2.2929999999997397e-05, 2.3221999999996357e-05, 2.306900000000056e-05, 2.32090000000032e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2555999999999965e-05, 2.287499999999859e-05, 2.312499999999884e-05, 2.306900000000056e-05, 2.3541999999994456e-05, 2.3401999999998757e-05, 2.2736000000002365e-05, 2.2722000000002796e-05, 2.33890000000056e-05, 2.3083999999999605e-05, 2.2901999999998257e-05, 2.304100000000142e-05, 2.3236000000002865e-05, 2.3236000000002865e-05, 2.3402000000005696e-05, 2.362500000000628e-05, 2.290300000000467e-05, 2.2778000000001075e-05, 2.3236000000002865e-05, 2.255500000000049e-05, 2.3070000000000035e-05, 2.3387999999999187e-05, 2.355500000000149e-05, 2.2542000000000395e-05, 2.340299999999823e-05, 2.2750000000001935e-05, 2.2887999999998687e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.011" endtime="20201030 11:52:08.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.999" endtime="20201030 11:52:08.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.029" endtime="20201030 11:52:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.023" endtime="20201030 11:52:08.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.020" endtime="20201030 11:52:08.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.516" endtime="20201030 11:52:08.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.515" endtime="20201030 11:52:08.055"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.078" endtime="20201030 11:52:08.095"></status>
</kw>
<msg timestamp="20201030 11:52:08.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.075" endtime="20201030 11:52:08.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.099" endtime="20201030 11:52:08.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.105" endtime="20201030 11:52:08.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.067" endtime="20201030 11:52:08.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.061" endtime="20201030 11:52:08.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.129" endtime="20201030 11:52:08.480"></status>
</kw>
<msg timestamp="20201030 11:52:08.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040345222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.125" endtime="20201030 11:52:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040345222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.490" endtime="20201030 11:52:08.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.509" endtime="20201030 11:52:08.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.118" endtime="20201030 11:52:08.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.113" endtime="20201030 11:52:08.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.526" level="INFO">${RESULT} = [{'diff': 2.268099999999662e-05}, {'diff': 2.3083999999999605e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.3387999999999187e-05}, {'diff': 2.283299999999988e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:08.518" endtime="20201030 11:52:08.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.537" level="INFO">${ACCURACY} = {'diff': [2.268099999999662e-05, 2.3083999999999605e-05, 2.338899999999866e-05, 2.288899999999816e-05, 2.3387999999999187e-05, 2.283299999999988e-05, 2.356900000000106e-05, 2.322300000000277e-05, 2.28...</msg>
<status status="PASS" starttime="20201030 11:52:08.529" endtime="20201030 11:52:08.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.549" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.546" endtime="20201030 11:52:08.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.554" level="INFO">VALUE: [2.268099999999662e-05, 2.3083999999999605e-05, 2.338899999999866e-05, 2.288899999999816e-05, 2.3387999999999187e-05, 2.283299999999988e-05, 2.356900000000106e-05, 2.322300000000277e-05, 2.288899999999816e-05, 2.3250000000002435e-05, 2.3056000000000465e-05, 2.340299999999823e-05, 2.3236000000002865e-05, 2.322300000000277e-05, 2.340299999999823e-05, 2.286100000000596e-05, 2.2735999999995427e-05, 2.2750000000001935e-05, 2.316700000000449e-05, 2.28890000000051e-05, 2.306900000000056e-05, 2.355500000000149e-05, 2.2542000000000395e-05, 2.3250000000002435e-05, 2.2749999999994996e-05, 2.2500000000001685e-05, 2.3235999999995927e-05, 2.2735999999995427e-05, 2.2707999999996287e-05, 2.288899999999816e-05, 2.2736000000002365e-05, 2.3556000000000965e-05, 2.288899999999816e-05, 2.3264000000002005e-05, 2.270899999999576e-05, 2.3555999999994026e-05, 2.2848000000005864e-05, 2.288899999999816e-05, 2.3056000000000465e-05, 2.308300000000013e-05, 2.2736000000002365e-05, 2.340300000000517e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.3221999999996357e-05, 2.2736000000002365e-05, 2.3070000000000035e-05, 2.3042000000000895e-05, 2.2887999999998687e-05, 2.3415999999998327e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.551" endtime="20201030 11:52:08.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.539" endtime="20201030 11:52:08.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.567" endtime="20201030 11:52:08.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.562" endtime="20201030 11:52:08.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.560" endtime="20201030 11:52:08.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.057" endtime="20201030 11:52:08.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.056" endtime="20201030 11:52:08.592"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.615" endtime="20201030 11:52:08.632"></status>
</kw>
<msg timestamp="20201030 11:52:08.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.612" endtime="20201030 11:52:08.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.636" endtime="20201030 11:52:08.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.642" endtime="20201030 11:52:08.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.604" endtime="20201030 11:52:08.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.599" endtime="20201030 11:52:08.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.666" endtime="20201030 11:52:09.017"></status>
</kw>
<msg timestamp="20201030 11:52:09.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040018347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04004125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:08.662" endtime="20201030 11:52:09.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040018347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04004125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:09.027" endtime="20201030 11:52:09.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.046" endtime="20201030 11:52:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.655" endtime="20201030 11:52:09.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.650" endtime="20201030 11:52:09.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.064" level="INFO">${RESULT} = [{'diff': 2.290299999999773e-05}, {'diff': 2.28890000000051e-05}, {'diff': 2.316699999999755e-05}, {'diff': 2.290300000000467e-05}, {'diff': 2.3236000000002865e-05}, {'diff': 2.3570000000000535e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:09.055" endtime="20201030 11:52:09.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.076" level="INFO">${ACCURACY} = {'diff': [2.290299999999773e-05, 2.28890000000051e-05, 2.316699999999755e-05, 2.290300000000467e-05, 2.3236000000002865e-05, 2.3570000000000535e-05, 2.340299999999823e-05, 2.308300000000013e-05, 2.269...</msg>
<status status="PASS" starttime="20201030 11:52:09.066" endtime="20201030 11:52:09.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.087" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.085" endtime="20201030 11:52:09.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.093" level="INFO">VALUE: [2.290299999999773e-05, 2.28890000000051e-05, 2.316699999999755e-05, 2.290300000000467e-05, 2.3236000000002865e-05, 2.3570000000000535e-05, 2.340299999999823e-05, 2.308300000000013e-05, 2.2694000000003656e-05, 2.306900000000056e-05, 2.273700000000184e-05, 2.305500000000099e-05, 2.2721999999995857e-05, 2.263900000000485e-05, 2.338899999999866e-05, 2.3207999999996787e-05, 2.3401999999998757e-05, 2.3235999999995927e-05, 2.286099999999902e-05, 2.337499999999909e-05, 2.306900000000056e-05, 2.340299999999823e-05, 2.29169999999973e-05, 2.3056000000000465e-05, 2.2764000000001505e-05, 2.3415999999998327e-05, 2.2722000000002796e-05, 2.2736000000002365e-05, 2.2901999999998257e-05, 2.355500000000149e-05, 2.2861999999998495e-05, 2.333300000000038e-05, 2.2901999999998257e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.2583999999999105e-05, 2.3026999999994913e-05, 2.290299999999773e-05, 2.2583999999999105e-05, 2.322299999999583e-05, 2.256900000000006e-05, 2.358300000000063e-05, 2.3222000000003296e-05, 2.3250000000002435e-05, 2.340300000000517e-05, 2.3415999999998327e-05, 2.35970000000002e-05, 2.305500000000099e-05, 2.288899999999816e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.089" endtime="20201030 11:52:09.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.078" endtime="20201030 11:52:09.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.105" endtime="20201030 11:52:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.101" endtime="20201030 11:52:09.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.098" endtime="20201030 11:52:09.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.594" endtime="20201030 11:52:09.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.593" endtime="20201030 11:52:09.131"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.154" endtime="20201030 11:52:09.171"></status>
</kw>
<msg timestamp="20201030 11:52:09.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.150" endtime="20201030 11:52:09.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.175" endtime="20201030 11:52:09.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.181" endtime="20201030 11:52:09.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.143" endtime="20201030 11:52:09.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.137" endtime="20201030 11:52:09.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.205" endtime="20201030 11:52:09.558"></status>
</kw>
<msg timestamp="20201030 11:52:09.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.201" endtime="20201030 11:52:09.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040173944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.567" endtime="20201030 11:52:09.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.587" endtime="20201030 11:52:09.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.194" endtime="20201030 11:52:09.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.189" endtime="20201030 11:52:09.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.604" level="INFO">${RESULT} = [{'diff': 2.9972000000003107e-05}, {'diff': 2.9944999999996502e-05}, {'diff': 2.9750000000001997e-05}, {'diff': 3.0320000000000347e-05}, {'diff': 3.0138999999998473e-05}, {'diff': 2.9806000000000277e-...</msg>
<status status="PASS" starttime="20201030 11:52:09.595" endtime="20201030 11:52:09.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.614" level="INFO">${ACCURACY} = {'diff': [2.9972000000003107e-05, 2.9944999999996502e-05, 2.9750000000001997e-05, 3.0320000000000347e-05, 3.0138999999998473e-05, 2.9806000000000277e-05, 3.04579999999971e-05, 3.0500000000002747e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:09.606" endtime="20201030 11:52:09.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.625" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.622" endtime="20201030 11:52:09.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.630" level="INFO">VALUE: [2.9972000000003107e-05, 2.9944999999996502e-05, 2.9750000000001997e-05, 3.0320000000000347e-05, 3.0138999999998473e-05, 2.9806000000000277e-05, 3.04579999999971e-05, 3.0500000000002747e-05, 3.0277999999994698e-05, 2.963900000000491e-05, 3.0513000000002843e-05, 2.997300000000258e-05, 2.997199999999617e-05, 3.0320000000000347e-05, 2.9792000000000707e-05, 3.0137999999999e-05, 3.0320000000000347e-05, 3.0124999999998903e-05, 3.0166999999997612e-05, 2.9999999999995308e-05, 2.9833999999999417e-05, 3.015300000000498e-05, 3.015199999999857e-05, 3.0292000000001207e-05, 3.0305000000001303e-05, 2.9972000000003107e-05, 2.963900000000491e-05, 3.0250000000002497e-05, 3.0152999999998042e-05, 3.0306000000000777e-05, 2.9790999999994294e-05, 3.0319000000000873e-05, 2.9930999999996932e-05, 2.965300000000448e-05, 2.9972000000003107e-05, 2.9763999999994628e-05, 2.9638999999997973e-05, 2.9792000000000707e-05, 3.0458000000004037e-05, 2.997300000000258e-05, 3.063899999999897e-05, 2.9805000000000803e-05, 2.9638999999997973e-05, 3.0306000000000777e-05, 3.0513999999995378e-05, 2.9806000000000277e-05, 2.96379999999985e-05, 2.9582999999999693e-05, 3.06249999999994e-05, 2.9819000000000373e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.627" endtime="20201030 11:52:09.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.615" endtime="20201030 11:52:09.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.648" endtime="20201030 11:52:09.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.643" endtime="20201030 11:52:09.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.641" endtime="20201030 11:52:09.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.133" endtime="20201030 11:52:09.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.132" endtime="20201030 11:52:09.673"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.696" endtime="20201030 11:52:09.714"></status>
</kw>
<msg timestamp="20201030 11:52:09.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.693" endtime="20201030 11:52:09.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.717" endtime="20201030 11:52:09.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.724" endtime="20201030 11:52:09.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.686" endtime="20201030 11:52:09.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.680" endtime="20201030 11:52:09.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.749" endtime="20201030 11:52:10.101"></status>
</kw>
<msg timestamp="20201030 11:52:10.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040299958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.746" endtime="20201030 11:52:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040299958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040329569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.111" endtime="20201030 11:52:10.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.130" endtime="20201030 11:52:10.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.738" endtime="20201030 11:52:10.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.733" endtime="20201030 11:52:10.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.148" level="INFO">${RESULT} = [{'diff': 2.961100000000577e-05}, {'diff': 3.052800000000189e-05}, {'diff': 3.0320000000000347e-05}, {'diff': 3.0472000000003607e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 2.9986000000002677e-05...</msg>
<status status="PASS" starttime="20201030 11:52:10.139" endtime="20201030 11:52:10.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.157" level="INFO">${ACCURACY} = {'diff': [2.961100000000577e-05, 3.052800000000189e-05, 3.0320000000000347e-05, 3.0472000000003607e-05, 2.9792000000000707e-05, 2.9986000000002677e-05, 3.047199999999667e-05, 3.0458999999996572e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:52:10.150" endtime="20201030 11:52:10.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.168" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.166" endtime="20201030 11:52:10.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.174" level="INFO">VALUE: [2.961100000000577e-05, 3.052800000000189e-05, 3.0320000000000347e-05, 3.0472000000003607e-05, 2.9792000000000707e-05, 2.9986000000002677e-05, 3.047199999999667e-05, 3.0458999999996572e-05, 2.965300000000448e-05, 3.063899999999897e-05, 3.0138999999998473e-05, 3.0333999999999917e-05, 2.9972999999995642e-05, 3.0137999999999e-05, 2.9805000000000803e-05, 2.991599999999789e-05, 2.9624999999998403e-05, 3.016599999999814e-05, 2.9792000000000707e-05, 3.067999999999821e-05, 3.0305000000001303e-05, 2.997300000000258e-05, 2.99579999999966e-05, 3.047300000000308e-05, 2.9806000000000277e-05, 3.0291000000001733e-05, 2.9806000000000277e-05, 3.063899999999897e-05, 2.9652999999997542e-05, 3.0180000000004648e-05, 2.9806000000000277e-05, 3.0278000000001637e-05, 2.9819999999999847e-05, 2.9972000000003107e-05, 2.9638999999997973e-05, 3.013900000000541e-05, 2.963900000000491e-05, 3.0138999999998473e-05, 3.0110999999999333e-05, 3.0458000000004037e-05, 3.047199999999667e-05, 3.043100000000437e-05, 3.0028000000001387e-05, 2.95970000000062e-05, 2.9792000000000707e-05, 3.0486000000003177e-05, 2.9972000000003107e-05, 3.0138999999998473e-05, 2.9806000000000277e-05, 3.0110999999999333e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.171" endtime="20201030 11:52:10.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.159" endtime="20201030 11:52:10.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.188" endtime="20201030 11:52:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.182" endtime="20201030 11:52:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.180" endtime="20201030 11:52:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.675" endtime="20201030 11:52:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.674" endtime="20201030 11:52:10.214"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.237" endtime="20201030 11:52:10.254"></status>
</kw>
<msg timestamp="20201030 11:52:10.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.233" endtime="20201030 11:52:10.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.258" endtime="20201030 11:52:10.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.264" endtime="20201030 11:52:10.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.226" endtime="20201030 11:52:10.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.220" endtime="20201030 11:52:10.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.288" endtime="20201030 11:52:10.640"></status>
</kw>
<msg timestamp="20201030 11:52:10.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040378722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.284" endtime="20201030 11:52:10.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040348583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040378722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.650" endtime="20201030 11:52:10.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.669" endtime="20201030 11:52:10.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.277" endtime="20201030 11:52:10.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.272" endtime="20201030 11:52:10.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.686" level="INFO">${RESULT} = [{'diff': 3.0138999999998473e-05}, {'diff': 3.0027999999994448e-05}, {'diff': 3.048599999999624e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 2.9806000000000277e-05}, {'diff': 2.9806000000000277e-0...</msg>
<status status="PASS" starttime="20201030 11:52:10.678" endtime="20201030 11:52:10.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.697" level="INFO">${ACCURACY} = {'diff': [3.0138999999998473e-05, 3.0027999999994448e-05, 3.048599999999624e-05, 2.9624999999998403e-05, 2.9806000000000277e-05, 2.9806000000000277e-05, 2.9791000000001233e-05, 3.0305000000001303e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:10.689" endtime="20201030 11:52:10.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.709" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.706" endtime="20201030 11:52:10.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.714" level="INFO">VALUE: [3.0138999999998473e-05, 3.0027999999994448e-05, 3.048599999999624e-05, 2.9624999999998403e-05, 2.9806000000000277e-05, 2.9806000000000277e-05, 2.9791000000001233e-05, 3.0305000000001303e-05, 3.063899999999897e-05, 3.013900000000541e-05, 3.0138999999998473e-05, 3.0333000000000443e-05, 2.9778000000001137e-05, 3.0110999999999333e-05, 3.0319000000000873e-05, 3.015300000000498e-05, 2.9792000000000707e-05, 2.9902999999997792e-05, 3.038799999999925e-05, 3.0319000000000873e-05, 3.045900000000351e-05, 3.0180999999997182e-05, 2.9764000000001567e-05, 2.962500000000534e-05, 2.997199999999617e-05, 3.0138999999998473e-05, 3.066599999999864e-05, 3.047199999999667e-05, 3.065299999999854e-05, 3.063899999999897e-05, 2.9805000000000803e-05, 2.9860999999999083e-05, 3.0013999999994878e-05, 2.9958000000003537e-05, 3.047199999999667e-05, 3.0430999999997432e-05, 3.0152999999998042e-05, 3.0499999999995808e-05, 2.9972999999995642e-05, 3.0374999999999153e-05, 2.9569000000000123e-05, 3.063899999999897e-05, 2.96379999999985e-05, 3.0124999999998903e-05, 3.015300000000498e-05, 2.9806000000000277e-05, 2.9819000000000373e-05, 2.9624999999998403e-05, 3.0152999999998042e-05, 2.9805000000000803e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.711" endtime="20201030 11:52:10.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.699" endtime="20201030 11:52:10.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.727" endtime="20201030 11:52:10.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.722" endtime="20201030 11:52:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.720" endtime="20201030 11:52:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.216" endtime="20201030 11:52:10.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.215" endtime="20201030 11:52:10.752"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.775" endtime="20201030 11:52:10.793"></status>
</kw>
<msg timestamp="20201030 11:52:10.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.772" endtime="20201030 11:52:10.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.796" endtime="20201030 11:52:10.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.802" endtime="20201030 11:52:10.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.765" endtime="20201030 11:52:10.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.759" endtime="20201030 11:52:10.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.826" endtime="20201030 11:52:11.179"></status>
</kw>
<msg timestamp="20201030 11:52:11.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040070764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04010125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:10.823" endtime="20201030 11:52:11.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040070764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04010125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:11.188" endtime="20201030 11:52:11.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.207" endtime="20201030 11:52:11.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.815" endtime="20201030 11:52:11.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.811" endtime="20201030 11:52:11.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.225" level="INFO">${RESULT} = [{'diff': 3.048599999999624e-05}, {'diff': 3.047199999999667e-05}, {'diff': 3.0306000000000777e-05}, {'diff': 3.0305000000001303e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 2.9819999999999847e-05...</msg>
<status status="PASS" starttime="20201030 11:52:11.216" endtime="20201030 11:52:11.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.236" level="INFO">${ACCURACY} = {'diff': [3.048599999999624e-05, 3.047199999999667e-05, 3.0306000000000777e-05, 3.0305000000001303e-05, 2.9986000000002677e-05, 2.9819999999999847e-05, 3.065299999999854e-05, 3.0472000000003607e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:52:11.227" endtime="20201030 11:52:11.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.247" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.245" endtime="20201030 11:52:11.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.253" level="INFO">VALUE: [3.048599999999624e-05, 3.047199999999667e-05, 3.0306000000000777e-05, 3.0305000000001303e-05, 2.9986000000002677e-05, 2.9819999999999847e-05, 3.065299999999854e-05, 3.0472000000003607e-05, 2.9596999999999263e-05, 2.997199999999617e-05, 2.965300000000448e-05, 3.0402999999998293e-05, 3.056900000000112e-05, 3.0333000000000443e-05, 3.0306000000000777e-05, 3.0014000000001817e-05, 3.0290999999994794e-05, 2.9804999999993864e-05, 3.04579999999971e-05, 2.9597999999998736e-05, 3.0320000000000347e-05, 2.966700000000405e-05, 3.0096999999999763e-05, 2.9792000000000707e-05, 3.0138999999998473e-05, 3.055599999999409e-05, 3.0333999999999917e-05, 3.0111999999998806e-05, 3.0500000000002747e-05, 2.9708000000003287e-05, 2.9806000000000277e-05, 2.997199999999617e-05, 3.0486000000003177e-05, 3.0499999999995808e-05, 3.0138999999998473e-05, 3.048700000000265e-05, 3.063899999999897e-05, 3.0138999999998473e-05, 3.0278000000001637e-05, 3.0152999999998042e-05, 3.0444999999997002e-05, 3.0014000000001817e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 2.9860999999999083e-05, 3.0472999999996142e-05, 3.048700000000265e-05, 2.9958999999996072e-05, 2.9638999999997973e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.249" endtime="20201030 11:52:11.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.238" endtime="20201030 11:52:11.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.265" endtime="20201030 11:52:11.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.261" endtime="20201030 11:52:11.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.258" endtime="20201030 11:52:11.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.754" endtime="20201030 11:52:11.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.753" endtime="20201030 11:52:11.291"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.314" endtime="20201030 11:52:11.331"></status>
</kw>
<msg timestamp="20201030 11:52:11.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.311" endtime="20201030 11:52:11.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.335" endtime="20201030 11:52:11.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.341" endtime="20201030 11:52:11.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.303" endtime="20201030 11:52:11.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.297" endtime="20201030 11:52:11.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.365" endtime="20201030 11:52:11.720"></status>
</kw>
<msg timestamp="20201030 11:52:11.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040295431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.361" endtime="20201030 11:52:11.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040295431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.729" endtime="20201030 11:52:11.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.748" endtime="20201030 11:52:11.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.354" endtime="20201030 11:52:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.349" endtime="20201030 11:52:11.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.766" level="INFO">${RESULT} = [{'diff': 3.0137999999999e-05}, {'diff': 3.048599999999624e-05}, {'diff': 3.016599999999814e-05}, {'diff': 3.0250000000002497e-05}, {'diff': 3.0277999999994698e-05}, {'diff': 2.9806000000000277e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:11.757" endtime="20201030 11:52:11.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.775" level="INFO">${ACCURACY} = {'diff': [3.0137999999999e-05, 3.048599999999624e-05, 3.016599999999814e-05, 3.0250000000002497e-05, 3.0277999999994698e-05, 2.9806000000000277e-05, 3.0305999999993838e-05, 3.0305000000001303e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 11:52:11.768" endtime="20201030 11:52:11.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.786" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.784" endtime="20201030 11:52:11.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.792" level="INFO">VALUE: [3.0137999999999e-05, 3.048599999999624e-05, 3.016599999999814e-05, 3.0250000000002497e-05, 3.0277999999994698e-05, 2.9806000000000277e-05, 3.0305999999993838e-05, 3.0305000000001303e-05, 3.0306000000000777e-05, 3.063900000000591e-05, 2.9638999999997973e-05, 3.0486000000003177e-05, 2.9819999999999847e-05, 3.048599999999624e-05, 3.0486000000003177e-05, 3.0320000000000347e-05, 3.04579999999971e-05, 3.0278000000001637e-05, 2.9985999999995738e-05, 3.0486000000003177e-05, 3.013900000000541e-05, 3.048599999999624e-05, 3.0486000000003177e-05, 2.9764000000001567e-05, 2.997300000000258e-05, 3.0319000000000873e-05, 2.970799999999635e-05, 3.0347000000000013e-05, 3.0319000000000873e-05, 3.0388999999998723e-05, 3.06379999999995e-05, 2.9792000000000707e-05, 3.0304999999994364e-05, 2.9638999999997973e-05, 3.0499999999995808e-05, 2.9778000000001137e-05, 2.9638999999997973e-05, 3.0486000000003177e-05, 2.9638999999997973e-05, 2.9792000000000707e-05, 2.9652999999997542e-05, 2.9819000000000373e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 2.9652999999997542e-05, 2.998700000000215e-05, 2.9819000000000373e-05, 3.0486000000003177e-05, 3.040300000000523e-05, 3.0458000000004037e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.789" endtime="20201030 11:52:11.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.777" endtime="20201030 11:52:11.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.805" endtime="20201030 11:52:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.800" endtime="20201030 11:52:11.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.798" endtime="20201030 11:52:11.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.293" endtime="20201030 11:52:11.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.292" endtime="20201030 11:52:11.830"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.853" endtime="20201030 11:52:11.871"></status>
</kw>
<msg timestamp="20201030 11:52:11.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.850" endtime="20201030 11:52:11.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.875" endtime="20201030 11:52:11.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.881" endtime="20201030 11:52:11.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.842" endtime="20201030 11:52:11.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.836" endtime="20201030 11:52:11.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.905" endtime="20201030 11:52:12.257"></status>
</kw>
<msg timestamp="20201030 11:52:12.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040048611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04007875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:11.901" endtime="20201030 11:52:12.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040048611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04007875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:12.267" endtime="20201030 11:52:12.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.286" endtime="20201030 11:52:12.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.894" endtime="20201030 11:52:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.889" endtime="20201030 11:52:12.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.303" level="INFO">${RESULT} = [{'diff': 3.013900000000541e-05}, {'diff': 2.9652999999997542e-05}, {'diff': 2.9999999999995308e-05}, {'diff': 3.0319000000000873e-05}, {'diff': 2.9666999999997112e-05}, {'diff': 3.0152000000005508e-0...</msg>
<status status="PASS" starttime="20201030 11:52:12.295" endtime="20201030 11:52:12.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.313" level="INFO">${ACCURACY} = {'diff': [3.013900000000541e-05, 2.9652999999997542e-05, 2.9999999999995308e-05, 3.0319000000000873e-05, 2.9666999999997112e-05, 3.0152000000005508e-05, 2.9805000000000803e-05, 3.0486999999995712e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:12.306" endtime="20201030 11:52:12.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.324" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.322" endtime="20201030 11:52:12.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.330" level="INFO">VALUE: [3.013900000000541e-05, 2.9652999999997542e-05, 2.9999999999995308e-05, 3.0319000000000873e-05, 2.9666999999997112e-05, 3.0152000000005508e-05, 2.9805000000000803e-05, 3.0486999999995712e-05, 3.065300000000548e-05, 3.061099999999983e-05, 2.965199999999807e-05, 2.9819999999999847e-05, 3.0000000000002247e-05, 3.04579999999971e-05, 3.0138999999998473e-05, 3.0292000000001207e-05, 2.9638999999997973e-05, 2.9848000000005925e-05, 3.0152999999998042e-05, 2.9792000000000707e-05, 2.9652999999997542e-05, 3.0472000000003607e-05, 2.9792000000000707e-05, 2.9819000000000373e-05, 2.9638999999997973e-05, 3.0000000000002247e-05, 3.0472000000003607e-05, 2.9986000000002677e-05, 3.0499999999995808e-05, 3.0472000000003607e-05, 2.9805000000000803e-05, 3.0333999999999917e-05, 2.9819999999999847e-05, 3.0486000000003177e-05, 3.0306000000000777e-05, 3.0305000000001303e-05, 3.04579999999971e-05, 3.04579999999971e-05, 2.9819999999999847e-05, 2.9972999999995642e-05, 3.0138999999998473e-05, 3.0306000000000777e-05, 2.9806000000000277e-05, 2.9652999999997542e-05, 3.047300000000308e-05, 2.997199999999617e-05, 3.0264000000002067e-05, 2.9652999999997542e-05, 3.047199999999667e-05, 2.995900000000301e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.327" endtime="20201030 11:52:12.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.315" endtime="20201030 11:52:12.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.348" endtime="20201030 11:52:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.338" endtime="20201030 11:52:12.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.335" endtime="20201030 11:52:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.832" endtime="20201030 11:52:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.831" endtime="20201030 11:52:12.374"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.397" endtime="20201030 11:52:12.414"></status>
</kw>
<msg timestamp="20201030 11:52:12.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.393" endtime="20201030 11:52:12.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.417" endtime="20201030 11:52:12.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.424" endtime="20201030 11:52:12.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.386" endtime="20201030 11:52:12.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.380" endtime="20201030 11:52:12.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.447" endtime="20201030 11:52:12.799"></status>
</kw>
<msg timestamp="20201030 11:52:12.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.444" endtime="20201030 11:52:12.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039978125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040008611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.809" endtime="20201030 11:52:12.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.828" endtime="20201030 11:52:12.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.437" endtime="20201030 11:52:12.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.432" endtime="20201030 11:52:12.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.845" level="INFO">${RESULT} = [{'diff': 3.048599999999624e-05}, {'diff': 3.04579999999971e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 3.0138999999998473e-05}, {'diff': 3.015300000000498e-05}, {'diff': 3.0333000000000443e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:12.837" endtime="20201030 11:52:12.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.856" level="INFO">${ACCURACY} = {'diff': [3.048599999999624e-05, 3.04579999999971e-05, 3.0000000000002247e-05, 3.0138999999998473e-05, 3.015300000000498e-05, 3.0333000000000443e-05, 3.0320000000000347e-05, 2.998700000000215e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 11:52:12.848" endtime="20201030 11:52:12.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.867" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.865" endtime="20201030 11:52:12.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.873" level="INFO">VALUE: [3.048599999999624e-05, 3.04579999999971e-05, 3.0000000000002247e-05, 3.0138999999998473e-05, 3.015300000000498e-05, 3.0333000000000443e-05, 3.0320000000000347e-05, 2.998700000000215e-05, 3.0292000000001207e-05, 3.048599999999624e-05, 2.9819000000000373e-05, 3.045900000000351e-05, 3.048599999999624e-05, 2.994399999999703e-05, 2.9986000000002677e-05, 2.9804999999993864e-05, 3.0014000000001817e-05, 3.0194000000004217e-05, 3.0499999999995808e-05, 3.0152999999998042e-05, 3.0278000000001637e-05, 3.0347000000000013e-05, 2.965300000000448e-05, 3.0486999999995712e-05, 2.965300000000448e-05, 3.063899999999897e-05, 2.9638999999997973e-05, 2.9805000000000803e-05, 2.9819999999999847e-05, 2.9652999999997542e-05, 3.0152999999998042e-05, 3.065299999999854e-05, 3.0486000000003177e-05, 3.0320000000000347e-05, 3.063899999999897e-05, 2.9610999999998833e-05, 3.0138999999998473e-05, 3.0306000000000777e-05, 3.044399999999753e-05, 3.0306000000000777e-05, 3.0138999999998473e-05, 3.0333000000000443e-05, 3.0486000000003177e-05, 2.9986000000002677e-05, 2.9805000000000803e-05, 2.968100000000362e-05, 2.962500000000534e-05, 2.9819999999999847e-05, 2.9652999999997542e-05, 3.0277999999994698e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.870" endtime="20201030 11:52:12.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.858" endtime="20201030 11:52:12.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.886" endtime="20201030 11:52:12.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.881" endtime="20201030 11:52:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.879" endtime="20201030 11:52:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.376" endtime="20201030 11:52:12.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.375" endtime="20201030 11:52:12.911"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.934" endtime="20201030 11:52:12.952"></status>
</kw>
<msg timestamp="20201030 11:52:12.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.930" endtime="20201030 11:52:12.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.955" endtime="20201030 11:52:12.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.961" endtime="20201030 11:52:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.923" endtime="20201030 11:52:12.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.917" endtime="20201030 11:52:12.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.985" endtime="20201030 11:52:13.338"></status>
</kw>
<msg timestamp="20201030 11:52:13.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039890903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.982" endtime="20201030 11:52:13.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039890903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.348" endtime="20201030 11:52:13.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.366" endtime="20201030 11:52:13.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.974" endtime="20201030 11:52:13.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.969" endtime="20201030 11:52:13.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.384" level="INFO">${RESULT} = [{'diff': 3.67780000000012e-05}, {'diff': 3.690300000000479e-05}, {'diff': 3.722300000000289e-05}, {'diff': 3.673600000000249e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.7374999999999214e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:13.375" endtime="20201030 11:52:13.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.395" level="INFO">${ACCURACY} = {'diff': [3.67780000000012e-05, 3.690300000000479e-05, 3.722300000000289e-05, 3.673600000000249e-05, 3.6888999999998284e-05, 3.7374999999999214e-05, 3.6902999999997854e-05, 3.7054999999994176e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 11:52:13.386" endtime="20201030 11:52:13.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.406" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.404" endtime="20201030 11:52:13.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.412" level="INFO">VALUE: [3.67780000000012e-05, 3.690300000000479e-05, 3.722300000000289e-05, 3.673600000000249e-05, 3.6888999999998284e-05, 3.7374999999999214e-05, 3.6902999999997854e-05, 3.7054999999994176e-05, 3.672200000000292e-05, 3.669400000000378e-05, 3.7388999999998784e-05, 3.7055000000001115e-05, 3.670800000000335e-05, 3.693100000000393e-05, 3.757000000000066e-05, 3.720900000000332e-05, 3.693100000000393e-05, 3.755599999999415e-05, 3.754200000000152e-05, 3.704200000000102e-05, 3.722200000000342e-05, 3.7208999999996384e-05, 3.705599999999365e-05, 3.673600000000249e-05, 3.6874999999998714e-05, 3.7055000000001115e-05, 3.6694999999996314e-05, 3.722300000000289e-05, 3.6888999999998284e-05, 3.673599999999555e-05, 3.688900000000522e-05, 3.6722999999995454e-05, 3.672200000000292e-05, 3.7402999999998354e-05, 3.7541000000002045e-05, 3.707000000000016e-05, 3.738900000000572e-05, 3.752800000000195e-05, 3.705600000000059e-05, 3.6888999999998284e-05, 3.673600000000249e-05, 3.7374999999999214e-05, 3.7027000000001975e-05, 3.7374999999999214e-05, 3.688900000000522e-05, 3.687500000000565e-05, 3.670900000000282e-05, 3.754199999999458e-05, 3.720799999999691e-05, 3.70979999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.409" endtime="20201030 11:52:13.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.397" endtime="20201030 11:52:13.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.425" endtime="20201030 11:52:13.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.420" endtime="20201030 11:52:13.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.418" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.913" endtime="20201030 11:52:13.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.912" endtime="20201030 11:52:13.450"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.473" endtime="20201030 11:52:13.491"></status>
</kw>
<msg timestamp="20201030 11:52:13.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.470" endtime="20201030 11:52:13.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.494" endtime="20201030 11:52:13.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.501" endtime="20201030 11:52:13.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.463" endtime="20201030 11:52:13.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.456" endtime="20201030 11:52:13.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.524" endtime="20201030 11:52:13.880"></status>
</kw>
<msg timestamp="20201030 11:52:13.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.521" endtime="20201030 11:52:13.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040264694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.890" endtime="20201030 11:52:13.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.909" endtime="20201030 11:52:13.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.514" endtime="20201030 11:52:13.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.509" endtime="20201030 11:52:13.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.926" level="INFO">${RESULT} = [{'diff': 3.673599999999555e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.670799999999641e-05}, {'diff': 3.704200000000102e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.670800000000335e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:13.917" endtime="20201030 11:52:13.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.936" level="INFO">${ACCURACY} = {'diff': [3.673599999999555e-05, 3.7388999999998784e-05, 3.670799999999641e-05, 3.704200000000102e-05, 3.7388999999998784e-05, 3.670800000000335e-05, 3.705600000000059e-05, 3.722200000000342e-05, 3.70...</msg>
<status status="PASS" starttime="20201030 11:52:13.928" endtime="20201030 11:52:13.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.947" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.945" endtime="20201030 11:52:13.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.952" level="INFO">VALUE: [3.673599999999555e-05, 3.7388999999998784e-05, 3.670799999999641e-05, 3.704200000000102e-05, 3.7388999999998784e-05, 3.670800000000335e-05, 3.705600000000059e-05, 3.722200000000342e-05, 3.705600000000059e-05, 3.7555000000001615e-05, 3.7347000000000075e-05, 3.67780000000012e-05, 3.7610999999999895e-05, 3.672200000000292e-05, 3.673600000000249e-05, 3.687500000000565e-05, 3.755600000000109e-05, 3.670900000000282e-05, 3.670800000000335e-05, 3.705600000000059e-05, 3.6888999999998284e-05, 3.669500000000325e-05, 3.722200000000342e-05, 3.757000000000066e-05, 3.755600000000109e-05, 3.754200000000152e-05, 3.7569000000001185e-05, 3.755599999999415e-05, 3.752800000000195e-05, 3.723600000000299e-05, 3.6874999999998714e-05, 3.6708999999995884e-05, 3.722200000000342e-05, 3.6888999999998284e-05, 3.740199999999888e-05, 3.722200000000342e-05, 3.691599999999795e-05, 3.670799999999641e-05, 3.670799999999641e-05, 3.672200000000292e-05, 3.738799999999931e-05, 3.722199999999648e-05, 3.7374999999999214e-05, 3.673600000000249e-05, 3.7569000000001185e-05, 3.7554999999994676e-05, 3.705599999999365e-05, 3.672200000000292e-05, 3.6888999999998284e-05, 3.7555000000001615e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.949" endtime="20201030 11:52:13.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.938" endtime="20201030 11:52:13.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.965" endtime="20201030 11:52:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.961" endtime="20201030 11:52:13.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.958" endtime="20201030 11:52:13.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.452" endtime="20201030 11:52:13.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.451" endtime="20201030 11:52:13.990"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.014" endtime="20201030 11:52:14.034"></status>
</kw>
<msg timestamp="20201030 11:52:14.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.011" endtime="20201030 11:52:14.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.038" endtime="20201030 11:52:14.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.046" endtime="20201030 11:52:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.003" endtime="20201030 11:52:14.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.997" endtime="20201030 11:52:14.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.072" endtime="20201030 11:52:14.428"></status>
</kw>
<msg timestamp="20201030 11:52:14.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0422545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:14.069" endtime="20201030 11:52:14.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0422545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:14.437" endtime="20201030 11:52:14.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.456" endtime="20201030 11:52:14.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.061" endtime="20201030 11:52:14.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.056" endtime="20201030 11:52:14.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.474" level="INFO">${RESULT} = [{'diff': 3.729200000000127e-05}, {'diff': 3.670799999999641e-05}, {'diff': 3.670900000000282e-05}, {'diff': 3.669400000000378e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.758400000000023e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:14.465" endtime="20201030 11:52:14.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.484" level="INFO">${ACCURACY} = {'diff': [3.729200000000127e-05, 3.670799999999641e-05, 3.670900000000282e-05, 3.669400000000378e-05, 3.6888999999998284e-05, 3.758400000000023e-05, 3.688900000000522e-05, 3.7388999999998784e-05, 3.67...</msg>
<status status="PASS" starttime="20201030 11:52:14.476" endtime="20201030 11:52:14.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.495" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.492" endtime="20201030 11:52:14.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.500" level="INFO">VALUE: [3.729200000000127e-05, 3.670799999999641e-05, 3.670900000000282e-05, 3.669400000000378e-05, 3.6888999999998284e-05, 3.758400000000023e-05, 3.688900000000522e-05, 3.7388999999998784e-05, 3.672300000000239e-05, 3.7583000000000755e-05, 3.6860999999999144e-05, 3.7555000000001615e-05, 3.6888999999998284e-05, 3.725000000000256e-05, 3.755600000000109e-05, 3.669399999999684e-05, 3.720800000000385e-05, 3.7083000000000255e-05, 3.690200000000532e-05, 3.7402999999998354e-05, 3.670799999999641e-05, 3.672200000000292e-05, 3.754199999999458e-05, 3.675000000000206e-05, 3.6638999999998034e-05, 3.704200000000102e-05, 3.6874999999998714e-05, 3.723700000000246e-05, 3.688900000000522e-05, 3.7069000000000685e-05, 3.672300000000239e-05, 3.688900000000522e-05, 3.716700000000461e-05, 3.7055000000001115e-05, 3.7124999999998964e-05, 3.7374999999999214e-05, 3.7360999999999644e-05, 3.7402999999998354e-05, 3.722200000000342e-05, 3.722300000000289e-05, 3.6958999999996134e-05, 3.755600000000109e-05, 3.7222999999995954e-05, 3.67780000000012e-05, 3.687500000000565e-05, 3.673599999999555e-05, 3.6874999999998714e-05, 3.755600000000109e-05, 3.6888999999998284e-05, 3.722200000000342e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.497" endtime="20201030 11:52:14.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.485" endtime="20201030 11:52:14.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.514" endtime="20201030 11:52:14.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.509" endtime="20201030 11:52:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.506" endtime="20201030 11:52:14.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.993" endtime="20201030 11:52:14.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.991" endtime="20201030 11:52:14.540"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.563" endtime="20201030 11:52:14.581"></status>
</kw>
<msg timestamp="20201030 11:52:14.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.559" endtime="20201030 11:52:14.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.584" endtime="20201030 11:52:14.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.590" endtime="20201030 11:52:14.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.552" endtime="20201030 11:52:14.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.546" endtime="20201030 11:52:14.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.614" endtime="20201030 11:52:14.965"></status>
</kw>
<msg timestamp="20201030 11:52:14.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.611" endtime="20201030 11:52:14.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.975" endtime="20201030 11:52:14.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.994" endtime="20201030 11:52:14.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.603" endtime="20201030 11:52:14.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.599" endtime="20201030 11:52:15.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.011" level="INFO">${RESULT} = [{'diff': 3.720800000000385e-05}, {'diff': 3.757000000000066e-05}, {'diff': 3.669399999999684e-05}, {'diff': 3.6902999999997854e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.670800000000335e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:15.002" endtime="20201030 11:52:15.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.022" level="INFO">${ACCURACY} = {'diff': [3.720800000000385e-05, 3.757000000000066e-05, 3.669399999999684e-05, 3.6902999999997854e-05, 3.7388999999998784e-05, 3.670800000000335e-05, 3.670800000000335e-05, 3.672300000000239e-05, 3.73...</msg>
<status status="PASS" starttime="20201030 11:52:15.013" endtime="20201030 11:52:15.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.033" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.031" endtime="20201030 11:52:15.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.039" level="INFO">VALUE: [3.720800000000385e-05, 3.757000000000066e-05, 3.669399999999684e-05, 3.6902999999997854e-05, 3.7388999999998784e-05, 3.670800000000335e-05, 3.670800000000335e-05, 3.672300000000239e-05, 3.738900000000572e-05, 3.723600000000299e-05, 3.758400000000023e-05, 3.7208999999996384e-05, 3.7569000000001185e-05, 3.688799999999881e-05, 3.7554999999994676e-05, 3.72780000000017e-05, 3.7222999999995954e-05, 3.7388999999998784e-05, 3.707000000000016e-05, 3.7583000000000755e-05, 3.741700000000486e-05, 3.7388999999998784e-05, 3.673700000000196e-05, 3.723600000000299e-05, 3.740199999999888e-05, 3.742999999999802e-05, 3.740300000000529e-05, 3.704200000000102e-05, 3.7360999999999644e-05, 3.707000000000016e-05, 3.722199999999648e-05, 3.722199999999648e-05, 3.7597000000000325e-05, 3.7555000000001615e-05, 3.754200000000152e-05, 3.726400000000213e-05, 3.723600000000299e-05, 3.704199999999408e-05, 3.722200000000342e-05, 3.718000000000471e-05, 3.6888999999998284e-05, 3.702800000000145e-05, 3.690300000000479e-05, 3.7222999999995954e-05, 3.707000000000016e-05, 3.722200000000342e-05, 3.722200000000342e-05, 3.7541000000002045e-05, 3.7347000000000075e-05, 3.752800000000195e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.035" endtime="20201030 11:52:15.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.024" endtime="20201030 11:52:15.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.057" endtime="20201030 11:52:15.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.052" endtime="20201030 11:52:15.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.050" endtime="20201030 11:52:15.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.542" endtime="20201030 11:52:15.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.541" endtime="20201030 11:52:15.082"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.105" endtime="20201030 11:52:15.123"></status>
</kw>
<msg timestamp="20201030 11:52:15.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.102" endtime="20201030 11:52:15.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.126" endtime="20201030 11:52:15.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.133" endtime="20201030 11:52:15.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.095" endtime="20201030 11:52:15.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.089" endtime="20201030 11:52:15.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.156" endtime="20201030 11:52:15.510"></status>
</kw>
<msg timestamp="20201030 11:52:15.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.153" endtime="20201030 11:52:15.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.520" endtime="20201030 11:52:15.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.539" endtime="20201030 11:52:15.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.146" endtime="20201030 11:52:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.141" endtime="20201030 11:52:15.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.556" level="INFO">${RESULT} = [{'diff': 3.702799999999451e-05}, {'diff': 3.7527000000002475e-05}, {'diff': 3.723600000000299e-05}, {'diff': 3.7374999999999214e-05}, {'diff': 3.672200000000292e-05}, {'diff': 3.742999999999802e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:15.547" endtime="20201030 11:52:15.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.568" level="INFO">${ACCURACY} = {'diff': [3.702799999999451e-05, 3.7527000000002475e-05, 3.723600000000299e-05, 3.7374999999999214e-05, 3.672200000000292e-05, 3.742999999999802e-05, 3.7388999999998784e-05, 3.755600000000109e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 11:52:15.558" endtime="20201030 11:52:15.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.579" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.576" endtime="20201030 11:52:15.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.584" level="INFO">VALUE: [3.702799999999451e-05, 3.7527000000002475e-05, 3.723600000000299e-05, 3.7374999999999214e-05, 3.672200000000292e-05, 3.742999999999802e-05, 3.7388999999998784e-05, 3.755600000000109e-05, 3.719399999999734e-05, 3.672200000000292e-05, 3.722200000000342e-05, 3.723599999999605e-05, 3.720799999999691e-05, 3.7069000000000685e-05, 3.672200000000292e-05, 3.7041000000001545e-05, 3.7110999999999394e-05, 3.701399999999494e-05, 3.715300000000504e-05, 3.741599999999845e-05, 3.738799999999931e-05, 3.7083000000000255e-05, 3.7402999999998354e-05, 3.6888999999998284e-05, 3.6916999999997424e-05, 3.740300000000529e-05, 3.7554999999994676e-05, 3.687500000000565e-05, 3.737500000000615e-05, 3.7610999999999895e-05, 3.757000000000066e-05, 3.7083000000000255e-05, 3.722199999999648e-05, 3.7041000000001545e-05, 3.672200000000292e-05, 3.755600000000109e-05, 3.726399999999519e-05, 3.7055000000001115e-05, 3.737500000000615e-05, 3.719399999999734e-05, 3.7360999999999644e-05, 3.7388999999998784e-05, 3.7360999999999644e-05, 3.7402999999998354e-05, 3.755600000000109e-05, 3.686199999999862e-05, 3.738799999999931e-05, 3.7040999999994606e-05, 3.720900000000332e-05, 3.7069000000000685e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.581" endtime="20201030 11:52:15.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.570" endtime="20201030 11:52:15.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.597" endtime="20201030 11:52:15.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.592" endtime="20201030 11:52:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.590" endtime="20201030 11:52:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.084" endtime="20201030 11:52:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.083" endtime="20201030 11:52:15.622"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.645" endtime="20201030 11:52:15.663"></status>
</kw>
<msg timestamp="20201030 11:52:15.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.642" endtime="20201030 11:52:15.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.666" endtime="20201030 11:52:15.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.673" endtime="20201030 11:52:15.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.635" endtime="20201030 11:52:15.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.629" endtime="20201030 11:52:15.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.696" endtime="20201030 11:52:16.049"></status>
</kw>
<msg timestamp="20201030 11:52:16.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.693" endtime="20201030 11:52:16.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039986014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.059" endtime="20201030 11:52:16.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.078" endtime="20201030 11:52:16.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.686" endtime="20201030 11:52:16.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.681" endtime="20201030 11:52:16.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.095" level="INFO">${RESULT} = [{'diff': 3.7388999999998784e-05}, {'diff': 3.755600000000109e-05}, {'diff': 3.752800000000195e-05}, {'diff': 3.672199999999598e-05}, {'diff': 3.7222999999995954e-05}, {'diff': 3.672199999999598e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:16.086" endtime="20201030 11:52:16.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.105" level="INFO">${ACCURACY} = {'diff': [3.7388999999998784e-05, 3.755600000000109e-05, 3.752800000000195e-05, 3.672199999999598e-05, 3.7222999999995954e-05, 3.672199999999598e-05, 3.722200000000342e-05, 3.758400000000023e-05, 3.70...</msg>
<status status="PASS" starttime="20201030 11:52:16.097" endtime="20201030 11:52:16.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.116" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.114" endtime="20201030 11:52:16.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.122" level="INFO">VALUE: [3.7388999999998784e-05, 3.755600000000109e-05, 3.752800000000195e-05, 3.672199999999598e-05, 3.7222999999995954e-05, 3.672199999999598e-05, 3.722200000000342e-05, 3.758400000000023e-05, 3.705600000000059e-05, 3.6888999999998284e-05, 3.7569000000001185e-05, 3.7055000000001115e-05, 3.7110999999999394e-05, 3.755600000000109e-05, 3.6694999999996314e-05, 3.6638999999998034e-05, 3.755600000000109e-05, 3.6902999999997854e-05, 3.707000000000016e-05, 3.722200000000342e-05, 3.7166999999997674e-05, 3.69580000000036e-05, 3.7374999999999214e-05, 3.740199999999888e-05, 3.672200000000292e-05, 3.754200000000152e-05, 3.702800000000145e-05, 3.7388999999998784e-05, 3.672300000000239e-05, 3.754200000000152e-05, 3.670799999999641e-05, 3.7402999999998354e-05, 3.670799999999641e-05, 3.755600000000109e-05, 3.757000000000066e-05, 3.705600000000059e-05, 3.7388999999998784e-05, 3.6888999999998284e-05, 3.7374999999999214e-05, 3.7583000000000755e-05, 3.673600000000249e-05, 3.722199999999648e-05, 3.672200000000292e-05, 3.690300000000479e-05, 3.704200000000102e-05, 3.722200000000342e-05, 3.669399999999684e-05, 3.7555000000001615e-05, 3.687500000000565e-05, 3.755600000000109e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.118" endtime="20201030 11:52:16.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.107" endtime="20201030 11:52:16.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.134" endtime="20201030 11:52:16.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.130" endtime="20201030 11:52:16.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.127" endtime="20201030 11:52:16.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.624" endtime="20201030 11:52:16.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.623" endtime="20201030 11:52:16.160"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.183" endtime="20201030 11:52:16.202"></status>
</kw>
<msg timestamp="20201030 11:52:16.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.179" endtime="20201030 11:52:16.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.205" endtime="20201030 11:52:16.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.212" endtime="20201030 11:52:16.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.172" endtime="20201030 11:52:16.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.166" endtime="20201030 11:52:16.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.235" endtime="20201030 11:52:16.577"></status>
</kw>
<msg timestamp="20201030 11:52:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041631056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.232" endtime="20201030 11:52:16.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041631056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.587" endtime="20201030 11:52:16.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.605" endtime="20201030 11:52:16.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.225" endtime="20201030 11:52:16.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.220" endtime="20201030 11:52:16.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.622" level="INFO">${RESULT} = [{'diff': 3.723700000000246e-05}, {'diff': 3.7402999999998354e-05}, {'diff': 3.7458999999996634e-05}, {'diff': 3.705600000000059e-05}, {'diff': 3.7360999999999644e-05}, {'diff': 3.7055000000001115e-05...</msg>
<status status="PASS" starttime="20201030 11:52:16.614" endtime="20201030 11:52:16.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.631" level="INFO">${ACCURACY} = {'diff': [3.723700000000246e-05, 3.7402999999998354e-05, 3.7458999999996634e-05, 3.705600000000059e-05, 3.7360999999999644e-05, 3.7055000000001115e-05, 3.7416999999997924e-05, 3.738799999999931e-05, 3...</msg>
<status status="PASS" starttime="20201030 11:52:16.624" endtime="20201030 11:52:16.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.642" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.640" endtime="20201030 11:52:16.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.647" level="INFO">VALUE: [3.723700000000246e-05, 3.7402999999998354e-05, 3.7458999999996634e-05, 3.705600000000059e-05, 3.7360999999999644e-05, 3.7055000000001115e-05, 3.7416999999997924e-05, 3.738799999999931e-05, 3.6888999999998284e-05, 3.7555000000001615e-05, 3.7041000000001545e-05, 3.705600000000059e-05, 3.707000000000016e-05, 3.7569000000001185e-05, 3.754200000000152e-05, 3.6874999999998714e-05, 3.670800000000335e-05, 3.670900000000282e-05, 3.704200000000102e-05, 3.672300000000239e-05, 3.705600000000059e-05, 3.704200000000102e-05, 3.7388999999998784e-05, 3.7624999999999464e-05, 3.7360999999999644e-05, 3.722199999999648e-05, 3.7388999999998784e-05, 3.724999999999562e-05, 3.7083000000000255e-05, 3.7096999999999825e-05, 3.688900000000522e-05, 3.7374999999999214e-05, 3.672199999999598e-05, 3.7388999999998784e-05, 3.688900000000522e-05, 3.705600000000059e-05, 3.7069000000000685e-05, 3.720900000000332e-05, 3.7512999999995966e-05, 3.690300000000479e-05, 3.7110999999999394e-05, 3.7360999999999644e-05, 3.722200000000342e-05, 3.7445000000004e-05, 3.704200000000102e-05, 3.672199999999598e-05, 3.6874999999998714e-05, 3.705600000000059e-05, 3.704200000000102e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.644" endtime="20201030 11:52:16.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.633" endtime="20201030 11:52:16.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.662" endtime="20201030 11:52:16.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.656" endtime="20201030 11:52:16.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.653" endtime="20201030 11:52:16.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.162" endtime="20201030 11:52:16.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.161" endtime="20201030 11:52:16.686"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.709" endtime="20201030 11:52:16.725"></status>
</kw>
<msg timestamp="20201030 11:52:16.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.706" endtime="20201030 11:52:16.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.729" endtime="20201030 11:52:16.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.735" endtime="20201030 11:52:16.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.699" endtime="20201030 11:52:16.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.693" endtime="20201030 11:52:16.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.758" endtime="20201030 11:52:17.096"></status>
</kw>
<msg timestamp="20201030 11:52:17.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039381639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.755" endtime="20201030 11:52:17.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039337667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039381639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.105" endtime="20201030 11:52:17.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.123" endtime="20201030 11:52:17.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.747" endtime="20201030 11:52:17.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.743" endtime="20201030 11:52:17.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.141" level="INFO">${RESULT} = [{'diff': 4.397200000000323e-05}, {'diff': 4.397199999999629e-05}, {'diff': 4.444400000000459e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.4624999999999526e-05}, {'diff': 4.3945000000003565e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:17.132" endtime="20201030 11:52:17.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.151" level="INFO">${ACCURACY} = {'diff': [4.397200000000323e-05, 4.397199999999629e-05, 4.444400000000459e-05, 4.429200000000133e-05, 4.4624999999999526e-05, 4.3945000000003565e-05, 4.447199999999679e-05, 4.450000000000287e-05, 4.46...</msg>
<status status="PASS" starttime="20201030 11:52:17.143" endtime="20201030 11:52:17.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.162" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.160" endtime="20201030 11:52:17.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.167" level="INFO">VALUE: [4.397200000000323e-05, 4.397199999999629e-05, 4.444400000000459e-05, 4.429200000000133e-05, 4.4624999999999526e-05, 4.3945000000003565e-05, 4.447199999999679e-05, 4.450000000000287e-05, 4.4638999999999096e-05, 4.401400000000194e-05, 4.38060000000004e-05, 4.445800000000416e-05, 4.3624999999998526e-05, 4.3917000000004425e-05, 4.4138999999998596e-05, 4.4319000000000996e-05, 4.4638999999999096e-05, 4.380499999999399e-05, 4.3639000000005035e-05, 4.4124999999999026e-05, 4.379100000000136e-05, 4.3944999999996626e-05, 4.447199999999679e-05, 4.372199999999604e-05, 4.404200000000108e-05, 4.411199999999893e-05, 4.397200000000323e-05, 4.4624999999999526e-05, 4.4638999999999096e-05, 4.4124999999999026e-05, 4.4152999999998166e-05, 4.447200000000373e-05, 4.451400000000244e-05, 4.4610999999999956e-05, 4.3958999999996196e-05, 4.4124999999999026e-05, 4.447199999999679e-05, 4.44860000000033e-05, 4.379199999999389e-05, 4.4138999999998596e-05, 4.4305000000001427e-05, 4.423599999999611e-05, 4.4305000000001427e-05, 4.398599999999586e-05, 4.415199999999869e-05, 4.4138999999998596e-05, 4.397200000000323e-05, 4.425000000000262e-05, 4.38060000000004e-05, 4.447199999999679e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.164" endtime="20201030 11:52:17.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.153" endtime="20201030 11:52:17.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.180" endtime="20201030 11:52:17.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.175" endtime="20201030 11:52:17.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.173" endtime="20201030 11:52:17.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.689" endtime="20201030 11:52:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.687" endtime="20201030 11:52:17.205"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.227" endtime="20201030 11:52:17.245"></status>
</kw>
<msg timestamp="20201030 11:52:17.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.224" endtime="20201030 11:52:17.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.249" endtime="20201030 11:52:17.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.255" endtime="20201030 11:52:17.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.217" endtime="20201030 11:52:17.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.211" endtime="20201030 11:52:17.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.278" endtime="20201030 11:52:17.625"></status>
</kw>
<msg timestamp="20201030 11:52:17.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039216583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.275" endtime="20201030 11:52:17.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039216583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039266028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.634" endtime="20201030 11:52:17.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.653" endtime="20201030 11:52:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.268" endtime="20201030 11:52:17.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.263" endtime="20201030 11:52:17.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.671" level="INFO">${RESULT} = [{'diff': 4.9445000000002126e-05}, {'diff': 4.880599999999846e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.863899999999616e-05}, {'diff': 4.876399999999975e-05}, {'diff': 4.913899999999666e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:17.662" endtime="20201030 11:52:17.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.686" level="INFO">${ACCURACY} = {'diff': [4.9445000000002126e-05, 4.880599999999846e-05, 4.873600000000061e-05, 4.863899999999616e-05, 4.876399999999975e-05, 4.913899999999666e-05, 4.875000000000018e-05, 4.945800000000222e-05, 4.919...</msg>
<status status="PASS" starttime="20201030 11:52:17.673" endtime="20201030 11:52:17.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.696" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.694" endtime="20201030 11:52:17.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.702" level="INFO">VALUE: [4.9445000000002126e-05, 4.880599999999846e-05, 4.873600000000061e-05, 4.863899999999616e-05, 4.876399999999975e-05, 4.913899999999666e-05, 4.875000000000018e-05, 4.945800000000222e-05, 4.91940000000024e-05, 4.894400000000215e-05, 4.909699999999795e-05, 4.854199999999864e-05, 4.8903000000002916e-05, 4.9014e-05, 4.930599999999896e-05, 4.862499999999659e-05, 4.882000000000497e-05, 4.925000000000068e-05, 4.8709000000000946e-05, 4.873600000000061e-05, 4.945800000000222e-05, 4.873600000000061e-05, 4.9417000000002986e-05, 4.88060000000054e-05, 4.911100000000446e-05, 4.8639000000003096e-05, 4.859699999999745e-05, 4.930499999999949e-05, 4.897200000000129e-05, 4.933299999999863e-05, 4.904199999999914e-05, 4.9125000000004027e-05, 4.858399999999735e-05, 4.95140000000005e-05, 4.852799999999907e-05, 4.888899999999641e-05, 4.945899999999476e-05, 4.870800000000147e-05, 4.926400000000025e-05, 4.861099999999702e-05, 4.936099999999777e-05, 4.9403000000003416e-05, 4.930599999999896e-05, 4.852799999999907e-05, 4.936099999999777e-05, 4.872200000000104e-05, 4.925000000000068e-05, 4.933299999999863e-05, 4.937499999999734e-05, 4.852700000000654e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.699" endtime="20201030 11:52:17.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.687" endtime="20201030 11:52:17.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.714" endtime="20201030 11:52:17.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.710" endtime="20201030 11:52:17.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.708" endtime="20201030 11:52:17.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.207" endtime="20201030 11:52:17.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.206" endtime="20201030 11:52:17.739"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.762" endtime="20201030 11:52:17.779"></status>
</kw>
<msg timestamp="20201030 11:52:17.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.758" endtime="20201030 11:52:17.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.782" endtime="20201030 11:52:17.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.788" endtime="20201030 11:52:17.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.751" endtime="20201030 11:52:17.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.745" endtime="20201030 11:52:17.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.811" endtime="20201030 11:52:18.154"></status>
</kw>
<msg timestamp="20201030 11:52:18.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039130472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.808" endtime="20201030 11:52:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039130472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.163" endtime="20201030 11:52:18.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.182" endtime="20201030 11:52:18.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.801" endtime="20201030 11:52:18.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.796" endtime="20201030 11:52:18.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.199" level="INFO">${RESULT} = [{'diff': 5.009699999999895e-05}, {'diff': 5.0443999999996714e-05}, {'diff': 4.977800000000032e-05}, {'diff': 5.015299999999723e-05}, {'diff': 5.03469999999992e-05}, {'diff': 4.973600000000161e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:18.190" endtime="20201030 11:52:18.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.209" level="INFO">${ACCURACY} = {'diff': [5.009699999999895e-05, 5.0443999999996714e-05, 4.977800000000032e-05, 5.015299999999723e-05, 5.03469999999992e-05, 4.973600000000161e-05, 4.9929999999996644e-05, 5.040299999999748e-05, 5.015...</msg>
<status status="PASS" starttime="20201030 11:52:18.201" endtime="20201030 11:52:18.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.219" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.217" endtime="20201030 11:52:18.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.225" level="INFO">VALUE: [5.009699999999895e-05, 5.0443999999996714e-05, 4.977800000000032e-05, 5.015299999999723e-05, 5.03469999999992e-05, 4.973600000000161e-05, 4.9929999999996644e-05, 5.040299999999748e-05, 5.015299999999723e-05, 5.0443999999996714e-05, 5.0014000000001e-05, 4.98469999999987e-05, 4.9887999999997934e-05, 5.0473000000002266e-05, 4.956999999999878e-05, 4.975000000000118e-05, 5.0153000000004166e-05, 5.0153000000004166e-05, 4.974999999999424e-05, 4.958299999999888e-05, 5.009799999999842e-05, 5.0471999999995854e-05, 5.03469999999992e-05, 5.0471999999995854e-05, 5.050000000000193e-05, 4.98190000000065e-05, 4.963899999999716e-05, 4.980499999999999e-05, 4.981899999999956e-05, 4.98339999999986e-05, 5.054100000000117e-05, 5.051300000000203e-05, 5.030599999999996e-05, 5.0487000000001836e-05, 4.9971999999995353e-05, 4.954199999999964e-05, 4.963899999999716e-05, 4.9971999999995353e-05, 4.955599999999921e-05, 5.022200000000254e-05, 5.038899999999791e-05, 5.0195000000002876e-05, 5.0403000000004416e-05, 5.0014000000001e-05, 5.037500000000528e-05, 4.959699999999845e-05, 4.998600000000186e-05, 5.009799999999842e-05, 4.968099999999587e-05, 4.973599999999467e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.222" endtime="20201030 11:52:18.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.210" endtime="20201030 11:52:18.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.237" endtime="20201030 11:52:18.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.233" endtime="20201030 11:52:18.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.230" endtime="20201030 11:52:18.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.741" endtime="20201030 11:52:18.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.740" endtime="20201030 11:52:18.263"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.285" endtime="20201030 11:52:18.304"></status>
</kw>
<msg timestamp="20201030 11:52:18.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.282" endtime="20201030 11:52:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.307" endtime="20201030 11:52:18.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.314" endtime="20201030 11:52:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.275" endtime="20201030 11:52:18.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.269" endtime="20201030 11:52:18.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.337" endtime="20201030 11:52:18.678"></status>
</kw>
<msg timestamp="20201030 11:52:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041485181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.333" endtime="20201030 11:52:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041485181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.688" endtime="20201030 11:52:18.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.706" endtime="20201030 11:52:18.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.326" endtime="20201030 11:52:18.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.321" endtime="20201030 11:52:18.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.723" level="INFO">${RESULT} = [{'diff': 5.127699999999541e-05}, {'diff': 5.102800000000157e-05}, {'diff': 5.145899999999676e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.087500000000578e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:18.715" endtime="20201030 11:52:18.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.733" level="INFO">${ACCURACY} = {'diff': [5.127699999999541e-05, 5.102800000000157e-05, 5.145899999999676e-05, 5.112499999999909e-05, 5.062499999999859e-05, 5.087500000000578e-05, 5.0985999999995923e-05, 5.088900000000535e-05, 5.065...</msg>
<status status="PASS" starttime="20201030 11:52:18.726" endtime="20201030 11:52:18.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.744" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.741" endtime="20201030 11:52:18.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.749" level="INFO">VALUE: [5.127699999999541e-05, 5.102800000000157e-05, 5.145899999999676e-05, 5.112499999999909e-05, 5.062499999999859e-05, 5.087500000000578e-05, 5.0985999999995923e-05, 5.088900000000535e-05, 5.0651999999998254e-05, 5.1431000000004556e-05, 5.106999999999334e-05, 5.054200000000064e-05, 5.0667000000004236e-05, 5.1415999999998574e-05, 5.0637999999998684e-05, 5.1401999999999004e-05, 5.1249999999995743e-05, 5.143099999999762e-05, 5.1207999999997034e-05, 5.1167000000004736e-05, 5.063899999999816e-05, 5.0943999999997214e-05, 5.056999999999978e-05, 5.068099999999687e-05, 5.150000000000293e-05, 5.095800000000372e-05, 5.073600000000261e-05, 5.100000000000243e-05, 5.1249999999995743e-05, 5.1401999999999004e-05, 5.129200000000139e-05, 5.083300000000013e-05, 5.0665999999997824e-05, 5.062499999999859e-05, 5.0723000000002516e-05, 5.140299999999848e-05, 5.13340000000001e-05, 5.104200000000114e-05, 5.131899999999412e-05, 5.076400000000175e-05, 5.101399999999506e-05, 5.056999999999978e-05, 5.0667000000004236e-05, 5.082000000000003e-05, 5.123600000000311e-05, 5.100000000000243e-05, 5.0915999999998074e-05, 5.095800000000372e-05, 5.152800000000207e-05, 5.0735999999995673e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.746" endtime="20201030 11:52:18.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.735" endtime="20201030 11:52:18.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.763" endtime="20201030 11:52:18.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.757" endtime="20201030 11:52:18.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.755" endtime="20201030 11:52:18.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.265" endtime="20201030 11:52:18.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.264" endtime="20201030 11:52:18.788"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.811" endtime="20201030 11:52:18.828"></status>
</kw>
<msg timestamp="20201030 11:52:18.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.807" endtime="20201030 11:52:18.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.832" endtime="20201030 11:52:18.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.838" endtime="20201030 11:52:18.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.800" endtime="20201030 11:52:18.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.795" endtime="20201030 11:52:18.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.861" endtime="20201030 11:52:19.202"></status>
</kw>
<msg timestamp="20201030 11:52:19.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039528431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.858" endtime="20201030 11:52:19.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039528431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.211" endtime="20201030 11:52:19.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.230" endtime="20201030 11:52:19.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.851" endtime="20201030 11:52:19.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.846" endtime="20201030 11:52:19.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.247" level="INFO">${RESULT} = [{'diff': 5.161199999999949e-05}, {'diff': 5.173600000000361e-05}, {'diff': 5.208400000000085e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.2207999999998034e-05}, {'diff': 5.158300000000088e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:19.239" endtime="20201030 11:52:19.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.258" level="INFO">${ACCURACY} = {'diff': [5.161199999999949e-05, 5.173600000000361e-05, 5.208400000000085e-05, 5.238899999999991e-05, 5.2207999999998034e-05, 5.158300000000088e-05, 5.209700000000095e-05, 5.218099999999837e-05, 5.172...</msg>
<status status="PASS" starttime="20201030 11:52:19.249" endtime="20201030 11:52:19.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.269" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.267" endtime="20201030 11:52:19.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.274" level="INFO">VALUE: [5.161199999999949e-05, 5.173600000000361e-05, 5.208400000000085e-05, 5.238899999999991e-05, 5.2207999999998034e-05, 5.158300000000088e-05, 5.209700000000095e-05, 5.218099999999837e-05, 5.172299999999658e-05, 5.204099999999573e-05, 5.1735999999996674e-05, 5.156900000000131e-05, 5.209700000000095e-05, 5.229099999999598e-05, 5.2443999999998714e-05, 5.2471999999997854e-05, 5.194499999999769e-05, 5.2181000000005306e-05, 5.25140000000035e-05, 5.180499999999505e-05, 5.23470000000012e-05, 5.158300000000088e-05, 5.177700000000285e-05, 5.248600000000436e-05, 5.157000000000078e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.1917000000005487e-05, 5.243099999999862e-05, 5.237500000000034e-05, 5.229100000000292e-05, 5.1999999999996493e-05, 5.2459000000004696e-05, 5.2263999999996313e-05, 5.18470000000007e-05, 5.2179999999998894e-05, 5.21669999999988e-05, 5.177800000000232e-05, 5.191699999999855e-05, 5.2235999999997174e-05, 5.208300000000138e-05, 5.222299999999708e-05, 5.205500000000224e-05, 5.159799999999992e-05, 5.16669999999983e-05, 5.156900000000131e-05, 5.25140000000035e-05, 5.2499999999996994e-05, 5.220800000000497e-05, 5.1651999999999254e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.271" endtime="20201030 11:52:19.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.260" endtime="20201030 11:52:19.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.287" endtime="20201030 11:52:19.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.283" endtime="20201030 11:52:19.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.280" endtime="20201030 11:52:19.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.790" endtime="20201030 11:52:19.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.789" endtime="20201030 11:52:19.312"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.335" endtime="20201030 11:52:19.352"></status>
</kw>
<msg timestamp="20201030 11:52:19.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.331" endtime="20201030 11:52:19.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.355" endtime="20201030 11:52:19.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.362" endtime="20201030 11:52:19.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.324" endtime="20201030 11:52:19.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.319" endtime="20201030 11:52:19.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.386" endtime="20201030 11:52:19.728"></status>
</kw>
<msg timestamp="20201030 11:52:19.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039366097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.382" endtime="20201030 11:52:19.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039366097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039419583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.737" endtime="20201030 11:52:19.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.756" endtime="20201030 11:52:19.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.375" endtime="20201030 11:52:19.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.370" endtime="20201030 11:52:19.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.773" level="INFO">${RESULT} = [{'diff': 5.3485999999998424e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.3263999999997313e-05}, {'diff': 5.3207999999999034e-05}, {'diff': 5.284699999999476e-05}, {'diff': 5.2707999999998534e-0...</msg>
<status status="PASS" starttime="20201030 11:52:19.765" endtime="20201030 11:52:19.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.784" level="INFO">${ACCURACY} = {'diff': [5.3485999999998424e-05, 5.2721999999998104e-05, 5.3263999999997313e-05, 5.3207999999999034e-05, 5.284699999999476e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.348600000000536e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:19.775" endtime="20201030 11:52:19.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.795" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.793" endtime="20201030 11:52:19.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.801" level="INFO">VALUE: [5.3485999999998424e-05, 5.2721999999998104e-05, 5.3263999999997313e-05, 5.3207999999999034e-05, 5.284699999999476e-05, 5.2707999999998534e-05, 5.2707999999998534e-05, 5.348600000000536e-05, 5.312500000000109e-05, 5.259700000000145e-05, 5.276299999999734e-05, 5.33470000000022e-05, 5.259699999999451e-05, 5.261100000000102e-05, 5.352699999999766e-05, 5.259700000000145e-05, 5.323600000000511e-05, 5.3249999999997744e-05, 5.3221999999998604e-05, 5.3277999999996883e-05, 5.28470000000017e-05, 5.280599999999552e-05, 5.340300000000048e-05, 5.2985999999997924e-05, 5.2695000000005376e-05, 5.34869999999979e-05, 5.3402000000001004e-05, 5.30270000000041e-05, 5.2902000000000504e-05, 5.3207999999999034e-05, 5.262500000000059e-05, 5.3249999999997744e-05, 5.262500000000059e-05, 5.331999999999559e-05, 5.312500000000109e-05, 5.2888000000000934e-05, 5.3457999999999284e-05, 5.277800000000332e-05, 5.308300000000238e-05, 5.336100000000177e-05, 5.2999999999997494e-05, 5.28470000000017e-05, 5.281900000000256e-05, 5.3471999999998854e-05, 5.3431000000006557e-05, 5.2943999999999214e-05, 5.31669999999998e-05, 5.2638000000000684e-05, 5.3430000000000144e-05, 5.279200000000289e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.798" endtime="20201030 11:52:19.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.786" endtime="20201030 11:52:19.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.813" endtime="20201030 11:52:19.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.809" endtime="20201030 11:52:19.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.806" endtime="20201030 11:52:19.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.314" endtime="20201030 11:52:19.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.313" endtime="20201030 11:52:19.839"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.861" endtime="20201030 11:52:19.879"></status>
</kw>
<msg timestamp="20201030 11:52:19.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.858" endtime="20201030 11:52:19.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.882" endtime="20201030 11:52:19.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.888" endtime="20201030 11:52:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.851" endtime="20201030 11:52:19.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.845" endtime="20201030 11:52:19.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.912" endtime="20201030 11:52:20.255"></status>
</kw>
<msg timestamp="20201030 11:52:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039584236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.908" endtime="20201030 11:52:20.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039584236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.265" endtime="20201030 11:52:20.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.283" endtime="20201030 11:52:20.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.901" endtime="20201030 11:52:20.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.896" endtime="20201030 11:52:20.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.301" level="INFO">${RESULT} = [{'diff': 5.386100000000227e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.4221999999999604e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.430599999999702e-05}, {'diff': 5.397299999999883e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:20.292" endtime="20201030 11:52:20.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.310" level="INFO">${ACCURACY} = {'diff': [5.386100000000227e-05, 5.393100000000012e-05, 5.4221999999999604e-05, 5.440300000000148e-05, 5.430599999999702e-05, 5.397299999999883e-05, 5.40419999999972e-05, 5.3999999999998494e-05, 5.445...</msg>
<status status="PASS" starttime="20201030 11:52:20.303" endtime="20201030 11:52:20.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.321" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.319" endtime="20201030 11:52:20.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.327" level="INFO">VALUE: [5.386100000000227e-05, 5.393100000000012e-05, 5.4221999999999604e-05, 5.440300000000148e-05, 5.430599999999702e-05, 5.397299999999883e-05, 5.40419999999972e-05, 5.3999999999998494e-05, 5.445899999999976e-05, 5.433300000000363e-05, 5.402699999999816e-05, 5.437500000000234e-05, 5.383300000000313e-05, 5.3721999999999104e-05, 5.359700000000245e-05, 5.3652000000001254e-05, 5.4415999999994635e-05, 5.455599999999727e-05, 5.384699999999576e-05, 5.368099999999987e-05, 5.3707999999999534e-05, 5.427800000000482e-05, 5.4443999999993775e-05, 5.377800000000432e-05, 5.387500000000184e-05, 5.3680000000000394e-05, 5.379100000000442e-05, 5.438899999999497e-05, 5.452800000000507e-05, 5.4263999999998314e-05, 5.440300000000148e-05, 5.397299999999883e-05, 5.4166000000001324e-05, 5.401300000000553e-05, 5.365300000000073e-05, 5.3971999999999354e-05, 5.384699999999576e-05, 5.3971999999999354e-05, 5.384699999999576e-05, 5.429099999999798e-05, 5.438900000000191e-05, 5.3735999999998674e-05, 5.359699999999551e-05, 5.418100000000037e-05, 5.4513999999998564e-05, 5.4194000000000464e-05, 5.4194000000000464e-05, 5.3679999999993455e-05, 5.441700000000105e-05, 5.386100000000227e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.323" endtime="20201030 11:52:20.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.312" endtime="20201030 11:52:20.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.344" endtime="20201030 11:52:20.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.339" endtime="20201030 11:52:20.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.337" endtime="20201030 11:52:20.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.841" endtime="20201030 11:52:20.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.839" endtime="20201030 11:52:20.369"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.391" endtime="20201030 11:52:20.410"></status>
</kw>
<msg timestamp="20201030 11:52:20.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.388" endtime="20201030 11:52:20.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.414" endtime="20201030 11:52:20.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.421" endtime="20201030 11:52:20.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.381" endtime="20201030 11:52:20.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.375" endtime="20201030 11:52:20.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.445" endtime="20201030 11:52:20.786"></status>
</kw>
<msg timestamp="20201030 11:52:20.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040894264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040949569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.442" endtime="20201030 11:52:20.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040894264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040949569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.796" endtime="20201030 11:52:20.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.815" endtime="20201030 11:52:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.434" endtime="20201030 11:52:20.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.429" endtime="20201030 11:52:20.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.832" level="INFO">${RESULT} = [{'diff': 5.530499999999855e-05}, {'diff': 5.515299999999529e-05}, {'diff': 5.476299999999934e-05}, {'diff': 5.518099999999443e-05}, {'diff': 5.456999999999684e-05}, {'diff': 5.484699999999676e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:20.823" endtime="20201030 11:52:20.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.841" level="INFO">${ACCURACY} = {'diff': [5.530499999999855e-05, 5.515299999999529e-05, 5.476299999999934e-05, 5.518099999999443e-05, 5.456999999999684e-05, 5.484699999999676e-05, 5.484699999999676e-05, 5.5193999999994525e-05, 5.537...</msg>
<status status="PASS" starttime="20201030 11:52:20.834" endtime="20201030 11:52:20.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.852" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.850" endtime="20201030 11:52:20.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.857" level="INFO">VALUE: [5.530499999999855e-05, 5.515299999999529e-05, 5.476299999999934e-05, 5.518099999999443e-05, 5.456999999999684e-05, 5.484699999999676e-05, 5.484699999999676e-05, 5.5193999999994525e-05, 5.537500000000334e-05, 5.461100000000302e-05, 5.5180000000001894e-05, 5.529200000000539e-05, 5.4735999999999674e-05, 5.536100000000377e-05, 5.518100000000137e-05, 5.5527999999999134e-05, 5.5041999999998203e-05, 5.5236000000000174e-05, 5.4722000000000104e-05, 5.518099999999443e-05, 5.509800000000342e-05, 5.5027999999998634e-05, 5.462500000000259e-05, 5.481899999999762e-05, 5.519500000000094e-05, 5.505599999999777e-05, 5.500000000000643e-05, 5.490300000000198e-05, 5.483299999999719e-05, 5.479099999999848e-05, 5.534699999999726e-05, 5.5165999999995385e-05, 5.55549999999988e-05, 5.536100000000377e-05, 5.55549999999988e-05, 5.461100000000302e-05, 5.5236000000000174e-05, 5.4915999999995135e-05, 5.501299999999959e-05, 5.4985999999999924e-05, 5.4722000000000104e-05, 5.555500000000574e-05, 5.4916000000002074e-05, 5.476400000000575e-05, 5.5527999999999134e-05, 5.506999999999734e-05, 5.4985999999999924e-05, 5.4999999999999494e-05, 5.540300000000248e-05, 5.538900000000291e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.854" endtime="20201030 11:52:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.843" endtime="20201030 11:52:20.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.872" endtime="20201030 11:52:20.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.866" endtime="20201030 11:52:20.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.863" endtime="20201030 11:52:20.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.371" endtime="20201030 11:52:20.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.370" endtime="20201030 11:52:20.897"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.920" endtime="20201030 11:52:20.937"></status>
</kw>
<msg timestamp="20201030 11:52:20.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.916" endtime="20201030 11:52:20.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.940" endtime="20201030 11:52:20.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.947" endtime="20201030 11:52:20.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.909" endtime="20201030 11:52:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.903" endtime="20201030 11:52:20.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.970" endtime="20201030 11:52:21.313"></status>
</kw>
<msg timestamp="20201030 11:52:21.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039475569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039531903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.967" endtime="20201030 11:52:21.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039475569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039531903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.322" endtime="20201030 11:52:21.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.341" endtime="20201030 11:52:21.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.959" endtime="20201030 11:52:21.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.955" endtime="20201030 11:52:21.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.358" level="INFO">${RESULT} = [{'diff': 5.633399999999816e-05}, {'diff': 5.563900000000316e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.6151999999996816e-05}, {'diff': 5.5735999999993735e-05}, {'diff': 5.556900000000531e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:21.349" endtime="20201030 11:52:21.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.369" level="INFO">${ACCURACY} = {'diff': [5.633399999999816e-05, 5.563900000000316e-05, 5.558299999999794e-05, 5.6151999999996816e-05, 5.5735999999993735e-05, 5.556900000000531e-05, 5.5527999999999134e-05, 5.616699999999586e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 11:52:21.360" endtime="20201030 11:52:21.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.380" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.377" endtime="20201030 11:52:21.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.385" level="INFO">VALUE: [5.633399999999816e-05, 5.563900000000316e-05, 5.558299999999794e-05, 5.6151999999996816e-05, 5.5735999999993735e-05, 5.556900000000531e-05, 5.5527999999999134e-05, 5.616699999999586e-05, 5.6000000000000494e-05, 5.56670000000023e-05, 5.5694000000001964e-05, 5.562499999999665e-05, 5.6429999999996205e-05, 5.6250000000000744e-05, 5.616699999999586e-05, 5.6555999999999274e-05, 5.6236000000001174e-05, 5.616699999999586e-05, 5.558299999999794e-05, 5.6180000000002894e-05, 5.6277999999999884e-05, 5.569500000000144e-05, 5.6277999999999884e-05, 5.562500000000359e-05, 5.606900000000581e-05, 5.561099999999708e-05, 5.633299999999869e-05, 5.558400000000435e-05, 5.645900000000176e-05, 5.643100000000262e-05, 5.569500000000144e-05, 5.5763999999999814e-05, 5.6014000000000064e-05, 5.6166000000003324e-05, 5.595900000000126e-05, 5.6291999999999454e-05, 5.559700000000445e-05, 5.615299999999629e-05, 5.6250000000000744e-05, 5.608399999999791e-05, 5.6472000000001854e-05, 5.636100000000477e-05, 5.556899999999837e-05, 5.5915999999996135e-05, 5.6249999999993805e-05, 5.615300000000323e-05, 5.6166000000003324e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.6193999999995525e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.382" endtime="20201030 11:52:21.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.371" endtime="20201030 11:52:21.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.398" endtime="20201030 11:52:21.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.393" endtime="20201030 11:52:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.391" endtime="20201030 11:52:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.899" endtime="20201030 11:52:21.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.898" endtime="20201030 11:52:21.423"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.446" endtime="20201030 11:52:21.465"></status>
</kw>
<msg timestamp="20201030 11:52:21.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.443" endtime="20201030 11:52:21.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.469" endtime="20201030 11:52:21.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.475" endtime="20201030 11:52:21.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.435" endtime="20201030 11:52:21.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.429" endtime="20201030 11:52:21.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.498" endtime="20201030 11:52:21.840"></status>
</kw>
<msg timestamp="20201030 11:52:21.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040679694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.495" endtime="20201030 11:52:21.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040679694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.850" endtime="20201030 11:52:21.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.868" endtime="20201030 11:52:21.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.488" endtime="20201030 11:52:21.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.483" endtime="20201030 11:52:21.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.886" level="INFO">${RESULT} = [{'diff': 5.659700000000545e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.6750000000001244e-05}, {'diff': 5.713899999999772e-05}, {'diff': 5.6791999999999954e-05}, {'diff': 5.668100000000287e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:21.877" endtime="20201030 11:52:21.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.897" level="INFO">${ACCURACY} = {'diff': [5.659700000000545e-05, 5.7222000000002604e-05, 5.6750000000001244e-05, 5.713899999999772e-05, 5.6791999999999954e-05, 5.668100000000287e-05, 5.659699999999851e-05, 5.736099999999883e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 11:52:21.888" endtime="20201030 11:52:21.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.908" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.905" endtime="20201030 11:52:21.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.913" level="INFO">VALUE: [5.659700000000545e-05, 5.7222000000002604e-05, 5.6750000000001244e-05, 5.713899999999772e-05, 5.6791999999999954e-05, 5.668100000000287e-05, 5.659699999999851e-05, 5.736099999999883e-05, 5.68749999999979e-05, 5.7278000000000884e-05, 5.683299999999919e-05, 5.681899999999962e-05, 5.741699999999711e-05, 5.663899999999722e-05, 5.711200000000499e-05, 5.7458000000003284e-05, 5.719500000000294e-05, 5.6750000000001244e-05, 5.6957999999995845e-05, 5.688899999999747e-05, 5.743100000000362e-05, 5.7443999999996775e-05, 5.661100000000502e-05, 5.751300000000209e-05, 5.7444000000003714e-05, 5.6750000000001244e-05, 5.737500000000534e-05, 5.7500000000001994e-05, 5.7193999999996525e-05, 5.659699999999851e-05, 5.683299999999919e-05, 5.73749999999984e-05, 5.6666000000003824e-05, 5.6778000000000384e-05, 5.713900000000466e-05, 5.73749999999984e-05, 5.6764000000000814e-05, 5.684699999999876e-05, 5.754100000000123e-05, 5.658299999999894e-05, 5.70550000000003e-05, 5.663899999999722e-05, 5.7264000000001314e-05, 5.6736000000001674e-05, 5.726300000000184e-05, 5.6749999999994305e-05, 5.6958000000002784e-05, 5.709699999999901e-05, 5.701300000000159e-05, 5.7222000000002604e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.910" endtime="20201030 11:52:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.899" endtime="20201030 11:52:21.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.926" endtime="20201030 11:52:21.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.921" endtime="20201030 11:52:21.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.919" endtime="20201030 11:52:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.425" endtime="20201030 11:52:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.424" endtime="20201030 11:52:21.951"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.973" endtime="20201030 11:52:21.991"></status>
</kw>
<msg timestamp="20201030 11:52:21.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.970" endtime="20201030 11:52:21.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.994" endtime="20201030 11:52:21.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.001" endtime="20201030 11:52:22.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.963" endtime="20201030 11:52:22.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.957" endtime="20201030 11:52:22.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.024" endtime="20201030 11:52:22.367"></status>
</kw>
<msg timestamp="20201030 11:52:22.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039421278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039479042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.021" endtime="20201030 11:52:22.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039421278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039479042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.377" endtime="20201030 11:52:22.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.396" endtime="20201030 11:52:22.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.013" endtime="20201030 11:52:22.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.009" endtime="20201030 11:52:22.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.413" level="INFO">${RESULT} = [{'diff': 5.7764000000001814e-05}, {'diff': 5.7679999999997456e-05}, {'diff': 5.7721999999996165e-05}, {'diff': 5.793100000000412e-05}, {'diff': 5.75550000000008e-05}, {'diff': 5.8250000000002744e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:22.404" endtime="20201030 11:52:22.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.422" level="INFO">${ACCURACY} = {'diff': [5.7764000000001814e-05, 5.7679999999997456e-05, 5.7721999999996165e-05, 5.793100000000412e-05, 5.75550000000008e-05, 5.8250000000002744e-05, 5.829099999999504e-05, 5.7792000000000954e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:52:22.415" endtime="20201030 11:52:22.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.433" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.431" endtime="20201030 11:52:22.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.439" level="INFO">VALUE: [5.7764000000001814e-05, 5.7679999999997456e-05, 5.7721999999996165e-05, 5.793100000000412e-05, 5.75550000000008e-05, 5.8250000000002744e-05, 5.829099999999504e-05, 5.7792000000000954e-05, 5.7958000000003784e-05, 5.752700000000166e-05, 5.812500000000609e-05, 5.790300000000498e-05, 5.768100000000387e-05, 5.8236000000003174e-05, 5.8471999999996915e-05, 5.7735999999995735e-05, 5.829099999999504e-05, 5.759800000000592e-05, 5.7820000000000094e-05, 5.7986000000002924e-05, 5.8263999999995375e-05, 5.763899999999822e-05, 5.761099999999908e-05, 5.758299999999994e-05, 5.845899999999682e-05, 5.8542000000001704e-05, 5.8472000000003854e-05, 5.8207999999997095e-05, 5.75550000000008e-05, 5.8194999999997e-05, 5.8347999999999733e-05, 5.8221999999996665e-05, 5.790300000000498e-05, 5.784699999999976e-05, 5.8499999999996055e-05, 5.8471999999996915e-05, 5.804099999999479e-05, 5.8429999999998206e-05, 5.7820000000000094e-05, 5.7750000000002244e-05, 5.7750000000002244e-05, 5.80550000000013e-05, 5.7680000000004394e-05, 5.8264000000002314e-05, 5.838899999999897e-05, 5.8222000000003604e-05, 5.780499999999411e-05, 5.756900000000037e-05, 5.854100000000223e-05, 5.815299999999829e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.436" endtime="20201030 11:52:22.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.424" endtime="20201030 11:52:22.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.452" endtime="20201030 11:52:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.447" endtime="20201030 11:52:22.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.445" endtime="20201030 11:52:22.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.953" endtime="20201030 11:52:22.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.952" endtime="20201030 11:52:22.477"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.501" endtime="20201030 11:52:22.524"></status>
</kw>
<msg timestamp="20201030 11:52:22.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.497" endtime="20201030 11:52:22.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.528" endtime="20201030 11:52:22.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.534" endtime="20201030 11:52:22.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.490" endtime="20201030 11:52:22.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.484" endtime="20201030 11:52:22.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.558" endtime="20201030 11:52:22.900"></status>
</kw>
<msg timestamp="20201030 11:52:22.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046919778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046978764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.554" endtime="20201030 11:52:22.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046919778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046978764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.910" endtime="20201030 11:52:22.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.929" endtime="20201030 11:52:22.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.547" endtime="20201030 11:52:22.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.543" endtime="20201030 11:52:22.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.946" level="INFO">${RESULT} = [{'diff': 5.8985999999996985e-05}, {'diff': 5.8957999999997845e-05}, {'diff': 5.9056000000001774e-05}, {'diff': 5.9263999999996375e-05}, {'diff': 5.86949999999975e-05}, {'diff': 5.8556000000001274e-05...</msg>
<status status="PASS" starttime="20201030 11:52:22.937" endtime="20201030 11:52:22.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.955" level="INFO">${ACCURACY} = {'diff': [5.8985999999996985e-05, 5.8957999999997845e-05, 5.9056000000001774e-05, 5.9263999999996375e-05, 5.86949999999975e-05, 5.8556000000001274e-05, 5.8848000000000233e-05, 5.8778000000002384e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:22.948" endtime="20201030 11:52:22.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.966" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.964" endtime="20201030 11:52:22.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.972" level="INFO">VALUE: [5.8985999999996985e-05, 5.8957999999997845e-05, 5.9056000000001774e-05, 5.9263999999996375e-05, 5.86949999999975e-05, 5.8556000000001274e-05, 5.8848000000000233e-05, 5.8778000000002384e-05, 5.8806000000001524e-05, 5.9556000000002274e-05, 5.9070000000001344e-05, 5.9221999999997665e-05, 5.9362000000000303e-05, 5.9083999999993975e-05, 5.915299999999929e-05, 5.9236000000004174e-05, 5.8778000000002384e-05, 5.8777999999995445e-05, 5.915299999999929e-05, 5.8986000000003924e-05, 5.8792000000001954e-05, 5.859700000000051e-05, 5.862500000000659e-05, 5.891700000000555e-05, 5.9320000000001594e-05, 5.9014000000003064e-05, 5.9250000000003744e-05, 5.8582999999994e-05, 5.8806000000001524e-05, 5.9056000000001774e-05, 5.9098000000000483e-05, 5.8972000000004354e-05, 5.854100000000223e-05, 5.9612000000000553e-05, 5.9250000000003744e-05, 5.9429999999999206e-05, 5.913899999999972e-05, 5.936100000000083e-05, 5.931899999999518e-05, 5.8805999999994585e-05, 5.9194000000005464e-05, 5.934700000000126e-05, 5.8679999999998456e-05, 5.8985999999996985e-05, 5.9236000000004174e-05, 5.9042000000002204e-05, 5.930500000000255e-05, 5.9485999999997485e-05, 5.8722000000004104e-05, 5.930500000000255e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.969" endtime="20201030 11:52:22.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.957" endtime="20201030 11:52:22.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.986" endtime="20201030 11:52:23.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.980" endtime="20201030 11:52:23.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.977" endtime="20201030 11:52:23.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.479" endtime="20201030 11:52:23.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.478" endtime="20201030 11:52:23.011"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.034" endtime="20201030 11:52:23.052"></status>
</kw>
<msg timestamp="20201030 11:52:23.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.031" endtime="20201030 11:52:23.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.055" endtime="20201030 11:52:23.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.061" endtime="20201030 11:52:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.023" endtime="20201030 11:52:23.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.018" endtime="20201030 11:52:23.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.085" endtime="20201030 11:52:23.426"></status>
</kw>
<msg timestamp="20201030 11:52:23.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.081" endtime="20201030 11:52:23.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039813653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.436" endtime="20201030 11:52:23.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.454" endtime="20201030 11:52:23.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.074" endtime="20201030 11:52:23.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.069" endtime="20201030 11:52:23.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.472" level="INFO">${RESULT} = [{'diff': 6.038900000000097e-05}, {'diff': 6.015300000000029e-05}, {'diff': 5.966699999999936e-05}, {'diff': 6.0334000000002164e-05}, {'diff': 5.9957999999998846e-05}, {'diff': 5.983299999999525e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:23.463" endtime="20201030 11:52:23.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:23.482" level="INFO">${ACCURACY} = {'diff': [6.038900000000097e-05, 6.015300000000029e-05, 5.966699999999936e-05, 6.0334000000002164e-05, 5.9957999999998846e-05, 5.983299999999525e-05, 5.9848000000001234e-05, 6.006900000000287e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 11:52:23.474" endtime="20201030 11:52:23.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.493" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:52:23.491" endtime="20201030 11:52:23.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.499" level="INFO">VALUE: [6.038900000000097e-05, 6.015300000000029e-05, 5.966699999999936e-05, 6.0334000000002164e-05, 5.9957999999998846e-05, 5.983299999999525e-05, 5.9848000000001234e-05, 6.006900000000287e-05, 5.955499999999586e-05, 6.036100000000183e-05, 5.988900000000047e-05, 5.9679999999999456e-05, 5.9778000000003384e-05, 5.990300000000004e-05, 6.031899999999618e-05, 5.9985999999997985e-05, 5.963900000000022e-05, 5.9749999999997305e-05, 6.0056000000002774e-05, 5.968099999999893e-05, 6.033300000000269e-05, 5.955499999999586e-05, 6.018099999999943e-05, 6.0499999999998055e-05, 5.958300000000194e-05, 6.03750000000014e-05, 6.013900000000072e-05, 6.0443999999999776e-05, 6.0500000000004994e-05, 6.0277999999996945e-05, 6.0166000000000386e-05, 6.0527999999997195e-05, 6.0028000000003634e-05, 6.0207999999999096e-05, 5.958300000000194e-05, 5.9778000000003384e-05, 6.012499999999421e-05, 5.9778000000003384e-05, 6.0194999999999e-05, 6.0249999999997805e-05, 6.034700000000226e-05, 6.0499999999998055e-05, 6.0528000000004134e-05, 6.030500000000355e-05, 6.008300000000244e-05, 6.054100000000423e-05, 5.962500000000065e-05, 6.0471999999998916e-05, 6.0457999999999346e-05, 6.03750000000014e-05]</msg>
<status status="PASS" starttime="20201030 11:52:23.495" endtime="20201030 11:52:23.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.484" endtime="20201030 11:52:23.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.512" endtime="20201030 11:52:23.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.507" endtime="20201030 11:52:23.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.505" endtime="20201030 11:52:23.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.013" endtime="20201030 11:52:23.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.012" endtime="20201030 11:52:23.537"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.560" endtime="20201030 11:52:23.578"></status>
</kw>
<msg timestamp="20201030 11:52:23.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.557" endtime="20201030 11:52:23.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.581" endtime="20201030 11:52:23.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.588" endtime="20201030 11:52:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.550" endtime="20201030 11:52:23.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.544" endtime="20201030 11:52:23.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.611" endtime="20201030 11:52:23.952"></status>
</kw>
<msg timestamp="20201030 11:52:23.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039825014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:23.608" endtime="20201030 11:52:23.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039825014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:23.961" endtime="20201030 11:52:23.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.980" endtime="20201030 11:52:23.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.601" endtime="20201030 11:52:23.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.596" endtime="20201030 11:52:23.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.997" level="INFO">${RESULT} = [{'diff': 6.1013999999998125e-05}, {'diff': 6.133400000000316e-05}, {'diff': 6.097299999999889e-05}, {'diff': 6.0638000000001746e-05}, {'diff': 6.151400000000556e-05}, {'diff': 6.122199999999967e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:23.988" endtime="20201030 11:52:23.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.008" level="INFO">${ACCURACY} = {'diff': [6.1013999999998125e-05, 6.133400000000316e-05, 6.097299999999889e-05, 6.0638000000001746e-05, 6.151400000000556e-05, 6.122199999999967e-05, 6.087499999999496e-05, 6.059700000000251e-05, 6.13...</msg>
<status status="PASS" starttime="20201030 11:52:23.999" endtime="20201030 11:52:24.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.019" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.017" endtime="20201030 11:52:24.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.025" level="INFO">VALUE: [6.1013999999998125e-05, 6.133400000000316e-05, 6.097299999999889e-05, 6.0638000000001746e-05, 6.151400000000556e-05, 6.122199999999967e-05, 6.087499999999496e-05, 6.059700000000251e-05, 6.134699999999632e-05, 6.059700000000251e-05, 6.0570000000002844e-05, 6.112500000000215e-05, 6.068099999999993e-05, 6.086100000000233e-05, 6.068099999999993e-05, 6.061099999999514e-05, 6.154199999999777e-05, 6.0792000000003954e-05, 6.062500000000165e-05, 6.0971999999999416e-05, 6.106900000000387e-05, 6.115300000000129e-05, 6.140300000000154e-05, 6.155499999999786e-05, 6.15550000000048e-05, 6.118000000000096e-05, 6.109699999999607e-05, 6.148599999999949e-05, 6.0971999999999416e-05, 6.0862000000001804e-05, 6.102700000000516e-05, 6.157000000000384e-05, 6.10829999999965e-05, 6.093100000000018e-05, 6.091700000000061e-05, 6.134800000000273e-05, 6.065199999999438e-05, 6.136099999999589e-05, 6.145800000000035e-05, 6.066700000000036e-05, 6.1000000000005494e-05, 6.118100000000043e-05, 6.094499999999975e-05, 6.0763999999997875e-05, 6.138899999999503e-05, 6.109700000000301e-05, 6.104199999999727e-05, 6.134700000000326e-05, 6.0820000000003094e-05, 6.07629999999984e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.022" endtime="20201030 11:52:24.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.010" endtime="20201030 11:52:24.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.037" endtime="20201030 11:52:24.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.033" endtime="20201030 11:52:24.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.031" endtime="20201030 11:52:24.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.540" endtime="20201030 11:52:24.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.539" endtime="20201030 11:52:24.063"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.085" endtime="20201030 11:52:24.103"></status>
</kw>
<msg timestamp="20201030 11:52:24.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.082" endtime="20201030 11:52:24.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.106" endtime="20201030 11:52:24.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.113" endtime="20201030 11:52:24.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.075" endtime="20201030 11:52:24.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.069" endtime="20201030 11:52:24.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.136" endtime="20201030 11:52:24.479"></status>
</kw>
<msg timestamp="20201030 11:52:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039736819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.133" endtime="20201030 11:52:24.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039736819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.489" endtime="20201030 11:52:24.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.507" endtime="20201030 11:52:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.126" endtime="20201030 11:52:24.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.121" endtime="20201030 11:52:24.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.525" level="INFO">${RESULT} = [{'diff': 6.202699999999922e-05}, {'diff': 6.213899999999578e-05}, {'diff': 6.218000000000196e-05}, {'diff': 6.23750000000034e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.204099999999879e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:24.516" endtime="20201030 11:52:24.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.534" level="INFO">${ACCURACY} = {'diff': [6.202699999999922e-05, 6.213899999999578e-05, 6.218000000000196e-05, 6.23750000000034e-05, 6.201399999999913e-05, 6.204099999999879e-05, 6.194400000000128e-05, 6.240300000000254e-05, 6.20969...</msg>
<status status="PASS" starttime="20201030 11:52:24.527" endtime="20201030 11:52:24.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.546" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.543" endtime="20201030 11:52:24.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.552" level="INFO">VALUE: [6.202699999999922e-05, 6.213899999999578e-05, 6.218000000000196e-05, 6.23750000000034e-05, 6.201399999999913e-05, 6.204099999999879e-05, 6.194400000000128e-05, 6.240300000000254e-05, 6.209699999999707e-05, 6.20699999999974e-05, 6.244500000000125e-05, 6.247200000000092e-05, 6.180499999999811e-05, 6.176399999999888e-05, 6.237499999999646e-05, 6.2195000000001e-05, 6.251399999999963e-05, 6.179099999999854e-05, 6.166600000000189e-05, 6.163800000000275e-05, 6.227799999999895e-05, 6.220799999999416e-05, 6.254199999999877e-05, 6.211100000000358e-05, 6.25699999999979e-05, 6.184800000000323e-05, 6.201300000000659e-05, 6.248600000000049e-05, 6.199999999999956e-05, 6.250000000000006e-05, 6.163900000000222e-05, 6.17499999999993e-05, 6.165300000000179e-05, 6.179200000000495e-05, 6.236099999999689e-05, 6.220900000000057e-05, 6.22080000000011e-05, 6.168100000000093e-05, 6.244400000000178e-05, 6.18750000000029e-05, 6.234700000000426e-05, 6.252800000000613e-05, 6.177800000000538e-05, 6.222300000000014e-05, 6.158399999999647e-05, 6.175000000000624e-05, 6.25550000000058e-05, 6.183300000000419e-05, 6.186100000000333e-05, 6.243100000000168e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.548" endtime="20201030 11:52:24.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.536" endtime="20201030 11:52:24.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.565" endtime="20201030 11:52:24.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.560" endtime="20201030 11:52:24.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.558" endtime="20201030 11:52:24.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.065" endtime="20201030 11:52:24.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.063" endtime="20201030 11:52:24.590"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.613" endtime="20201030 11:52:24.632"></status>
</kw>
<msg timestamp="20201030 11:52:24.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.610" endtime="20201030 11:52:24.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.636" endtime="20201030 11:52:24.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.642" endtime="20201030 11:52:24.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.602" endtime="20201030 11:52:24.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.597" endtime="20201030 11:52:24.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.665" endtime="20201030 11:52:25.006"></status>
</kw>
<msg timestamp="20201030 11:52:25.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041050167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.662" endtime="20201030 11:52:25.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041050167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041113167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.015" endtime="20201030 11:52:25.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.034" endtime="20201030 11:52:25.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.655" endtime="20201030 11:52:25.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.650" endtime="20201030 11:52:25.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.051" level="INFO">${RESULT} = [{'diff': 6.300000000000056e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.263899999999628e-05}, {'diff': 6.297200000000142e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.27080000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:25.043" endtime="20201030 11:52:25.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.061" level="INFO">${ACCURACY} = {'diff': [6.300000000000056e-05, 6.326400000000038e-05, 6.263899999999628e-05, 6.297200000000142e-05, 6.295800000000185e-05, 6.27080000000016e-05, 6.279099999999954e-05, 6.348600000000149e-05, 6.31939...</msg>
<status status="PASS" starttime="20201030 11:52:25.053" endtime="20201030 11:52:25.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.072" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.069" endtime="20201030 11:52:25.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.077" level="INFO">VALUE: [6.300000000000056e-05, 6.326400000000038e-05, 6.263899999999628e-05, 6.297200000000142e-05, 6.295800000000185e-05, 6.27080000000016e-05, 6.279099999999954e-05, 6.348600000000149e-05, 6.319399999999559e-05, 6.347200000000192e-05, 6.350000000000106e-05, 6.265299999999585e-05, 6.265299999999585e-05, 6.283399999999773e-05, 6.340199999999713e-05, 6.269399999999509e-05, 6.312499999999721e-05, 6.29029999999961e-05, 6.336099999999789e-05, 6.298600000000099e-05, 6.269400000000203e-05, 6.333299999999875e-05, 6.273600000000074e-05, 6.330599999999909e-05, 6.279199999999902e-05, 6.345899999999488e-05, 6.304199999999927e-05, 6.342999999999627e-05, 6.323600000000124e-05, 6.312499999999721e-05, 6.327700000000047e-05, 6.313799999999731e-05, 6.313900000000372e-05, 6.351400000000063e-05, 6.336099999999789e-05, 6.316700000000286e-05, 6.272300000000064e-05, 6.341700000000311e-05, 6.281900000000562e-05, 6.3582999999999e-05, 6.350000000000106e-05, 6.323600000000124e-05, 6.280499999999911e-05, 6.28200000000051e-05, 6.248600000000049e-05, 6.294399999999534e-05, 6.262499999999671e-05, 6.320899999999463e-05, 6.311099999999764e-05, 6.279199999999902e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.074" endtime="20201030 11:52:25.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.063" endtime="20201030 11:52:25.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.091" endtime="20201030 11:52:25.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.085" endtime="20201030 11:52:25.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.083" endtime="20201030 11:52:25.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.592" endtime="20201030 11:52:25.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.591" endtime="20201030 11:52:25.116"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.139" endtime="20201030 11:52:25.157"></status>
</kw>
<msg timestamp="20201030 11:52:25.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.136" endtime="20201030 11:52:25.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.160" endtime="20201030 11:52:25.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.167" endtime="20201030 11:52:25.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.129" endtime="20201030 11:52:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.123" endtime="20201030 11:52:25.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.190" endtime="20201030 11:52:25.530"></status>
</kw>
<msg timestamp="20201030 11:52:25.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039755208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.187" endtime="20201030 11:52:25.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039755208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039819444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.539" endtime="20201030 11:52:25.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.558" endtime="20201030 11:52:25.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.180" endtime="20201030 11:52:25.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.175" endtime="20201030 11:52:25.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.575" level="INFO">${RESULT} = [{'diff': 6.423600000000224e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.434699999999932e-05}, {'diff': 6.411100000000558e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.443099999999674e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:25.566" endtime="20201030 11:52:25.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.586" level="INFO">${ACCURACY} = {'diff': [6.423600000000224e-05, 6.379200000000002e-05, 6.434699999999932e-05, 6.411100000000558e-05, 6.409699999999907e-05, 6.443099999999674e-05, 6.451399999999469e-05, 6.377800000000045e-05, 6.4250...</msg>
<status status="PASS" starttime="20201030 11:52:25.577" endtime="20201030 11:52:25.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.598" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.595" endtime="20201030 11:52:25.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.604" level="INFO">VALUE: [6.423600000000224e-05, 6.379200000000002e-05, 6.434699999999932e-05, 6.411100000000558e-05, 6.409699999999907e-05, 6.443099999999674e-05, 6.451399999999469e-05, 6.377800000000045e-05, 6.42500000000018e-05, 6.434699999999932e-05, 6.380599999999959e-05, 6.4277999999994e-05, 6.413900000000472e-05, 6.384699999999882e-05, 6.427699999999453e-05, 6.388900000000447e-05, 6.434699999999932e-05, 6.40699999999994e-05, 6.443099999999674e-05, 6.451400000000163e-05, 6.393099999999624e-05, 6.43479999999988e-05, 6.355599999999934e-05, 6.36950000000025e-05, 6.394500000000275e-05, 6.363899999999728e-05, 6.443100000000368e-05, 6.430600000000009e-05, 6.36950000000025e-05, 6.381899999999968e-05, 6.404200000000027e-05, 6.450000000000206e-05, 6.384699999999882e-05, 6.406899999999993e-05, 6.411099999999864e-05, 6.416599999999745e-05, 6.401400000000113e-05, 6.363799999999781e-05, 6.42630000000019e-05, 6.429100000000104e-05, 6.359800000000498e-05, 6.388900000000447e-05, 6.362500000000465e-05, 6.37630000000014e-05, 6.372200000000217e-05, 6.395899999999538e-05, 6.418100000000343e-05, 6.366700000000336e-05, 6.358399999999848e-05, 6.437499999999846e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.600" endtime="20201030 11:52:25.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.588" endtime="20201030 11:52:25.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.628" endtime="20201030 11:52:25.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.623" endtime="20201030 11:52:25.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.621" endtime="20201030 11:52:25.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.119" endtime="20201030 11:52:25.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.117" endtime="20201030 11:52:25.653"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.676" endtime="20201030 11:52:25.694"></status>
</kw>
<msg timestamp="20201030 11:52:25.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.672" endtime="20201030 11:52:25.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.697" endtime="20201030 11:52:25.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.703" endtime="20201030 11:52:25.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.665" endtime="20201030 11:52:25.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.659" endtime="20201030 11:52:25.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.727" endtime="20201030 11:52:26.069"></status>
</kw>
<msg timestamp="20201030 11:52:26.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.723" endtime="20201030 11:52:26.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.078" endtime="20201030 11:52:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.097" endtime="20201030 11:52:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.716" endtime="20201030 11:52:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.711" endtime="20201030 11:52:26.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.114" level="INFO">${RESULT} = [{'diff': 6.552700000000272e-05}, {'diff': 6.479100000000154e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.491700000000461e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.497300000000289e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:26.105" endtime="20201030 11:52:26.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:26.125" level="INFO">${ACCURACY} = {'diff': [6.552700000000272e-05, 6.479100000000154e-05, 6.462499999999871e-05, 6.491700000000461e-05, 6.484699999999982e-05, 6.497300000000289e-05, 6.524999999999587e-05, 6.518099999999749e-05, 6.5292...</msg>
<status status="PASS" starttime="20201030 11:52:26.116" endtime="20201030 11:52:26.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.136" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:52:26.134" endtime="20201030 11:52:26.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.142" level="INFO">VALUE: [6.552700000000272e-05, 6.479100000000154e-05, 6.462499999999871e-05, 6.491700000000461e-05, 6.484699999999982e-05, 6.497300000000289e-05, 6.524999999999587e-05, 6.518099999999749e-05, 6.529200000000152e-05, 6.545799999999741e-05, 6.536099999999989e-05, 6.540300000000554e-05, 6.517999999999802e-05, 6.50830000000005e-05, 6.455500000000086e-05, 6.549999999999612e-05, 6.508399999999998e-05, 6.54159999999987e-05, 6.501399999999519e-05, 6.509700000000007e-05, 6.468000000000446e-05, 6.549999999999612e-05, 6.511099999999964e-05, 6.493099999999724e-05, 6.511199999999912e-05, 6.542999999999827e-05, 6.461099999999914e-05, 6.550000000000306e-05, 6.50830000000005e-05, 6.462499999999871e-05, 6.540300000000554e-05, 6.480499999999417e-05, 6.511099999999964e-05, 6.481900000000068e-05, 6.495800000000385e-05, 6.52500000000028e-05, 6.472200000000317e-05, 6.501400000000213e-05, 6.512499999999921e-05, 6.50280000000017e-05, 6.538899999999903e-05, 6.47359999999958e-05, 6.54029999999986e-05, 6.476400000000188e-05, 6.463899999999828e-05, 6.543099999999774e-05, 6.548599999999655e-05, 6.518099999999749e-05, 6.456900000000043e-05, 6.545899999999688e-05]</msg>
<status status="PASS" starttime="20201030 11:52:26.138" endtime="20201030 11:52:26.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.127" endtime="20201030 11:52:26.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.154" endtime="20201030 11:52:26.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.150" endtime="20201030 11:52:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.147" endtime="20201030 11:52:26.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.655" endtime="20201030 11:52:26.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.654" endtime="20201030 11:52:26.179"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.202" endtime="20201030 11:52:26.220"></status>
</kw>
<msg timestamp="20201030 11:52:26.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.199" endtime="20201030 11:52:26.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.223" endtime="20201030 11:52:26.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.229" endtime="20201030 11:52:26.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.191" endtime="20201030 11:52:26.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.186" endtime="20201030 11:52:26.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.253" endtime="20201030 11:52:26.597"></status>
</kw>
<msg timestamp="20201030 11:52:26.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039488542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.249" endtime="20201030 11:52:26.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039488542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039554222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.607" endtime="20201030 11:52:26.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.626" endtime="20201030 11:52:26.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.242" endtime="20201030 11:52:26.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.237" endtime="20201030 11:52:26.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.644" level="INFO">${RESULT} = [{'diff': 6.567999999999852e-05}, {'diff': 6.648599999999755e-05}, {'diff': 6.573600000000374e-05}, {'diff': 6.60830000000015e-05}, {'diff': 6.616699999999892e-05}, {'diff': 6.644499999999831e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:26.635" endtime="20201030 11:52:26.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:26.653" level="INFO">${ACCURACY} = {'diff': [6.567999999999852e-05, 6.648599999999755e-05, 6.573600000000374e-05, 6.60830000000015e-05, 6.616699999999892e-05, 6.644499999999831e-05, 6.626299999999696e-05, 6.647199999999798e-05, 6.57779...</msg>
<status status="PASS" starttime="20201030 11:52:26.646" endtime="20201030 11:52:26.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.664" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:52:26.662" endtime="20201030 11:52:26.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.670" level="INFO">VALUE: [6.567999999999852e-05, 6.648599999999755e-05, 6.573600000000374e-05, 6.60830000000015e-05, 6.616699999999892e-05, 6.644499999999831e-05, 6.626299999999696e-05, 6.647199999999798e-05, 6.57779999999955e-05, 6.568099999999799e-05, 6.62359999999973e-05, 6.648599999999755e-05, 6.64029999999996e-05, 6.652700000000372e-05, 6.620799999999816e-05, 6.569399999999809e-05, 6.588899999999953e-05, 6.627800000000295e-05, 6.592999999999877e-05, 6.602799999999576e-05, 6.586100000000039e-05, 6.570799999999766e-05, 6.576399999999594e-05, 6.634700000000132e-05, 6.57779999999955e-05, 6.611100000000064e-05, 6.606899999999499e-05, 6.641699999999917e-05, 6.62500000000038e-05, 6.601399999999619e-05, 6.576399999999594e-05, 6.622199999999773e-05, 6.55700000000009e-05, 6.644399999999884e-05, 6.583300000000125e-05, 6.584700000000082e-05, 6.584700000000082e-05, 6.615299999999935e-05, 6.587499999999996e-05, 6.624999999999687e-05, 6.588900000000647e-05, 6.637500000000046e-05, 6.659700000000157e-05, 6.605600000000184e-05, 6.559800000000005e-05, 6.636100000000089e-05, 6.634699999999438e-05, 6.588899999999953e-05, 6.616700000000586e-05, 6.626400000000338e-05]</msg>
<status status="PASS" starttime="20201030 11:52:26.667" endtime="20201030 11:52:26.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.655" endtime="20201030 11:52:26.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.682" endtime="20201030 11:52:26.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.678" endtime="20201030 11:52:26.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.675" endtime="20201030 11:52:26.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.181" endtime="20201030 11:52:26.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.180" endtime="20201030 11:52:26.707"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.730" endtime="20201030 11:52:26.750"></status>
</kw>
<msg timestamp="20201030 11:52:26.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.727" endtime="20201030 11:52:26.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.753" endtime="20201030 11:52:26.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.759" endtime="20201030 11:52:26.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.720" endtime="20201030 11:52:26.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.714" endtime="20201030 11:52:26.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.783" endtime="20201030 11:52:27.127"></status>
</kw>
<msg timestamp="20201030 11:52:27.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040965806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.779" endtime="20201030 11:52:27.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040965806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.137" endtime="20201030 11:52:27.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.155" endtime="20201030 11:52:27.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.772" endtime="20201030 11:52:27.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.767" endtime="20201030 11:52:27.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.172" level="INFO">${RESULT} = [{'diff': 6.727799999999701e-05}, {'diff': 6.75280000000042e-05}, {'diff': 6.756899999999649e-05}, {'diff': 6.734700000000232e-05}, {'diff': 6.690200000000063e-05}, {'diff': 6.749999999999812e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:27.164" endtime="20201030 11:52:27.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.182" level="INFO">${ACCURACY} = {'diff': [6.727799999999701e-05, 6.75280000000042e-05, 6.756899999999649e-05, 6.734700000000232e-05, 6.690200000000063e-05, 6.749999999999812e-05, 6.70979999999946e-05, 6.69030000000001e-05, 6.6929999...</msg>
<status status="PASS" starttime="20201030 11:52:27.174" endtime="20201030 11:52:27.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.193" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.190" endtime="20201030 11:52:27.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.198" level="INFO">VALUE: [6.727799999999701e-05, 6.75280000000042e-05, 6.756899999999649e-05, 6.734700000000232e-05, 6.690200000000063e-05, 6.749999999999812e-05, 6.70979999999946e-05, 6.69030000000001e-05, 6.692999999999977e-05, 6.718100000000643e-05, 6.706999999999547e-05, 6.733400000000223e-05, 6.662499999999377e-05, 6.70700000000024e-05, 6.708400000000198e-05, 6.737500000000146e-05, 6.748599999999855e-05, 6.69160000000002e-05, 6.72359999999983e-05, 6.754099999999735e-05, 6.722199999999873e-05, 6.681900000000268e-05, 6.681900000000268e-05, 6.709699999999513e-05, 6.730500000000361e-05, 6.66950000000055e-05, 6.748599999999855e-05, 6.665299999999985e-05, 6.669400000000603e-05, 6.74160000000007e-05, 6.724999999999787e-05, 6.697199999999848e-05, 6.74030000000006e-05, 6.661100000000114e-05, 6.665299999999985e-05, 6.751400000000463e-05, 6.694399999999934e-05, 6.729199999999658e-05, 6.663900000000028e-05, 6.715300000000035e-05, 6.744499999999931e-05, 6.694399999999934e-05, 6.681900000000268e-05, 6.732000000000266e-05, 6.712500000000121e-05, 6.704099999999685e-05, 6.672199999999823e-05, 6.655499999999592e-05, 6.69160000000002e-05, 6.674999999999737e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.195" endtime="20201030 11:52:27.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.184" endtime="20201030 11:52:27.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.212" endtime="20201030 11:52:27.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.206" endtime="20201030 11:52:27.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.204" endtime="20201030 11:52:27.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.710" endtime="20201030 11:52:27.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.708" endtime="20201030 11:52:27.237"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.260" endtime="20201030 11:52:27.280"></status>
</kw>
<msg timestamp="20201030 11:52:27.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.257" endtime="20201030 11:52:27.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.283" endtime="20201030 11:52:27.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.289" endtime="20201030 11:52:27.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.250" endtime="20201030 11:52:27.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.244" endtime="20201030 11:52:27.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.312" endtime="20201030 11:52:27.666"></status>
</kw>
<msg timestamp="20201030 11:52:27.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039854653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.309" endtime="20201030 11:52:27.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039854653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039922806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.676" endtime="20201030 11:52:27.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.695" endtime="20201030 11:52:27.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.302" endtime="20201030 11:52:27.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.297" endtime="20201030 11:52:27.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.712" level="INFO">${RESULT} = [{'diff': 6.815300000000135e-05}, {'diff': 6.759800000000205e-05}, {'diff': 6.854099999999835e-05}, {'diff': 6.770899999999913e-05}, {'diff': 6.836199999999543e-05}, {'diff': 6.843000000000127e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:27.703" endtime="20201030 11:52:27.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.727" level="INFO">${ACCURACY} = {'diff': [6.815300000000135e-05, 6.759800000000205e-05, 6.854099999999835e-05, 6.770899999999913e-05, 6.836199999999543e-05, 6.843000000000127e-05, 6.798599999999905e-05, 6.759699999999563e-05, 6.8458...</msg>
<status status="PASS" starttime="20201030 11:52:27.714" endtime="20201030 11:52:27.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.737" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.735" endtime="20201030 11:52:27.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.743" level="INFO">VALUE: [6.815300000000135e-05, 6.759800000000205e-05, 6.854099999999835e-05, 6.770899999999913e-05, 6.836199999999543e-05, 6.843000000000127e-05, 6.798599999999905e-05, 6.759699999999563e-05, 6.845800000000041e-05, 6.801399999999819e-05, 6.833299999999681e-05, 6.82909999999981e-05, 6.848599999999955e-05, 6.852799999999826e-05, 6.845899999999988e-05, 6.794499999999981e-05, 6.77909999999976e-05, 6.837500000000246e-05, 6.836100000000289e-05, 6.827799999999801e-05, 6.833400000000323e-05, 6.804200000000427e-05, 6.794499999999981e-05, 6.799999999999862e-05, 6.774999999999837e-05, 6.843100000000074e-05, 6.804199999999733e-05, 6.822199999999973e-05, 6.843100000000074e-05, 6.780599999999665e-05, 6.80280000000047e-05, 6.761100000000214e-05, 6.820800000000016e-05, 6.759700000000257e-05, 6.802699999999828e-05, 6.843000000000127e-05, 6.829199999999758e-05, 6.830599999999715e-05, 6.845800000000041e-05, 6.824999999999887e-05, 6.779200000000402e-05, 6.786100000000239e-05, 6.848599999999955e-05, 6.769499999999956e-05, 6.768000000000052e-05, 6.78480000000023e-05, 6.799999999999862e-05, 6.77359999999988e-05, 6.763900000000128e-05, 6.784799999999536e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.740" endtime="20201030 11:52:27.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.728" endtime="20201030 11:52:27.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.755" endtime="20201030 11:52:27.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.751" endtime="20201030 11:52:27.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.749" endtime="20201030 11:52:27.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.240" endtime="20201030 11:52:27.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.238" endtime="20201030 11:52:27.781"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.803" endtime="20201030 11:52:27.821"></status>
</kw>
<msg timestamp="20201030 11:52:27.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.800" endtime="20201030 11:52:27.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.825" endtime="20201030 11:52:27.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.831" endtime="20201030 11:52:27.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.793" endtime="20201030 11:52:27.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.787" endtime="20201030 11:52:27.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.854" endtime="20201030 11:52:28.195"></status>
</kw>
<msg timestamp="20201030 11:52:28.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039463819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.851" endtime="20201030 11:52:28.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039395208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039463819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.205" endtime="20201030 11:52:28.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.223" endtime="20201030 11:52:28.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.844" endtime="20201030 11:52:28.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.839" endtime="20201030 11:52:28.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.240" level="INFO">${RESULT} = [{'diff': 6.86109999999962e-05}, {'diff': 6.887500000000296e-05}, {'diff': 6.917999999999508e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.881899999999774e-05}, {'diff': 6.905600000000484e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:28.232" endtime="20201030 11:52:28.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.251" level="INFO">${ACCURACY} = {'diff': [6.86109999999962e-05, 6.887500000000296e-05, 6.917999999999508e-05, 6.898600000000005e-05, 6.881899999999774e-05, 6.905600000000484e-05, 6.95559999999984e-05, 6.891699999999473e-05, 6.876399...</msg>
<status status="PASS" starttime="20201030 11:52:28.242" endtime="20201030 11:52:28.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.263" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.260" endtime="20201030 11:52:28.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.268" level="INFO">VALUE: [6.86109999999962e-05, 6.887500000000296e-05, 6.917999999999508e-05, 6.898600000000005e-05, 6.881899999999774e-05, 6.905600000000484e-05, 6.95559999999984e-05, 6.891699999999473e-05, 6.876399999999894e-05, 6.924999999999987e-05, 6.951300000000021e-05, 6.865200000000238e-05, 6.945900000000088e-05, 6.922200000000073e-05, 6.94309999999948e-05, 6.894400000000134e-05, 6.952799999999926e-05, 6.897200000000048e-05, 6.94309999999948e-05, 6.902799999999876e-05, 6.913799999999637e-05, 6.908299999999756e-05, 6.880499999999817e-05, 6.858400000000348e-05, 6.883399999999679e-05, 6.862499999999577e-05, 6.890199999999569e-05, 6.89439999999944e-05, 6.89030000000021e-05, 6.887500000000296e-05, 6.897299999999995e-05, 6.895800000000091e-05, 6.938899999999609e-05, 6.943100000000174e-05, 6.906899999999799e-05, 6.863799999999587e-05, 6.940200000000313e-05, 6.862499999999577e-05, 6.877799999999851e-05, 6.920799999999422e-05, 6.877799999999851e-05, 6.868100000000099e-05, 6.90979999999966e-05, 6.955499999999892e-05, 6.940200000000313e-05, 6.886100000000339e-05, 6.874999999999937e-05, 6.926399999999944e-05, 6.936200000000337e-05, 6.874999999999937e-05]</msg>
<status status="PASS" starttime="20201030 11:52:28.265" endtime="20201030 11:52:28.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.253" endtime="20201030 11:52:28.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.281" endtime="20201030 11:52:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.276" endtime="20201030 11:52:28.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.274" endtime="20201030 11:52:28.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.783" endtime="20201030 11:52:28.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.782" endtime="20201030 11:52:28.306"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.328" endtime="20201030 11:52:28.346"></status>
</kw>
<msg timestamp="20201030 11:52:28.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.325" endtime="20201030 11:52:28.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.350" endtime="20201030 11:52:28.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.356" endtime="20201030 11:52:28.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.318" endtime="20201030 11:52:28.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.312" endtime="20201030 11:52:28.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.380" endtime="20201030 11:52:28.725"></status>
</kw>
<msg timestamp="20201030 11:52:28.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039493569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.376" endtime="20201030 11:52:28.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039493569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.734" endtime="20201030 11:52:28.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.753" endtime="20201030 11:52:28.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.369" endtime="20201030 11:52:28.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.364" endtime="20201030 11:52:28.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.770" level="INFO">${RESULT} = [{'diff': 6.979199999999908e-05}, {'diff': 6.966700000000242e-05}, {'diff': 6.998600000000105e-05}, {'diff': 6.967999999999558e-05}, {'diff': 7.013899999999684e-05}, {'diff': 7.050000000000112e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:28.762" endtime="20201030 11:52:28.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.780" level="INFO">${ACCURACY} = {'diff': [6.979199999999908e-05, 6.966700000000242e-05, 6.998600000000105e-05, 6.967999999999558e-05, 7.013899999999684e-05, 7.050000000000112e-05, 6.973599999999386e-05, 6.984799999999736e-05, 7.0514...</msg>
<status status="PASS" starttime="20201030 11:52:28.772" endtime="20201030 11:52:28.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.791" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.788" endtime="20201030 11:52:28.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.796" level="INFO">VALUE: [6.979199999999908e-05, 6.966700000000242e-05, 6.998600000000105e-05, 6.967999999999558e-05, 7.013899999999684e-05, 7.050000000000112e-05, 6.973599999999386e-05, 6.984799999999736e-05, 7.051400000000069e-05, 7.029199999999958e-05, 7.031999999999872e-05, 6.992999999999583e-05, 7.047200000000198e-05, 6.99030000000031e-05, 6.954199999999883e-05, 7.036199999999743e-05, 7.005499999999942e-05, 7.047199999999504e-05, 6.959699999999763e-05, 7.030599999999915e-05, 7.026400000000044e-05, 7.00830000000055e-05, 7.034699999999838e-05, 7.012500000000421e-05, 6.998600000000105e-05, 7.025000000000087e-05, 7.030499999999967e-05, 7.036200000000437e-05, 7.001400000000019e-05, 7.008299999999856e-05, 6.990299999999616e-05, 6.994500000000181e-05, 7.051400000000069e-05, 7.030599999999915e-05, 7.029199999999958e-05, 7.054199999999983e-05, 7.030500000000661e-05, 6.981999999999822e-05, 7.016700000000292e-05, 7.047199999999504e-05, 6.965299999999591e-05, 6.983299999999831e-05, 7.038899999999709e-05, 7.04309999999958e-05, 7.052700000000078e-05, 7.045900000000188e-05, 7.054100000000035e-05, 7.041700000000317e-05, 6.998600000000105e-05, 6.976300000000046e-05]</msg>
<status status="PASS" starttime="20201030 11:52:28.793" endtime="20201030 11:52:28.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.782" endtime="20201030 11:52:28.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.809" endtime="20201030 11:52:28.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.804" endtime="20201030 11:52:28.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.802" endtime="20201030 11:52:28.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.308" endtime="20201030 11:52:28.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.307" endtime="20201030 11:52:28.834"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.856" endtime="20201030 11:52:28.876"></status>
</kw>
<msg timestamp="20201030 11:52:28.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.853" endtime="20201030 11:52:28.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.880" endtime="20201030 11:52:28.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.886" endtime="20201030 11:52:28.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.846" endtime="20201030 11:52:28.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.840" endtime="20201030 11:52:28.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.909" endtime="20201030 11:52:29.251"></status>
</kw>
<msg timestamp="20201030 11:52:29.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041106722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.906" endtime="20201030 11:52:29.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041106722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.261" endtime="20201030 11:52:29.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.279" endtime="20201030 11:52:29.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.899" endtime="20201030 11:52:29.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.894" endtime="20201030 11:52:29.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.296" level="INFO">${RESULT} = [{'diff': 7.122200000000273e-05}, {'diff': 7.148600000000255e-05}, {'diff': 7.077800000000051e-05}, {'diff': 7.088899999999759e-05}, {'diff': 7.11109999999987e-05}, {'diff': 7.116699999999698e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:29.288" endtime="20201030 11:52:29.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.306" level="INFO">${ACCURACY} = {'diff': [7.122200000000273e-05, 7.148600000000255e-05, 7.077800000000051e-05, 7.088899999999759e-05, 7.11109999999987e-05, 7.116699999999698e-05, 7.102800000000076e-05, 7.094500000000281e-05, 7.11109...</msg>
<status status="PASS" starttime="20201030 11:52:29.299" endtime="20201030 11:52:29.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.317" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.315" endtime="20201030 11:52:29.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.322" level="INFO">VALUE: [7.122200000000273e-05, 7.148600000000255e-05, 7.077800000000051e-05, 7.088899999999759e-05, 7.11109999999987e-05, 7.116699999999698e-05, 7.102800000000076e-05, 7.094500000000281e-05, 7.11109999999987e-05, 7.129200000000058e-05, 7.148600000000255e-05, 7.140199999999819e-05, 7.138900000000503e-05, 7.129200000000058e-05, 7.066699999999648e-05, 7.077800000000051e-05, 7.116699999999698e-05, 7.150000000000212e-05, 7.115299999999741e-05, 7.118000000000402e-05, 7.140299999999766e-05, 7.094500000000281e-05, 7.120800000000316e-05, 7.065199999999744e-05, 7.151399999999475e-05, 7.127800000000101e-05, 7.122200000000273e-05, 7.06109999999982e-05, 7.070799999999572e-05, 7.154200000000083e-05, 7.151300000000221e-05, 7.069500000000256e-05, 7.06109999999982e-05, 7.080599999999965e-05, 7.134699999999938e-05, 7.065299999999691e-05, 7.133299999999981e-05, 7.130600000000015e-05, 7.097200000000248e-05, 7.0763999999994e-05, 7.105500000000042e-05, 7.120800000000316e-05, 7.158399999999954e-05, 7.0763999999994e-05, 7.119400000000359e-05, 7.134699999999938e-05, 7.065199999999744e-05, 7.14309999999968e-05, 7.127800000000101e-05, 7.10559999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:52:29.319" endtime="20201030 11:52:29.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.308" endtime="20201030 11:52:29.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.336" endtime="20201030 11:52:29.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.331" endtime="20201030 11:52:29.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.328" endtime="20201030 11:52:29.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.836" endtime="20201030 11:52:29.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.835" endtime="20201030 11:52:29.362"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.384" endtime="20201030 11:52:29.402"></status>
</kw>
<msg timestamp="20201030 11:52:29.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.381" endtime="20201030 11:52:29.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.406" endtime="20201030 11:52:29.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.412" endtime="20201030 11:52:29.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.374" endtime="20201030 11:52:29.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.368" endtime="20201030 11:52:29.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.435" endtime="20201030 11:52:29.779"></status>
</kw>
<msg timestamp="20201030 11:52:29.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039365792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039438014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.432" endtime="20201030 11:52:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039365792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039438014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.788" endtime="20201030 11:52:29.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.807" endtime="20201030 11:52:29.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.425" endtime="20201030 11:52:29.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.420" endtime="20201030 11:52:29.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.824" level="INFO">${RESULT} = [{'diff': 7.222200000000373e-05}, {'diff': 7.197300000000295e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.169499999999662e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.215299999999841e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:29.815" endtime="20201030 11:52:29.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.835" level="INFO">${ACCURACY} = {'diff': [7.222200000000373e-05, 7.197300000000295e-05, 7.237499999999952e-05, 7.169499999999662e-05, 7.236099999999995e-05, 7.215299999999841e-05, 7.183300000000031e-05, 7.162499999999877e-05, 7.1888...</msg>
<status status="PASS" starttime="20201030 11:52:29.826" endtime="20201030 11:52:29.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.846" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.843" endtime="20201030 11:52:29.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.851" level="INFO">VALUE: [7.222200000000373e-05, 7.197300000000295e-05, 7.237499999999952e-05, 7.169499999999662e-05, 7.236099999999995e-05, 7.215299999999841e-05, 7.183300000000031e-05, 7.162499999999877e-05, 7.188899999999859e-05, 7.188899999999859e-05, 7.17910000000016e-05, 7.216699999999798e-05, 7.170900000000313e-05, 7.22360000000033e-05, 7.202799999999482e-05, 7.188899999999859e-05, 7.217999999999808e-05, 7.173599999999586e-05, 7.184799999999936e-05, 7.191699999999773e-05, 7.251300000000321e-05, 7.21109999999997e-05, 7.176400000000194e-05, 7.222199999999679e-05, 7.218100000000449e-05, 7.205500000000142e-05, 7.219399999999765e-05, 7.180599999999371e-05, 7.237499999999952e-05, 7.21109999999997e-05, 7.24309999999978e-05, 7.212499999999927e-05, 7.177800000000151e-05, 7.22360000000033e-05, 7.25560000000014e-05, 7.258400000000054e-05, 7.194400000000434e-05, 7.16109999999992e-05, 7.237499999999952e-05, 7.17910000000016e-05, 7.195799999999697e-05, 7.183399999999979e-05, 7.19439999999974e-05, 7.258300000000106e-05, 7.200000000000262e-05, 7.216599999999851e-05, 7.233400000000029e-05, 7.236199999999943e-05, 7.175000000000237e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201030 11:52:29.848" endtime="20201030 11:52:29.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.837" endtime="20201030 11:52:29.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.864" endtime="20201030 11:52:29.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.859" endtime="20201030 11:52:29.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.857" endtime="20201030 11:52:29.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.364" endtime="20201030 11:52:29.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.362" endtime="20201030 11:52:29.889"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.911" endtime="20201030 11:52:29.930"></status>
</kw>
<msg timestamp="20201030 11:52:29.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.908" endtime="20201030 11:52:29.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.933" endtime="20201030 11:52:29.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.939" endtime="20201030 11:52:29.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.901" endtime="20201030 11:52:29.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.895" endtime="20201030 11:52:29.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.963" endtime="20201030 11:52:30.307"></status>
</kw>
<msg timestamp="20201030 11:52:30.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039427486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.959" endtime="20201030 11:52:30.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039427486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039500778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.317" endtime="20201030 11:52:30.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.335" endtime="20201030 11:52:30.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.952" endtime="20201030 11:52:30.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.947" endtime="20201030 11:52:30.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.352" level="INFO">${RESULT} = [{'diff': 7.329200000000258e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.334800000000086e-05}, {'diff': 7.283400000000079e-05}, {'diff': 7.352700000000378e-05}, {'diff': 7.340200000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:30.343" endtime="20201030 11:52:30.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.363" level="INFO">${ACCURACY} = {'diff': [7.329200000000258e-05, 7.268099999999805e-05, 7.334800000000086e-05, 7.283400000000079e-05, 7.352700000000378e-05, 7.340200000000019e-05, 7.268099999999805e-05, 7.304200000000233e-05, 7.2722...</msg>
<status status="PASS" starttime="20201030 11:52:30.354" endtime="20201030 11:52:30.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.374" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.372" endtime="20201030 11:52:30.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.379" level="INFO">VALUE: [7.329200000000258e-05, 7.268099999999805e-05, 7.334800000000086e-05, 7.283400000000079e-05, 7.352700000000378e-05, 7.340200000000019e-05, 7.268099999999805e-05, 7.304200000000233e-05, 7.272299999999676e-05, 7.348700000000402e-05, 7.316699999999898e-05, 7.323599999999736e-05, 7.27360000000038e-05, 7.32639999999965e-05, 7.28189999999948e-05, 7.286100000000045e-05, 7.337500000000052e-05, 7.332000000000172e-05, 7.270799999999772e-05, 7.283299999999437e-05, 7.329199999999564e-05, 7.301400000000319e-05, 7.352800000000326e-05, 7.312500000000027e-05, 7.349999999999718e-05, 7.312500000000027e-05, 7.34439999999989e-05, 7.307000000000147e-05, 7.351399999999675e-05, 7.34439999999989e-05, 7.280600000000165e-05, 7.329200000000258e-05, 7.30560000000019e-05, 7.350000000000412e-05, 7.347200000000498e-05, 7.340299999999966e-05, 7.32769999999966e-05, 7.32769999999966e-05, 7.266599999999901e-05, 7.333299999999487e-05, 7.298600000000405e-05, 7.288800000000012e-05, 7.32230000000042e-05, 7.337500000000052e-05, 7.336200000000043e-05, 7.340299999999966e-05, 7.291700000000567e-05, 7.319499999999812e-05, 7.287500000000002e-05, 7.294499999999787e-05]</msg>
<status status="PASS" starttime="20201030 11:52:30.376" endtime="20201030 11:52:30.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.365" endtime="20201030 11:52:30.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.392" endtime="20201030 11:52:30.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.387" endtime="20201030 11:52:30.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.385" endtime="20201030 11:52:30.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.891" endtime="20201030 11:52:30.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.890" endtime="20201030 11:52:30.417"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.439" endtime="20201030 11:52:30.457"></status>
</kw>
<msg timestamp="20201030 11:52:30.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.436" endtime="20201030 11:52:30.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.460" endtime="20201030 11:52:30.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.467" endtime="20201030 11:52:30.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.429" endtime="20201030 11:52:30.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.423" endtime="20201030 11:52:30.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.490" endtime="20201030 11:52:30.836"></status>
</kw>
<msg timestamp="20201030 11:52:30.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039133722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.486" endtime="20201030 11:52:30.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039059583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039133722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.845" endtime="20201030 11:52:30.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.864" endtime="20201030 11:52:30.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.479" endtime="20201030 11:52:30.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.475" endtime="20201030 11:52:30.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.882" level="INFO">${RESULT} = [{'diff': 7.413900000000084e-05}, {'diff': 7.415300000000041e-05}, {'diff': 7.436099999999501e-05}, {'diff': 7.430600000000315e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.361099999999426e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:30.873" endtime="20201030 11:52:30.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.891" level="INFO">${ACCURACY} = {'diff': [7.413900000000084e-05, 7.415300000000041e-05, 7.436099999999501e-05, 7.430600000000315e-05, 7.390300000000016e-05, 7.361099999999426e-05, 7.440299999999372e-05, 7.430499999999673e-05, 7.4570...</msg>
<status status="PASS" starttime="20201030 11:52:30.884" endtime="20201030 11:52:30.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.903" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.900" endtime="20201030 11:52:30.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.908" level="INFO">VALUE: [7.413900000000084e-05, 7.415300000000041e-05, 7.436099999999501e-05, 7.430600000000315e-05, 7.390300000000016e-05, 7.361099999999426e-05, 7.440299999999372e-05, 7.430499999999673e-05, 7.457000000000297e-05, 7.450000000000512e-05, 7.391699999999973e-05, 7.400000000000462e-05, 7.395799999999897e-05, 7.379099999999666e-05, 7.380499999999623e-05, 7.422199999999879e-05, 7.379200000000308e-05, 7.425000000000487e-05, 7.376400000000394e-05, 7.441600000000076e-05, 7.358400000000154e-05, 7.449999999999818e-05, 7.419399999999965e-05, 7.398600000000505e-05, 7.398599999999811e-05, 7.386100000000145e-05, 7.400000000000462e-05, 7.386200000000093e-05, 7.381900000000274e-05, 7.440300000000066e-05, 7.448599999999861e-05, 7.37230000000047e-05, 7.381900000000274e-05, 7.3763999999997e-05, 7.380600000000265e-05, 7.418099999999955e-05, 7.40560000000029e-05, 7.388900000000059e-05, 7.370899999999819e-05, 7.361200000000068e-05, 7.39439999999994e-05, 7.384700000000188e-05, 7.449999999999818e-05, 7.401399999999725e-05, 7.383300000000231e-05, 7.422199999999879e-05, 7.412500000000127e-05, 7.418099999999955e-05, 7.37360000000048e-05, 7.437500000000152e-05]</msg>
<status status="PASS" starttime="20201030 11:52:30.905" endtime="20201030 11:52:30.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.893" endtime="20201030 11:52:30.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.926" endtime="20201030 11:52:30.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.922" endtime="20201030 11:52:30.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.919" endtime="20201030 11:52:30.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.419" endtime="20201030 11:52:30.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.417" endtime="20201030 11:52:30.951"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.974" endtime="20201030 11:52:30.996"></status>
</kw>
<msg timestamp="20201030 11:52:30.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.971" endtime="20201030 11:52:30.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.000" endtime="20201030 11:52:31.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.006" endtime="20201030 11:52:31.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.964" endtime="20201030 11:52:31.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.958" endtime="20201030 11:52:31.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.030" endtime="20201030 11:52:31.382"></status>
</kw>
<msg timestamp="20201030 11:52:31.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041725403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041800139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.027" endtime="20201030 11:52:31.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041725403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041800139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.391" endtime="20201030 11:52:31.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.410" endtime="20201030 11:52:31.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.019" endtime="20201030 11:52:31.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.015" endtime="20201030 11:52:31.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:31.428" level="INFO">${RESULT} = [{'diff': 7.473599999999886e-05}, {'diff': 7.51110000000027e-05}, {'diff': 7.524999999999893e-05}, {'diff': 7.50560000000039e-05}, {'diff': 7.536100000000295e-05}, {'diff': 7.529199999999764e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:31.419" endtime="20201030 11:52:31.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:31.437" level="INFO">${ACCURACY} = {'diff': [7.473599999999886e-05, 7.51110000000027e-05, 7.524999999999893e-05, 7.50560000000039e-05, 7.536100000000295e-05, 7.529199999999764e-05, 7.533399999999635e-05, 7.536199999999549e-05, 7.549999...</msg>
<status status="PASS" starttime="20201030 11:52:31.430" endtime="20201030 11:52:31.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.449" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:52:31.446" endtime="20201030 11:52:31.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.454" level="INFO">VALUE: [7.473599999999886e-05, 7.51110000000027e-05, 7.524999999999893e-05, 7.50560000000039e-05, 7.536100000000295e-05, 7.529199999999764e-05, 7.533399999999635e-05, 7.536199999999549e-05, 7.549999999999918e-05, 7.541600000000176e-05, 7.51110000000027e-05, 7.551399999999875e-05, 7.458300000000306e-05, 7.512500000000227e-05, 7.4763999999998e-05, 7.494499999999987e-05, 7.549999999999918e-05, 7.459700000000263e-05, 7.502799999999782e-05, 7.4763999999998e-05, 7.530499999999773e-05, 7.466600000000101e-05, 7.552799999999832e-05, 7.484699999999594e-05, 7.470899999999919e-05, 7.481999999999628e-05, 7.545899999999994e-05, 7.49440000000004e-05, 7.470799999999972e-05, 7.53189999999973e-05, 7.548599999999961e-05, 7.495799999999997e-05, 7.487500000000202e-05, 7.45560000000034e-05, 7.504200000000433e-05, 7.547200000000004e-05, 7.530599999999721e-05, 7.520899999999969e-05, 7.486099999999551e-05, 7.462500000000177e-05, 7.495899999999944e-05, 7.532000000000372e-05, 7.488900000000159e-05, 7.54440000000009e-05, 7.511099999999576e-05, 7.555599999999746e-05, 7.463900000000134e-05, 7.479200000000408e-05, 7.493000000000083e-05, 7.462500000000177e-05]</msg>
<status status="PASS" starttime="20201030 11:52:31.451" endtime="20201030 11:52:31.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.439" endtime="20201030 11:52:31.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:31.469" endtime="20201030 11:52:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.463" endtime="20201030 11:52:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.460" endtime="20201030 11:52:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.954" endtime="20201030 11:52:31.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.952" endtime="20201030 11:52:31.494"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.517" endtime="20201030 11:52:31.537"></status>
</kw>
<msg timestamp="20201030 11:52:31.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.514" endtime="20201030 11:52:31.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.541" endtime="20201030 11:52:31.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.547" endtime="20201030 11:52:31.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.506" endtime="20201030 11:52:31.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.501" endtime="20201030 11:52:31.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.571" endtime="20201030 11:52:31.923"></status>
</kw>
<msg timestamp="20201030 11:52:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040109444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.567" endtime="20201030 11:52:31.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040109444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040185917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.932" endtime="20201030 11:52:31.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.951" endtime="20201030 11:52:31.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.560" endtime="20201030 11:52:31.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.555" endtime="20201030 11:52:31.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:31.969" level="INFO">${RESULT} = [{'diff': 7.647300000000051e-05}, {'diff': 7.641600000000276e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.565299999999497e-05}, {'diff': 7.619500000000112e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:31.960" endtime="20201030 11:52:31.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:31.980" level="INFO">${ACCURACY} = {'diff': [7.647300000000051e-05, 7.641600000000276e-05, 7.597200000000054e-05, 7.629199999999864e-05, 7.565299999999497e-05, 7.619500000000112e-05, 7.641600000000276e-05, 7.633399999999735e-05, 7.6430...</msg>
<status status="PASS" starttime="20201030 11:52:31.971" endtime="20201030 11:52:31.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.991" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:52:31.988" endtime="20201030 11:52:31.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.996" level="INFO">VALUE: [7.647300000000051e-05, 7.641600000000276e-05, 7.597200000000054e-05, 7.629199999999864e-05, 7.565299999999497e-05, 7.619500000000112e-05, 7.641600000000276e-05, 7.633399999999735e-05, 7.643000000000233e-05, 7.636100000000395e-05, 7.64440000000019e-05, 7.593000000000183e-05, 7.574999999999943e-05, 7.597200000000054e-05, 7.601400000000619e-05, 7.618099999999461e-05, 7.609799999999667e-05, 7.583399999999685e-05, 7.577800000000551e-05, 7.624999999999993e-05, 7.630499999999873e-05, 7.584699999999694e-05, 7.598600000000011e-05, 7.605499999999848e-05, 7.562500000000277e-05, 7.627799999999907e-05, 7.648700000000008e-05, 7.588899999999565e-05, 7.611099999999676e-05, 7.566700000000148e-05, 7.633399999999735e-05, 7.623600000000036e-05, 7.58890000000026e-05, 7.582000000000422e-05, 7.588799999999618e-05, 7.56110000000032e-05, 7.63890000000031e-05, 7.580599999999771e-05, 7.574999999999943e-05, 7.650000000000018e-05, 7.570800000000072e-05, 7.620800000000122e-05, 7.619500000000112e-05, 7.579200000000508e-05, 7.56389999999954e-05, 7.620800000000122e-05, 7.654199999999889e-05, 7.587499999999608e-05, 7.566700000000148e-05, 7.577799999999857e-05]</msg>
<status status="PASS" starttime="20201030 11:52:31.993" endtime="20201030 11:52:31.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.981" endtime="20201030 11:52:31.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.009" endtime="20201030 11:52:32.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.005" endtime="20201030 11:52:32.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.002" endtime="20201030 11:52:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.496" endtime="20201030 11:52:32.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.495" endtime="20201030 11:52:32.035"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.057" endtime="20201030 11:52:32.078"></status>
</kw>
<msg timestamp="20201030 11:52:32.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.054" endtime="20201030 11:52:32.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.081" endtime="20201030 11:52:32.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.088" endtime="20201030 11:52:32.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.047" endtime="20201030 11:52:32.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.041" endtime="20201030 11:52:32.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.111" endtime="20201030 11:52:32.463"></status>
</kw>
<msg timestamp="20201030 11:52:32.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.108" endtime="20201030 11:52:32.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040264361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040341542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.473" endtime="20201030 11:52:32.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.492" endtime="20201030 11:52:32.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.101" endtime="20201030 11:52:32.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.096" endtime="20201030 11:52:32.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:32.510" level="INFO">${RESULT} = [{'diff': 7.718100000000255e-05}, {'diff': 7.68189999999988e-05}, {'diff': 7.72770000000006e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.680499999999923e-05}, {'diff': 7.686099999999751e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:32.501" endtime="20201030 11:52:32.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:32.521" level="INFO">${ACCURACY} = {'diff': [7.718100000000255e-05, 7.68189999999988e-05, 7.72770000000006e-05, 7.701400000000025e-05, 7.680499999999923e-05, 7.686099999999751e-05, 7.736100000000495e-05, 7.669500000000162e-05, 7.716699...</msg>
<status status="PASS" starttime="20201030 11:52:32.512" endtime="20201030 11:52:32.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.532" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:52:32.530" endtime="20201030 11:52:32.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.538" level="INFO">VALUE: [7.718100000000255e-05, 7.68189999999988e-05, 7.72770000000006e-05, 7.701400000000025e-05, 7.680499999999923e-05, 7.686099999999751e-05, 7.736100000000495e-05, 7.669500000000162e-05, 7.716699999999604e-05, 7.691600000000326e-05, 7.73189999999993e-05, 7.676300000000053e-05, 7.679099999999967e-05, 7.725000000000093e-05, 7.741600000000376e-05, 7.716599999999657e-05, 7.6764e-05, 7.686099999999751e-05, 7.71389999999969e-05, 7.718100000000255e-05, 7.725000000000093e-05, 7.745800000000247e-05, 7.702799999999982e-05, 7.71389999999969e-05, 7.736099999999801e-05, 7.688899999999665e-05, 7.663800000000387e-05, 7.708299999999862e-05, 7.71110000000047e-05, 7.750000000000118e-05, 7.73189999999993e-05, 7.669399999999521e-05, 7.713900000000384e-05, 7.734699999999844e-05, 7.748599999999467e-05, 7.712500000000427e-05, 7.6764e-05, 7.742999999999639e-05, 7.662500000000377e-05, 7.691700000000273e-05, 7.705599999999896e-05, 7.66389999999964e-05, 7.656999999999803e-05, 7.680499999999923e-05, 7.742999999999639e-05, 7.745800000000247e-05, 7.687499999999708e-05, 7.675000000000043e-05, 7.742999999999639e-05, 7.740199999999725e-05]</msg>
<status status="PASS" starttime="20201030 11:52:32.535" endtime="20201030 11:52:32.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.523" endtime="20201030 11:52:32.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.551" endtime="20201030 11:52:32.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.546" endtime="20201030 11:52:32.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.544" endtime="20201030 11:52:32.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.037" endtime="20201030 11:52:32.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.036" endtime="20201030 11:52:32.576"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.599" endtime="20201030 11:52:32.619"></status>
</kw>
<msg timestamp="20201030 11:52:32.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.596" endtime="20201030 11:52:32.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.623" endtime="20201030 11:52:32.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.629" endtime="20201030 11:52:32.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.588" endtime="20201030 11:52:32.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.582" endtime="20201030 11:52:32.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.653" endtime="20201030 11:52:33.011"></status>
</kw>
<msg timestamp="20201030 11:52:33.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040084958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040162694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.649" endtime="20201030 11:52:33.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040084958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040162694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.020" endtime="20201030 11:52:33.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.040" endtime="20201030 11:52:33.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.642" endtime="20201030 11:52:33.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.637" endtime="20201030 11:52:33.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.057" level="INFO">${RESULT} = [{'diff': 7.773600000000186e-05}, {'diff': 7.773600000000186e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.766599999999707e-05}, {'diff': 7.816699999999704e-05}, {'diff': 7.838899999999815e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:33.048" endtime="20201030 11:52:33.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.067" level="INFO">${ACCURACY} = {'diff': [7.773600000000186e-05, 7.773600000000186e-05, 7.854200000000089e-05, 7.766599999999707e-05, 7.816699999999704e-05, 7.838899999999815e-05, 7.786199999999799e-05, 7.843000000000433e-05, 7.8514...</msg>
<status status="PASS" starttime="20201030 11:52:33.059" endtime="20201030 11:52:33.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.078" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.075" endtime="20201030 11:52:33.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.083" level="INFO">VALUE: [7.773600000000186e-05, 7.773600000000186e-05, 7.854200000000089e-05, 7.766599999999707e-05, 7.816699999999704e-05, 7.838899999999815e-05, 7.786199999999799e-05, 7.843000000000433e-05, 7.851400000000175e-05, 7.819399999999671e-05, 7.790299999999722e-05, 7.76519999999975e-05, 7.806900000000006e-05, 7.840299999999772e-05, 7.763900000000434e-05, 7.812500000000527e-05, 7.845799999999653e-05, 7.840300000000466e-05, 7.76110000000052e-05, 7.858300000000012e-05, 7.765300000000391e-05, 7.776300000000153e-05, 7.798600000000211e-05, 7.823600000000236e-05, 7.802800000000082e-05, 7.80969999999992e-05, 7.775000000000143e-05, 7.813900000000484e-05, 7.840299999999772e-05, 7.800000000000168e-05, 7.848600000000261e-05, 7.79440000000034e-05, 7.836099999999901e-05, 7.84310000000038e-05, 7.766599999999707e-05, 7.763799999999793e-05, 7.811099999999876e-05, 7.823600000000236e-05, 7.763900000000434e-05, 7.854200000000089e-05, 7.831999999999978e-05, 7.855500000000099e-05, 7.790299999999722e-05, 7.831999999999978e-05, 7.844499999999643e-05, 7.780500000000024e-05, 7.784699999999894e-05, 7.826399999999456e-05, 7.811099999999876e-05, 7.84169999999973e-05]</msg>
<status status="PASS" starttime="20201030 11:52:33.080" endtime="20201030 11:52:33.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.068" endtime="20201030 11:52:33.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.096" endtime="20201030 11:52:33.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.091" endtime="20201030 11:52:33.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.089" endtime="20201030 11:52:33.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.578" endtime="20201030 11:52:33.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.577" endtime="20201030 11:52:33.121"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.144" endtime="20201030 11:52:33.166"></status>
</kw>
<msg timestamp="20201030 11:52:33.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.141" endtime="20201030 11:52:33.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.170" endtime="20201030 11:52:33.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.176" endtime="20201030 11:52:33.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.133" endtime="20201030 11:52:33.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.128" endtime="20201030 11:52:33.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.199" endtime="20201030 11:52:33.551"></status>
</kw>
<msg timestamp="20201030 11:52:33.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041648889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.196" endtime="20201030 11:52:33.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041648889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.560" endtime="20201030 11:52:33.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.579" endtime="20201030 11:52:33.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.189" endtime="20201030 11:52:33.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.184" endtime="20201030 11:52:33.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.597" level="INFO">${RESULT} = [{'diff': 7.927800000000207e-05}, {'diff': 7.943099999999786e-05}, {'diff': 7.870799999999678e-05}, {'diff': 7.930500000000174e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.866699999999754e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:33.588" endtime="20201030 11:52:33.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.606" level="INFO">${ACCURACY} = {'diff': [7.927800000000207e-05, 7.943099999999786e-05, 7.870799999999678e-05, 7.930500000000174e-05, 7.929200000000164e-05, 7.866699999999754e-05, 7.90970000000002e-05, 7.85969999999997e-05, 7.879100...</msg>
<status status="PASS" starttime="20201030 11:52:33.599" endtime="20201030 11:52:33.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.617" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.615" endtime="20201030 11:52:33.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.623" level="INFO">VALUE: [7.927800000000207e-05, 7.943099999999786e-05, 7.870799999999678e-05, 7.930500000000174e-05, 7.929200000000164e-05, 7.866699999999754e-05, 7.90970000000002e-05, 7.85969999999997e-05, 7.879100000000167e-05, 7.905500000000149e-05, 7.874999999999549e-05, 7.888899999999865e-05, 7.951400000000275e-05, 7.925000000000293e-05, 7.922199999999685e-05, 7.937499999999958e-05, 7.86389999999984e-05, 7.865300000000491e-05, 7.916700000000498e-05, 7.870899999999625e-05, 7.91389999999989e-05, 7.944399999999796e-05, 7.940299999999872e-05, 7.934799999999992e-05, 7.869400000000415e-05, 7.934799999999992e-05, 7.922199999999685e-05, 7.948600000000361e-05, 7.866699999999754e-05, 7.875000000000243e-05, 7.927800000000207e-05, 7.85839999999996e-05, 7.856900000000056e-05, 7.905500000000149e-05, 7.8764000000002e-05, 7.904199999999445e-05, 7.933300000000088e-05, 7.938899999999915e-05, 7.90840000000001e-05, 7.891599999999832e-05, 7.872199999999635e-05, 7.8764000000002e-05, 7.861099999999926e-05, 7.940299999999872e-05, 7.930599999999427e-05, 7.890299999999822e-05, 7.888799999999918e-05, 7.868000000000458e-05, 7.877800000000157e-05, 7.918099999999761e-05]</msg>
<status status="PASS" starttime="20201030 11:52:33.620" endtime="20201030 11:52:33.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.608" endtime="20201030 11:52:33.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.637" endtime="20201030 11:52:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.631" endtime="20201030 11:52:33.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.629" endtime="20201030 11:52:33.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.123" endtime="20201030 11:52:33.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.122" endtime="20201030 11:52:33.662"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.685" endtime="20201030 11:52:33.707"></status>
</kw>
<msg timestamp="20201030 11:52:33.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.682" endtime="20201030 11:52:33.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.710" endtime="20201030 11:52:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.717" endtime="20201030 11:52:33.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.675" endtime="20201030 11:52:33.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.669" endtime="20201030 11:52:33.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.741" endtime="20201030 11:52:34.104"></status>
</kw>
<msg timestamp="20201030 11:52:34.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040072903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040153236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.737" endtime="20201030 11:52:34.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040072903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040153236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.116" endtime="20201030 11:52:34.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.138" endtime="20201030 11:52:34.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.730" endtime="20201030 11:52:34.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.725" endtime="20201030 11:52:34.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.155" level="INFO">${RESULT} = [{'diff': 8.033300000000188e-05}, {'diff': 8.012500000000033e-05}, {'diff': 8.004199999999545e-05}, {'diff': 8.047200000000504e-05}, {'diff': 7.98190000000018e-05}, {'diff': 8.02640000000035e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:34.146" endtime="20201030 11:52:34.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.166" level="INFO">${ACCURACY} = {'diff': [8.033300000000188e-05, 8.012500000000033e-05, 8.004199999999545e-05, 8.047200000000504e-05, 7.98190000000018e-05, 8.02640000000035e-05, 8.007000000000153e-05, 8.016599999999957e-05, 8.023600...</msg>
<status status="PASS" starttime="20201030 11:52:34.157" endtime="20201030 11:52:34.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.178" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.175" endtime="20201030 11:52:34.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.183" level="INFO">VALUE: [8.033300000000188e-05, 8.012500000000033e-05, 8.004199999999545e-05, 8.047200000000504e-05, 7.98190000000018e-05, 8.02640000000035e-05, 8.007000000000153e-05, 8.016599999999957e-05, 8.023600000000436e-05, 8.038900000000015e-05, 7.957000000000103e-05, 8.034700000000145e-05, 7.990299999999922e-05, 8.009800000000067e-05, 8.036100000000101e-05, 8.020899999999775e-05, 8.056899999999562e-05, 8.03190000000023e-05, 8.052799999999638e-05, 7.977800000000257e-05, 8.026300000000403e-05, 8.008300000000163e-05, 8.022300000000426e-05, 7.95970000000007e-05, 8.042999999999939e-05, 8.004200000000239e-05, 7.962499999999983e-05, 8.037499999999365e-05, 7.991700000000573e-05, 7.991700000000573e-05, 7.956900000000156e-05, 8.056900000000256e-05, 7.966699999999854e-05, 7.988899999999965e-05, 8.024999999999699e-05, 7.969500000000462e-05, 8.03049999999958e-05, 7.990299999999922e-05, 8.012500000000033e-05, 8.055499999999605e-05, 8.033300000000188e-05, 8.018099999999861e-05, 8.042999999999939e-05, 8.023600000000436e-05, 8.001399999999631e-05, 7.983399999999391e-05, 7.95970000000007e-05, 7.998599999999717e-05, 8.000000000000368e-05, 8.059800000000117e-05]</msg>
<status status="PASS" starttime="20201030 11:52:34.180" endtime="20201030 11:52:34.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.168" endtime="20201030 11:52:34.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.196" endtime="20201030 11:52:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.191" endtime="20201030 11:52:34.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.189" endtime="20201030 11:52:34.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.665" endtime="20201030 11:52:34.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.663" endtime="20201030 11:52:34.221"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.245" endtime="20201030 11:52:34.267"></status>
</kw>
<msg timestamp="20201030 11:52:34.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.241" endtime="20201030 11:52:34.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.270" endtime="20201030 11:52:34.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.276" endtime="20201030 11:52:34.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.234" endtime="20201030 11:52:34.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.228" endtime="20201030 11:52:34.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.300" endtime="20201030 11:52:34.663"></status>
</kw>
<msg timestamp="20201030 11:52:34.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040736625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:34.297" endtime="20201030 11:52:34.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040736625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:34.673" endtime="20201030 11:52:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.692" endtime="20201030 11:52:34.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.289" endtime="20201030 11:52:34.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.285" endtime="20201030 11:52:34.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.709" level="INFO">${RESULT} = [{'diff': 8.062500000000083e-05}, {'diff': 8.091600000000032e-05}, {'diff': 8.106899999999612e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.148699999999814e-05}, {'diff': 8.108300000000263e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:34.700" endtime="20201030 11:52:34.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.722" level="INFO">${ACCURACY} = {'diff': [8.062500000000083e-05, 8.091600000000032e-05, 8.106899999999612e-05, 8.134700000000245e-05, 8.148699999999814e-05, 8.108300000000263e-05, 8.058299999999519e-05, 8.120899999999875e-05, 8.1096...</msg>
<status status="PASS" starttime="20201030 11:52:34.711" endtime="20201030 11:52:34.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.733" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.731" endtime="20201030 11:52:34.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.738" level="INFO">VALUE: [8.062500000000083e-05, 8.091600000000032e-05, 8.106899999999612e-05, 8.134700000000245e-05, 8.148699999999814e-05, 8.108300000000263e-05, 8.058299999999519e-05, 8.120899999999875e-05, 8.109699999999526e-05, 8.151300000000528e-05, 8.086200000000099e-05, 8.083300000000238e-05, 8.133300000000288e-05, 8.09589999999985e-05, 8.1458999999999e-05, 8.106900000000306e-05, 8.119399999999971e-05, 8.094399999999946e-05, 8.140300000000072e-05, 8.147299999999857e-05, 8.119499999999918e-05, 8.144399999999996e-05, 8.111099999999483e-05, 8.093099999999936e-05, 8.123600000000536e-05, 8.062500000000083e-05, 8.147200000000604e-05, 8.124999999999799e-05, 8.143099999999986e-05, 8.112500000000133e-05, 8.116700000000004e-05, 8.137500000000158e-05, 8.087500000000108e-05, 8.070899999999825e-05, 8.0764000000004e-05, 8.09169999999998e-05, 8.144399999999996e-05, 8.138900000000115e-05, 8.119399999999971e-05, 8.081999999999534e-05, 8.144399999999996e-05, 8.133399999999541e-05, 8.106900000000306e-05, 8.156899999999662e-05, 8.104099999999698e-05, 8.137500000000158e-05, 8.140300000000072e-05, 8.136100000000202e-05, 8.066699999999954e-05, 8.067999999999964e-05]</msg>
<status status="PASS" starttime="20201030 11:52:34.735" endtime="20201030 11:52:34.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.724" endtime="20201030 11:52:34.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.751" endtime="20201030 11:52:34.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.747" endtime="20201030 11:52:34.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.744" endtime="20201030 11:52:34.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.224" endtime="20201030 11:52:34.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.222" endtime="20201030 11:52:34.777"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.800" endtime="20201030 11:52:34.822"></status>
</kw>
<msg timestamp="20201030 11:52:34.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.796" endtime="20201030 11:52:34.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.825" endtime="20201030 11:52:34.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.831" endtime="20201030 11:52:34.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.789" endtime="20201030 11:52:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.783" endtime="20201030 11:52:34.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.855" endtime="20201030 11:52:35.213"></status>
</kw>
<msg timestamp="20201030 11:52:35.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.852" endtime="20201030 11:52:35.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040568125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.222" endtime="20201030 11:52:35.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.242" endtime="20201030 11:52:35.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.844" endtime="20201030 11:52:35.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.840" endtime="20201030 11:52:35.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.259" level="INFO">${RESULT} = [{'diff': 8.230600000000421e-05}, {'diff': 8.244500000000043e-05}, {'diff': 8.243000000000139e-05}, {'diff': 8.241699999999436e-05}, {'diff': 8.230599999999727e-05}, {'diff': 8.16249999999949e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:35.250" endtime="20201030 11:52:35.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.269" level="INFO">${ACCURACY} = {'diff': [8.230600000000421e-05, 8.244500000000043e-05, 8.243000000000139e-05, 8.241699999999436e-05, 8.230599999999727e-05, 8.16249999999949e-05, 8.248599999999967e-05, 8.193100000000036e-05, 8.23749...</msg>
<status status="PASS" starttime="20201030 11:52:35.261" endtime="20201030 11:52:35.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.280" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.277" endtime="20201030 11:52:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.285" level="INFO">VALUE: [8.230600000000421e-05, 8.244500000000043e-05, 8.243000000000139e-05, 8.241699999999436e-05, 8.230599999999727e-05, 8.16249999999949e-05, 8.248599999999967e-05, 8.193100000000036e-05, 8.237499999999565e-05, 8.218100000000061e-05, 8.218000000000114e-05, 8.251399999999881e-05, 8.230599999999727e-05, 8.247299999999957e-05, 8.170799999999978e-05, 8.183300000000338e-05, 8.186100000000252e-05, 8.212500000000234e-05, 8.227800000000507e-05, 8.244500000000043e-05, 8.245800000000053e-05, 8.206899999999712e-05, 8.170799999999978e-05, 8.188900000000165e-05, 8.249999999999924e-05, 8.224999999999899e-05, 8.248599999999967e-05, 8.232000000000378e-05, 8.237499999999565e-05, 8.230599999999727e-05, 8.222199999999985e-05, 8.205499999999755e-05, 8.155600000000346e-05, 8.229099999999823e-05, 8.19589999999995e-05, 8.211100000000277e-05, 8.154100000000442e-05, 8.172299999999882e-05, 8.207000000000353e-05, 8.243100000000086e-05, 8.176399999999806e-05, 8.238900000000215e-05, 8.216700000000104e-05, 8.256899999999762e-05, 8.255499999999805e-05, 8.173599999999892e-05, 8.236100000000302e-05, 8.176399999999806e-05, 8.226399999999856e-05, 8.224999999999899e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.282" endtime="20201030 11:52:35.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.271" endtime="20201030 11:52:35.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.298" endtime="20201030 11:52:35.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.294" endtime="20201030 11:52:35.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.291" endtime="20201030 11:52:35.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.779" endtime="20201030 11:52:35.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.778" endtime="20201030 11:52:35.324"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.347" endtime="20201030 11:52:35.369"></status>
</kw>
<msg timestamp="20201030 11:52:35.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.343" endtime="20201030 11:52:35.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.372" endtime="20201030 11:52:35.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.379" endtime="20201030 11:52:35.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.336" endtime="20201030 11:52:35.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.330" endtime="20201030 11:52:35.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.402" endtime="20201030 11:52:35.754"></status>
</kw>
<msg timestamp="20201030 11:52:35.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041750792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041834194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.399" endtime="20201030 11:52:35.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041750792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041834194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.764" endtime="20201030 11:52:35.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.783" endtime="20201030 11:52:35.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.392" endtime="20201030 11:52:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.387" endtime="20201030 11:52:35.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.800" level="INFO">${RESULT} = [{'diff': 8.340199999999631e-05}, {'diff': 8.272200000000035e-05}, {'diff': 8.340200000000325e-05}, {'diff': 8.331899999999837e-05}, {'diff': 8.288900000000265e-05}, {'diff': 8.338900000000316e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:35.791" endtime="20201030 11:52:35.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.810" level="INFO">${ACCURACY} = {'diff': [8.340199999999631e-05, 8.272200000000035e-05, 8.340200000000325e-05, 8.331899999999837e-05, 8.288900000000265e-05, 8.338900000000316e-05, 8.351399999999981e-05, 8.336100000000402e-05, 8.2722...</msg>
<status status="PASS" starttime="20201030 11:52:35.802" endtime="20201030 11:52:35.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.821" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.819" endtime="20201030 11:52:35.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.826" level="INFO">VALUE: [8.340199999999631e-05, 8.272200000000035e-05, 8.340200000000325e-05, 8.331899999999837e-05, 8.288900000000265e-05, 8.338900000000316e-05, 8.351399999999981e-05, 8.336100000000402e-05, 8.272200000000035e-05, 8.34720000000011e-05, 8.259799999999623e-05, 8.340299999999579e-05, 8.352799999999938e-05, 8.333400000000435e-05, 8.262500000000284e-05, 8.270800000000078e-05, 8.343000000000239e-05, 8.279099999999873e-05, 8.298600000000017e-05, 8.280600000000471e-05, 8.299999999999974e-05, 8.306900000000506e-05, 8.276399999999906e-05, 8.27919999999982e-05, 8.268000000000164e-05, 8.351400000000675e-05, 8.355600000000546e-05, 8.343000000000239e-05, 8.290300000000222e-05, 8.298699999999964e-05, 8.305499999999855e-05, 8.268100000000111e-05, 8.29590000000005e-05, 8.280500000000524e-05, 8.304199999999845e-05, 8.273599999999992e-05, 8.354199999999895e-05, 8.261100000000327e-05, 8.337500000000359e-05, 8.316700000000204e-05, 8.298600000000017e-05, 8.266700000000154e-05, 8.333299999999794e-05, 8.277699999999916e-05, 8.345800000000153e-05, 8.301399999999931e-05, 8.273599999999992e-05, 8.355599999999852e-05, 8.31390000000029e-05, 8.343099999999493e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.823" endtime="20201030 11:52:35.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.812" endtime="20201030 11:52:35.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.841" endtime="20201030 11:52:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.835" endtime="20201030 11:52:35.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.832" endtime="20201030 11:52:35.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.326" endtime="20201030 11:52:35.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.324" endtime="20201030 11:52:35.866"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.889" endtime="20201030 11:52:35.912"></status>
</kw>
<msg timestamp="20201030 11:52:35.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.886" endtime="20201030 11:52:35.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.915" endtime="20201030 11:52:35.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.922" endtime="20201030 11:52:35.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.879" endtime="20201030 11:52:35.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.873" endtime="20201030 11:52:35.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.946" endtime="20201030 11:52:36.294"></status>
</kw>
<msg timestamp="20201030 11:52:36.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040378736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.943" endtime="20201030 11:52:36.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040378736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.303" endtime="20201030 11:52:36.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.322" endtime="20201030 11:52:36.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.935" endtime="20201030 11:52:36.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.930" endtime="20201030 11:52:36.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.339" level="INFO">${RESULT} = [{'diff': 8.41669999999961e-05}, {'diff': 8.430599999999927e-05}, {'diff': 8.422300000000132e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.404200000000639e-05}, {'diff': 8.377799999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:36.330" endtime="20201030 11:52:36.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.349" level="INFO">${ACCURACY} = {'diff': [8.41669999999961e-05, 8.430599999999927e-05, 8.422300000000132e-05, 8.427800000000013e-05, 8.404200000000639e-05, 8.377799999999963e-05, 8.394400000000246e-05, 8.3846999999998e-05, 8.3875000...</msg>
<status status="PASS" starttime="20201030 11:52:36.341" endtime="20201030 11:52:36.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.360" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.358" endtime="20201030 11:52:36.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.365" level="INFO">VALUE: [8.41669999999961e-05, 8.430599999999927e-05, 8.422300000000132e-05, 8.427800000000013e-05, 8.404200000000639e-05, 8.377799999999963e-05, 8.394400000000246e-05, 8.3846999999998e-05, 8.387500000000409e-05, 8.416700000000304e-05, 8.43049999999998e-05, 8.386099999999758e-05, 8.376400000000006e-05, 8.42919999999997e-05, 8.455500000000005e-05, 8.372199999999441e-05, 8.380599999999877e-05, 8.415199999999706e-05, 8.440299999999679e-05, 8.451400000000081e-05, 8.438899999999722e-05, 8.37919999999992e-05, 8.405499999999955e-05, 8.366700000000254e-05, 8.454199999999995e-05, 8.372200000000135e-05, 8.427800000000013e-05, 8.441699999999636e-05, 8.372200000000135e-05, 8.395799999999509e-05, 8.447300000000157e-05, 8.411099999999783e-05, 8.41249999999974e-05, 8.429100000000023e-05, 8.405600000000596e-05, 8.377799999999963e-05, 8.426399999999362e-05, 8.395799999999509e-05, 8.444400000000296e-05, 8.462500000000484e-05, 8.400000000000074e-05, 8.440300000000373e-05, 8.369499999999475e-05, 8.433299999999894e-05, 8.383299999999844e-05, 8.431899999999937e-05, 8.398600000000117e-05, 8.427700000000066e-05, 8.400000000000074e-05, 8.418100000000261e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.362" endtime="20201030 11:52:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.351" endtime="20201030 11:52:36.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.382" endtime="20201030 11:52:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.378" endtime="20201030 11:52:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.376" endtime="20201030 11:52:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.869" endtime="20201030 11:52:36.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.867" endtime="20201030 11:52:36.407"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.430" endtime="20201030 11:52:36.448"></status>
</kw>
<msg timestamp="20201030 11:52:36.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.426" endtime="20201030 11:52:36.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.452" endtime="20201030 11:52:36.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.458" endtime="20201030 11:52:36.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.419" endtime="20201030 11:52:36.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.414" endtime="20201030 11:52:36.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.481" endtime="20201030 11:52:36.818"></status>
</kw>
<msg timestamp="20201030 11:52:36.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03895525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:36.478" endtime="20201030 11:52:36.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03895525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:36.827" endtime="20201030 11:52:36.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.846" endtime="20201030 11:52:36.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.471" endtime="20201030 11:52:36.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.466" endtime="20201030 11:52:36.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.863" level="INFO">${RESULT} = [{'diff': 8.4846999999999e-05}, {'diff': 8.551400000000181e-05}, {'diff': 8.468099999999618e-05}, {'diff': 8.537500000000559e-05}, {'diff': 8.544399999999702e-05}, {'diff': 8.529100000000123e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:36.854" endtime="20201030 11:52:36.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.874" level="INFO">${ACCURACY} = {'diff': [8.4846999999999e-05, 8.551400000000181e-05, 8.468099999999618e-05, 8.537500000000559e-05, 8.544399999999702e-05, 8.529100000000123e-05, 8.537499999999865e-05, 8.46669999999966e-05, 8.5082999...</msg>
<status status="PASS" starttime="20201030 11:52:36.865" endtime="20201030 11:52:36.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.884" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.882" endtime="20201030 11:52:36.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.890" level="INFO">VALUE: [8.4846999999999e-05, 8.551400000000181e-05, 8.468099999999618e-05, 8.537500000000559e-05, 8.544399999999702e-05, 8.529100000000123e-05, 8.537499999999865e-05, 8.46669999999966e-05, 8.508299999999969e-05, 8.525000000000199e-05, 8.456899999999962e-05, 8.541699999999736e-05, 8.474999999999455e-05, 8.541600000000482e-05, 8.545799999999659e-05, 8.522200000000285e-05, 8.506900000000012e-05, 8.541699999999736e-05, 8.51390000000049e-05, 8.550000000000224e-05, 8.493100000000336e-05, 8.484799999999848e-05, 8.486099999999858e-05, 8.520800000000328e-05, 8.545800000000353e-05, 8.487499999999815e-05, 8.483299999999944e-05, 8.526400000000156e-05, 8.501400000000131e-05, 8.541699999999736e-05, 8.502800000000088e-05, 8.48050000000003e-05, 8.493099999999643e-05, 8.500000000000174e-05, 8.522299999999539e-05, 8.51249999999984e-05, 8.470799999999584e-05, 8.556900000000062e-05, 8.500000000000174e-05, 8.504200000000045e-05, 8.483299999999944e-05, 8.477700000000116e-05, 8.476400000000106e-05, 8.477800000000063e-05, 8.557000000000009e-05, 8.483299999999944e-05, 8.538899999999822e-05, 8.544500000000343e-05, 8.46119999999978e-05, 8.508299999999969e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.887" endtime="20201030 11:52:36.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.875" endtime="20201030 11:52:36.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.902" endtime="20201030 11:52:36.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.898" endtime="20201030 11:52:36.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.895" endtime="20201030 11:52:36.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.409" endtime="20201030 11:52:36.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.408" endtime="20201030 11:52:36.930"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.954" endtime="20201030 11:52:36.974"></status>
</kw>
<msg timestamp="20201030 11:52:36.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.951" endtime="20201030 11:52:36.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.977" endtime="20201030 11:52:36.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.983" endtime="20201030 11:52:36.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.943" endtime="20201030 11:52:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.937" endtime="20201030 11:52:36.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.007" endtime="20201030 11:52:37.351"></status>
</kw>
<msg timestamp="20201030 11:52:37.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044182458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.003" endtime="20201030 11:52:37.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044096625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044182458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.361" endtime="20201030 11:52:37.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.380" endtime="20201030 11:52:37.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.996" endtime="20201030 11:52:37.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.991" endtime="20201030 11:52:37.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.397" level="INFO">${RESULT} = [{'diff': 8.583300000000044e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.572199999999641e-05}, {'diff': 8.588899999999872e-05}, {'diff': 8.590299999999829e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:37.389" endtime="20201030 11:52:37.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.407" level="INFO">${ACCURACY} = {'diff': [8.583300000000044e-05, 8.56249999999989e-05, 8.58050000000013e-05, 8.572199999999641e-05, 8.588899999999872e-05, 8.590299999999829e-05, 8.563899999999847e-05, 8.570800000000378e-05, 8.579100...</msg>
<status status="PASS" starttime="20201030 11:52:37.399" endtime="20201030 11:52:37.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.417" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.415" endtime="20201030 11:52:37.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.423" level="INFO">VALUE: [8.583300000000044e-05, 8.56249999999989e-05, 8.58050000000013e-05, 8.572199999999641e-05, 8.588899999999872e-05, 8.590299999999829e-05, 8.563899999999847e-05, 8.570800000000378e-05, 8.579100000000173e-05, 8.5847e-05, 8.566700000000455e-05, 8.618099999999768e-05, 8.594500000000393e-05, 8.608300000000069e-05, 8.62920000000017e-05, 8.563899999999847e-05, 8.588899999999872e-05, 8.56249999999989e-05, 8.602800000000188e-05, 8.59720000000036e-05, 8.568100000000411e-05, 8.580499999999436e-05, 8.586100000000652e-05, 8.588899999999872e-05, 8.615299999999854e-05, 8.577800000000163e-05, 8.598599999999623e-05, 8.611099999999983e-05, 8.591699999999786e-05, 8.586099999999958e-05, 8.615299999999854e-05, 8.605500000000155e-05, 8.636100000000008e-05, 8.613899999999897e-05, 8.58050000000013e-05, 8.568100000000411e-05, 8.654200000000195e-05, 8.555600000000052e-05, 8.632000000000084e-05, 8.56669999999976e-05, 8.597199999999666e-05, 8.659800000000023e-05, 8.631900000000137e-05, 8.59170000000048e-05, 8.595799999999709e-05, 8.59999999999958e-05, 8.601400000000231e-05, 8.56249999999989e-05, 8.643099999999793e-05, 8.595800000000403e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.420" endtime="20201030 11:52:37.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.408" endtime="20201030 11:52:37.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.435" endtime="20201030 11:52:37.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.431" endtime="20201030 11:52:37.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.429" endtime="20201030 11:52:37.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.933" endtime="20201030 11:52:37.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.931" endtime="20201030 11:52:37.461"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.483" endtime="20201030 11:52:37.504"></status>
</kw>
<msg timestamp="20201030 11:52:37.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.480" endtime="20201030 11:52:37.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.507" endtime="20201030 11:52:37.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.513" endtime="20201030 11:52:37.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.473" endtime="20201030 11:52:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.467" endtime="20201030 11:52:37.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.537" endtime="20201030 11:52:37.879"></status>
</kw>
<msg timestamp="20201030 11:52:37.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:37.533" endtime="20201030 11:52:37.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:37.888" endtime="20201030 11:52:37.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.907" endtime="20201030 11:52:37.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.526" endtime="20201030 11:52:37.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.522" endtime="20201030 11:52:37.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.924" level="INFO">${RESULT} = [{'diff': 8.694400000000546e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.737500000000065e-05}, {'diff': 8.682000000000134e-05}, {'diff': 8.715299999999954e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:37.915" endtime="20201030 11:52:37.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.934" level="INFO">${ACCURACY} = {'diff': [8.694400000000546e-05, 8.713899999999997e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.682000000000134e-05, 8.715299999999954e-05, 8.692999999999895e-05, 8.697199999999766e-05, 8.6708...</msg>
<status status="PASS" starttime="20201030 11:52:37.926" endtime="20201030 11:52:37.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.945" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.942" endtime="20201030 11:52:37.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.950" level="INFO">VALUE: [8.694400000000546e-05, 8.713899999999997e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.682000000000134e-05, 8.715299999999954e-05, 8.692999999999895e-05, 8.697199999999766e-05, 8.670800000000478e-05, 8.71799999999992e-05, 8.71250000000004e-05, 8.669500000000468e-05, 8.713800000000049e-05, 8.673600000000392e-05, 8.738900000000022e-05, 8.71250000000004e-05, 8.683400000000091e-05, 8.707000000000159e-05, 8.668100000000512e-05, 8.706900000000212e-05, 8.744399999999902e-05, 8.741599999999988e-05, 8.720799999999834e-05, 8.665299999999904e-05, 8.68199999999944e-05, 8.686200000000005e-05, 8.736200000000055e-05, 8.683400000000091e-05, 8.74999999999973e-05, 8.71250000000004e-05, 8.665199999999956e-05, 8.686100000000058e-05, 8.690300000000623e-05, 8.663899999999947e-05, 8.658399999999372e-05, 8.720899999999782e-05, 8.66119999999998e-05, 8.709800000000073e-05, 8.672200000000435e-05, 8.705499999999561e-05, 8.66799999999987e-05, 8.670800000000478e-05, 8.665199999999956e-05, 8.727700000000366e-05, 8.651300000000334e-05, 8.702700000000341e-05, 8.71250000000004e-05, 8.730499999999586e-05, 8.715299999999954e-05, 8.698599999999723e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.947" endtime="20201030 11:52:37.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.935" endtime="20201030 11:52:37.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.969" endtime="20201030 11:52:37.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.958" endtime="20201030 11:52:37.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.956" endtime="20201030 11:52:37.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.463" endtime="20201030 11:52:37.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.462" endtime="20201030 11:52:37.994"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.017" endtime="20201030 11:52:38.037"></status>
</kw>
<msg timestamp="20201030 11:52:38.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.014" endtime="20201030 11:52:38.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.040" endtime="20201030 11:52:38.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.046" endtime="20201030 11:52:38.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.007" endtime="20201030 11:52:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.001" endtime="20201030 11:52:38.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.070" endtime="20201030 11:52:38.411"></status>
</kw>
<msg timestamp="20201030 11:52:38.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.066" endtime="20201030 11:52:38.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040148111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.420" endtime="20201030 11:52:38.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.439" endtime="20201030 11:52:38.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.059" endtime="20201030 11:52:38.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.054" endtime="20201030 11:52:38.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:38.456" level="INFO">${RESULT} = [{'diff': 8.780600000000277e-05}, {'diff': 8.838800000000174e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.776399999999712e-05}, {'diff': 8.801399999999737e-05}, {'diff': 8.761100000000133e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:38.447" endtime="20201030 11:52:38.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:38.466" level="INFO">${ACCURACY} = {'diff': [8.780600000000277e-05, 8.838800000000174e-05, 8.76250000000009e-05, 8.776399999999712e-05, 8.801399999999737e-05, 8.761100000000133e-05, 8.848599999999873e-05, 8.848599999999873e-05, 8.85130...</msg>
<status status="PASS" starttime="20201030 11:52:38.458" endtime="20201030 11:52:38.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.477" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:52:38.475" endtime="20201030 11:52:38.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.483" level="INFO">VALUE: [8.780600000000277e-05, 8.838800000000174e-05, 8.76250000000009e-05, 8.776399999999712e-05, 8.801399999999737e-05, 8.761100000000133e-05, 8.848599999999873e-05, 8.848599999999873e-05, 8.851300000000534e-05, 8.81250000000014e-05, 8.83199999999959e-05, 8.786100000000158e-05, 8.813899999999403e-05, 8.794500000000594e-05, 8.813800000000149e-05, 8.759700000000176e-05, 8.79999999999978e-05, 8.855600000000352e-05, 8.838900000000122e-05, 8.774999999999755e-05, 8.774999999999755e-05, 8.777799999999669e-05, 8.786100000000158e-05, 8.772200000000535e-05, 8.81670000000001e-05, 8.798700000000464e-05, 8.791600000000038e-05, 8.856900000000362e-05, 8.791699999999986e-05, 8.791600000000038e-05, 8.813899999999403e-05, 8.782000000000234e-05, 8.784700000000201e-05, 8.81250000000014e-05, 8.76250000000009e-05, 8.832000000000284e-05, 8.802700000000441e-05, 8.773600000000492e-05, 8.854199999999701e-05, 8.837500000000165e-05, 8.776399999999712e-05, 8.851399999999787e-05, 8.775000000000449e-05, 8.824999999999805e-05, 8.836100000000208e-05, 8.793099999999943e-05, 8.798600000000517e-05, 8.763900000000047e-05, 8.783400000000191e-05, 8.845799999999959e-05]</msg>
<status status="PASS" starttime="20201030 11:52:38.480" endtime="20201030 11:52:38.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.468" endtime="20201030 11:52:38.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:38.495" endtime="20201030 11:52:38.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.491" endtime="20201030 11:52:38.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.488" endtime="20201030 11:52:38.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.997" endtime="20201030 11:52:38.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.995" endtime="20201030 11:52:38.520"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.543" endtime="20201030 11:52:38.562"></status>
</kw>
<msg timestamp="20201030 11:52:38.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.539" endtime="20201030 11:52:38.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.565" endtime="20201030 11:52:38.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.572" endtime="20201030 11:52:38.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.532" endtime="20201030 11:52:38.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.527" endtime="20201030 11:52:38.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.595" endtime="20201030 11:52:38.935"></status>
</kw>
<msg timestamp="20201030 11:52:38.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039387903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039477167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.592" endtime="20201030 11:52:38.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039387903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039477167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.944" endtime="20201030 11:52:38.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.963" endtime="20201030 11:52:38.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.584" endtime="20201030 11:52:38.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.580" endtime="20201030 11:52:38.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:38.980" level="INFO">${RESULT} = [{'diff': 8.926399999999862e-05}, {'diff': 8.86250000000019e-05}, {'diff': 8.92920000000047e-05}, {'diff': 8.931900000000437e-05}, {'diff': 8.941599999999494e-05}, {'diff': 8.865300000000104e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:38.972" endtime="20201030 11:52:38.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:38.991" level="INFO">${ACCURACY} = {'diff': [8.926399999999862e-05, 8.86250000000019e-05, 8.92920000000047e-05, 8.931900000000437e-05, 8.941599999999494e-05, 8.865300000000104e-05, 8.909800000000273e-05, 8.86670000000006e-05, 8.9472000...</msg>
<status status="PASS" starttime="20201030 11:52:38.982" endtime="20201030 11:52:38.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.003" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.000" endtime="20201030 11:52:39.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.009" level="INFO">VALUE: [8.926399999999862e-05, 8.86250000000019e-05, 8.92920000000047e-05, 8.931900000000437e-05, 8.941599999999494e-05, 8.865300000000104e-05, 8.909800000000273e-05, 8.86670000000006e-05, 8.947200000000016e-05, 8.909700000000326e-05, 8.923599999999948e-05, 8.863900000000147e-05, 8.884699999999607e-05, 8.938900000000222e-05, 8.924999999999905e-05, 8.912499999999546e-05, 8.911100000000283e-05, 8.944400000000102e-05, 8.886100000000258e-05, 8.892999999999401e-05, 8.887499999999521e-05, 8.883300000000344e-05, 8.961100000000333e-05, 8.86800000000007e-05, 8.943100000000093e-05, 8.912499999999546e-05, 8.93050000000048e-05, 8.955599999999758e-05, 8.893000000000095e-05, 8.947200000000016e-05, 8.891600000000138e-05, 8.886100000000258e-05, 8.940300000000179e-05, 8.941699999999442e-05, 8.86670000000006e-05, 8.934700000000351e-05, 8.913900000000197e-05, 8.869400000000027e-05, 8.954200000000495e-05, 8.884699999999607e-05, 8.926400000000556e-05, 8.944499999999356e-05, 8.86670000000006e-05, 8.895899999999957e-05, 8.924999999999905e-05, 8.945800000000059e-05, 8.89999999999988e-05, 8.91529999999946e-05, 8.923699999999896e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.005" endtime="20201030 11:52:39.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.993" endtime="20201030 11:52:39.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.022" endtime="20201030 11:52:39.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.017" endtime="20201030 11:52:39.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.015" endtime="20201030 11:52:39.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.522" endtime="20201030 11:52:39.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.521" endtime="20201030 11:52:39.047"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.070" endtime="20201030 11:52:39.089"></status>
</kw>
<msg timestamp="20201030 11:52:39.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.067" endtime="20201030 11:52:39.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.093" endtime="20201030 11:52:39.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.099" endtime="20201030 11:52:39.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.060" endtime="20201030 11:52:39.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.054" endtime="20201030 11:52:39.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.122" endtime="20201030 11:52:39.474"></status>
</kw>
<msg timestamp="20201030 11:52:39.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.119" endtime="20201030 11:52:39.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039768153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.484" endtime="20201030 11:52:39.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.502" endtime="20201030 11:52:39.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.112" endtime="20201030 11:52:39.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.107" endtime="20201030 11:52:39.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.520" level="INFO">${RESULT} = [{'diff': 8.998600000000023e-05}, {'diff': 8.955600000000452e-05}, {'diff': 9.026399999999962e-05}, {'diff': 8.984700000000401e-05}, {'diff': 9.025000000000005e-05}, {'diff': 8.96670000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:39.511" endtime="20201030 11:52:39.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.529" level="INFO">${ACCURACY} = {'diff': [8.998600000000023e-05, 8.955600000000452e-05, 9.026399999999962e-05, 8.984700000000401e-05, 9.025000000000005e-05, 8.96670000000016e-05, 8.993100000000143e-05, 8.963900000000247e-05, 9.04310...</msg>
<status status="PASS" starttime="20201030 11:52:39.522" endtime="20201030 11:52:39.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.540" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.538" endtime="20201030 11:52:39.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.545" level="INFO">VALUE: [8.998600000000023e-05, 8.955600000000452e-05, 9.026399999999962e-05, 8.984700000000401e-05, 9.025000000000005e-05, 8.96670000000016e-05, 8.993100000000143e-05, 8.963900000000247e-05, 9.043100000000193e-05, 8.973599999999998e-05, 9.023600000000048e-05, 9.015200000000306e-05, 9.019500000000125e-05, 9.036099999999714e-05, 9.009700000000426e-05, 9.029199999999876e-05, 8.980599999999783e-05, 8.961099999999639e-05, 9.023600000000048e-05, 8.993000000000195e-05, 9.030499999999886e-05, 9.01250000000034e-05, 8.961199999999586e-05, 9.037500000000365e-05, 9.048600000000073e-05, 9.047200000000116e-05, 8.99999999999998e-05, 8.984699999999707e-05, 9.02920000000057e-05, 9.04450000000015e-05, 8.99869999999997e-05, 8.99999999999998e-05, 8.979100000000573e-05, 8.973599999999998e-05, 9.045900000000107e-05, 9.015200000000306e-05, 8.976299999999965e-05, 9.001399999999937e-05, 9.04450000000015e-05, 9.037499999999671e-05, 8.966699999999467e-05, 8.977799999999869e-05, 9.006900000000512e-05, 8.994399999999458e-05, 9.015300000000254e-05, 9.055499999999911e-05, 9.016699999999517e-05, 8.984700000000401e-05, 8.987499999999621e-05, 9.008399999999722e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.542" endtime="20201030 11:52:39.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.531" endtime="20201030 11:52:39.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.558" endtime="20201030 11:52:39.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.553" endtime="20201030 11:52:39.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.551" endtime="20201030 11:52:39.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.050" endtime="20201030 11:52:39.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.048" endtime="20201030 11:52:39.583"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.606" endtime="20201030 11:52:39.627"></status>
</kw>
<msg timestamp="20201030 11:52:39.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.602" endtime="20201030 11:52:39.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.630" endtime="20201030 11:52:39.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.636" endtime="20201030 11:52:39.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.595" endtime="20201030 11:52:39.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.589" endtime="20201030 11:52:39.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.660" endtime="20201030 11:52:40.001"></status>
</kw>
<msg timestamp="20201030 11:52:40.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041078097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041168861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.656" endtime="20201030 11:52:40.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041078097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041168861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.010" endtime="20201030 11:52:40.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.029" endtime="20201030 11:52:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.649" endtime="20201030 11:52:40.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.644" endtime="20201030 11:52:40.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.047" level="INFO">${RESULT} = [{'diff': 9.076400000000012e-05}, {'diff': 9.158399999999872e-05}, {'diff': 9.108300000000569e-05}, {'diff': 9.086099999999764e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.090299999999635e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:40.038" endtime="20201030 11:52:40.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.057" level="INFO">${ACCURACY} = {'diff': [9.076400000000012e-05, 9.158399999999872e-05, 9.108300000000569e-05, 9.086099999999764e-05, 9.125000000000105e-05, 9.090299999999635e-05, 9.088900000000372e-05, 9.105499999999961e-05, 9.1180...</msg>
<status status="PASS" starttime="20201030 11:52:40.050" endtime="20201030 11:52:40.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.069" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.066" endtime="20201030 11:52:40.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.074" level="INFO">VALUE: [9.076400000000012e-05, 9.158399999999872e-05, 9.108300000000569e-05, 9.086099999999764e-05, 9.125000000000105e-05, 9.090299999999635e-05, 9.088900000000372e-05, 9.105499999999961e-05, 9.11800000000032e-05, 9.108400000000516e-05, 9.077700000000022e-05, 9.145799999999565e-05, 9.113900000000397e-05, 9.127800000000019e-05, 9.13199999999989e-05, 9.101400000000037e-05, 9.123600000000148e-05, 9.059700000000476e-05, 9.155599999999958e-05, 9.095800000000209e-05, 9.102799999999994e-05, 9.06800000000027e-05, 9.098600000000123e-05, 9.149999999999436e-05, 9.075000000000055e-05, 9.134699999999857e-05, 9.131899999999943e-05, 9.11670000000031e-05, 9.097200000000166e-05, 9.091600000000338e-05, 9.094499999999506e-05, 9.088900000000372e-05, 9.102700000000047e-05, 9.083300000000544e-05, 9.094400000000252e-05, 9.077800000000663e-05, 9.155500000000011e-05, 9.131899999999943e-05, 9.079199999999926e-05, 9.066600000000313e-05, 9.126399999999368e-05, 9.115300000000354e-05, 9.14859999999948e-05, 9.084699999999807e-05, 9.143100000000293e-05, 9.149999999999436e-05, 9.137499999999771e-05, 9.156999999999915e-05, 9.088899999999678e-05, 9.141700000000336e-05]</msg>
<status status="PASS" starttime="20201030 11:52:40.071" endtime="20201030 11:52:40.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.059" endtime="20201030 11:52:40.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.088" endtime="20201030 11:52:40.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.082" endtime="20201030 11:52:40.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.080" endtime="20201030 11:52:40.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.585" endtime="20201030 11:52:40.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.584" endtime="20201030 11:52:40.113"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.136" endtime="20201030 11:52:40.155"></status>
</kw>
<msg timestamp="20201030 11:52:40.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.133" endtime="20201030 11:52:40.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.159" endtime="20201030 11:52:40.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.165" endtime="20201030 11:52:40.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.126" endtime="20201030 11:52:40.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.120" endtime="20201030 11:52:40.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.188" endtime="20201030 11:52:40.532"></status>
</kw>
<msg timestamp="20201030 11:52:40.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039590569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.185" endtime="20201030 11:52:40.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039590569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.541" endtime="20201030 11:52:40.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.560" endtime="20201030 11:52:40.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.178" endtime="20201030 11:52:40.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.173" endtime="20201030 11:52:40.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.577" level="INFO">${RESULT} = [{'diff': 9.20000000000018e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.190299999999735e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.172299999999495e-05}, {'diff': 9.187499999999821e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:40.568" endtime="20201030 11:52:40.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.587" level="INFO">${ACCURACY} = {'diff': [9.20000000000018e-05, 9.175000000000155e-05, 9.190299999999735e-05, 9.263899999999853e-05, 9.172299999999495e-05, 9.187499999999821e-05, 9.208399999999922e-05, 9.243000000000445e-05, 9.21530...</msg>
<status status="PASS" starttime="20201030 11:52:40.579" endtime="20201030 11:52:40.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.598" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.596" endtime="20201030 11:52:40.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.604" level="INFO">VALUE: [9.20000000000018e-05, 9.175000000000155e-05, 9.190299999999735e-05, 9.263899999999853e-05, 9.172299999999495e-05, 9.187499999999821e-05, 9.208399999999922e-05, 9.243000000000445e-05, 9.215300000000454e-05, 9.16659999999972e-05, 9.259799999999929e-05, 9.230500000000086e-05, 9.213900000000497e-05, 9.172199999999547e-05, 9.220900000000282e-05, 9.16800000000037e-05, 9.245799999999665e-05, 9.181899999999993e-05, 9.173600000000198e-05, 9.175000000000155e-05, 9.186099999999864e-05, 9.21800000000042e-05, 9.25279999999945e-05, 9.191599999999744e-05, 9.202800000000094e-05, 9.21800000000042e-05, 9.20000000000018e-05, 9.237499999999871e-05, 9.230600000000033e-05, 9.1945000000003e-05, 9.237499999999871e-05, 9.254200000000101e-05, 9.21800000000042e-05, 9.19859999999953e-05, 9.181899999999993e-05, 9.237499999999871e-05, 9.261100000000633e-05, 9.183399999999897e-05, 9.21529999999976e-05, 9.163900000000447e-05, 9.231900000000043e-05, 9.233399999999947e-05, 9.240299999999785e-05, 9.190299999999735e-05, 9.195900000000257e-05, 9.216699999999717e-05, 9.215300000000454e-05, 9.202800000000094e-05, 9.163900000000447e-05, 9.223600000000248e-05]</msg>
<status status="PASS" starttime="20201030 11:52:40.601" endtime="20201030 11:52:40.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.589" endtime="20201030 11:52:40.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.616" endtime="20201030 11:52:40.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.612" endtime="20201030 11:52:40.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.609" endtime="20201030 11:52:40.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.116" endtime="20201030 11:52:40.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.114" endtime="20201030 11:52:40.641"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.664" endtime="20201030 11:52:40.684"></status>
</kw>
<msg timestamp="20201030 11:52:40.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.661" endtime="20201030 11:52:40.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.687" endtime="20201030 11:52:40.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.693" endtime="20201030 11:52:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.654" endtime="20201030 11:52:40.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.648" endtime="20201030 11:52:40.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.717" endtime="20201030 11:52:41.058"></status>
</kw>
<msg timestamp="20201030 11:52:41.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.713" endtime="20201030 11:52:41.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.068" endtime="20201030 11:52:41.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.087" endtime="20201030 11:52:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.706" endtime="20201030 11:52:41.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.701" endtime="20201030 11:52:41.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.105" level="INFO">${RESULT} = [{'diff': 9.281900000000093e-05}, {'diff': 9.341699999999842e-05}, {'diff': 9.273599999999604e-05}, {'diff': 9.301400000000237e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.358300000000125e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:41.096" endtime="20201030 11:52:41.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.116" level="INFO">${ACCURACY} = {'diff': [9.281900000000093e-05, 9.341699999999842e-05, 9.273599999999604e-05, 9.301400000000237e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.341699999999842e-05, 9.287500000000615e-05, 9.2957...</msg>
<status status="PASS" starttime="20201030 11:52:41.107" endtime="20201030 11:52:41.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.127" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.125" endtime="20201030 11:52:41.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.132" level="INFO">VALUE: [9.281900000000093e-05, 9.341699999999842e-05, 9.273599999999604e-05, 9.301400000000237e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.341699999999842e-05, 9.287500000000615e-05, 9.295799999999715e-05, 9.287499999999921e-05, 9.311099999999989e-05, 9.269399999999733e-05, 9.301399999999543e-05, 9.304200000000151e-05, 9.329199999999482e-05, 9.301400000000237e-05, 9.349999999999636e-05, 9.356900000000168e-05, 9.337499999999971e-05, 9.259699999999982e-05, 9.287500000000615e-05, 9.352800000000244e-05, 9.355500000000211e-05, 9.281900000000093e-05, 9.287499999999921e-05, 9.313899999999903e-05, 9.302700000000247e-05, 9.312499999999946e-05, 9.33059999999944e-05, 9.295900000000357e-05, 9.320899999999688e-05, 9.272200000000341e-05, 9.306900000000118e-05, 9.341699999999842e-05, 9.311099999999989e-05, 9.308400000000022e-05, 9.31659999999987e-05, 9.325000000000305e-05, 9.255600000000058e-05, 9.269399999999733e-05, 9.28200000000004e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.336100000000014e-05, 9.316700000000511e-05, 9.28200000000004e-05, 9.270899999999638e-05, 9.340199999999937e-05, 9.334700000000057e-05, 9.269500000000375e-05]</msg>
<status status="PASS" starttime="20201030 11:52:41.129" endtime="20201030 11:52:41.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.118" endtime="20201030 11:52:41.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.145" endtime="20201030 11:52:41.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.141" endtime="20201030 11:52:41.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.138" endtime="20201030 11:52:41.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.643" endtime="20201030 11:52:41.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.642" endtime="20201030 11:52:41.170"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.193" endtime="20201030 11:52:41.212"></status>
</kw>
<msg timestamp="20201030 11:52:41.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.189" endtime="20201030 11:52:41.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.215" endtime="20201030 11:52:41.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.222" endtime="20201030 11:52:41.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.182" endtime="20201030 11:52:41.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.176" endtime="20201030 11:52:41.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.245" endtime="20201030 11:52:41.589"></status>
</kw>
<msg timestamp="20201030 11:52:41.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.242" endtime="20201030 11:52:41.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.599" endtime="20201030 11:52:41.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.618" endtime="20201030 11:52:41.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.234" endtime="20201030 11:52:41.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.230" endtime="20201030 11:52:41.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.635" level="INFO">${RESULT} = [{'diff': 9.379100000000279e-05}, {'diff': 9.39870000000037e-05}, {'diff': 9.445799999999865e-05}, {'diff': 9.422199999999797e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.434700000000157e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:41.626" endtime="20201030 11:52:41.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.644" level="INFO">${ACCURACY} = {'diff': [9.379100000000279e-05, 9.39870000000037e-05, 9.445799999999865e-05, 9.422199999999797e-05, 9.41529999999996e-05, 9.434700000000157e-05, 9.425000000000405e-05, 9.455500000000311e-05, 9.362499...</msg>
<status status="PASS" starttime="20201030 11:52:41.637" endtime="20201030 11:52:41.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.655" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.653" endtime="20201030 11:52:41.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.661" level="INFO">VALUE: [9.379100000000279e-05, 9.39870000000037e-05, 9.445799999999865e-05, 9.422199999999797e-05, 9.41529999999996e-05, 9.434700000000157e-05, 9.425000000000405e-05, 9.455500000000311e-05, 9.362499999999996e-05, 9.401400000000337e-05, 9.38330000000015e-05, 9.369399999999833e-05, 9.384700000000107e-05, 9.368099999999824e-05, 9.45000000000043e-05, 9.445799999999865e-05, 9.431900000000243e-05, 9.44859999999978e-05, 9.418099999999874e-05, 9.38200000000014e-05, 9.455600000000258e-05, 9.384700000000107e-05, 9.40000000000038e-05, 9.433400000000147e-05, 9.38880000000003e-05, 9.361100000000039e-05, 9.401400000000337e-05, 9.395899999999763e-05, 9.408300000000175e-05, 9.454200000000301e-05, 9.393099999999849e-05, 9.372300000000389e-05, 9.419399999999883e-05, 9.404199999999557e-05, 9.434700000000157e-05, 9.38880000000003e-05, 9.456999999999521e-05, 9.444399999999908e-05, 9.363899999999953e-05, 9.391599999999944e-05, 9.361100000000039e-05, 9.417999999999926e-05, 9.36659999999992e-05, 9.373600000000398e-05, 9.381900000000193e-05, 9.384700000000107e-05, 9.45409999999966e-05, 9.38330000000015e-05, 9.370899999999738e-05, 9.429100000000329e-05]</msg>
<status status="PASS" starttime="20201030 11:52:41.657" endtime="20201030 11:52:41.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.646" endtime="20201030 11:52:41.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.679" endtime="20201030 11:52:41.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.675" endtime="20201030 11:52:41.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.673" endtime="20201030 11:52:41.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.172" endtime="20201030 11:52:41.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.171" endtime="20201030 11:52:41.705"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.727" endtime="20201030 11:52:41.748"></status>
</kw>
<msg timestamp="20201030 11:52:41.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.724" endtime="20201030 11:52:41.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.752" endtime="20201030 11:52:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.758" endtime="20201030 11:52:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.717" endtime="20201030 11:52:41.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.711" endtime="20201030 11:52:41.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.781" endtime="20201030 11:52:42.124"></status>
</kw>
<msg timestamp="20201030 11:52:42.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041303125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:41.778" endtime="20201030 11:52:42.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041303125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:42.134" endtime="20201030 11:52:42.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.153" endtime="20201030 11:52:42.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.771" endtime="20201030 11:52:42.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.766" endtime="20201030 11:52:42.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.170" level="INFO">${RESULT} = [{'diff': 9.512500000000146e-05}, {'diff': 9.520899999999888e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.518099999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:42.161" endtime="20201030 11:52:42.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.180" level="INFO">${ACCURACY} = {'diff': [9.512500000000146e-05, 9.520899999999888e-05, 9.512500000000146e-05, 9.51530000000006e-05, 9.51530000000006e-05, 9.518099999999974e-05, 9.55279999999975e-05, 9.543099999999999e-05, 9.5097999...</msg>
<status status="PASS" starttime="20201030 11:52:42.172" endtime="20201030 11:52:42.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.190" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.188" endtime="20201030 11:52:42.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.196" level="INFO">VALUE: [9.512500000000146e-05, 9.520899999999888e-05, 9.512500000000146e-05, 9.51530000000006e-05, 9.51530000000006e-05, 9.518099999999974e-05, 9.55279999999975e-05, 9.543099999999999e-05, 9.509799999999485e-05, 9.477799999999675e-05, 9.522199999999897e-05, 9.545799999999965e-05, 9.51530000000006e-05, 9.540300000000085e-05, 9.509699999999538e-05, 9.522199999999897e-05, 9.494499999999906e-05, 9.488899999999384e-05, 9.527699999999778e-05, 9.516700000000017e-05, 9.537500000000171e-05, 9.541700000000042e-05, 9.472200000000541e-05, 9.547199999999922e-05, 9.462500000000096e-05, 9.551399999999793e-05, 9.462500000000096e-05, 9.481999999999546e-05, 9.534700000000257e-05, 9.479099999999685e-05, 9.53200000000029e-05, 9.498600000000523e-05, 9.472299999999795e-05, 9.505599999999614e-05, 9.508399999999528e-05, 9.493000000000001e-05, 9.50000000000048e-05, 9.534700000000257e-05, 9.538900000000128e-05, 9.484700000000207e-05, 9.484800000000154e-05, 9.555499999999717e-05, 9.530600000000333e-05, 9.486100000000164e-05, 9.467999999999976e-05, 9.459700000000182e-05, 9.536200000000161e-05, 9.515200000000112e-05, 9.474999999999761e-05, 9.543099999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:52:42.193" endtime="20201030 11:52:42.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.181" endtime="20201030 11:52:42.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.210" endtime="20201030 11:52:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.204" endtime="20201030 11:52:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.202" endtime="20201030 11:52:42.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.707" endtime="20201030 11:52:42.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.706" endtime="20201030 11:52:42.235"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.258" endtime="20201030 11:52:42.277"></status>
</kw>
<msg timestamp="20201030 11:52:42.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.255" endtime="20201030 11:52:42.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.281" endtime="20201030 11:52:42.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.287" endtime="20201030 11:52:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.247" endtime="20201030 11:52:42.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.242" endtime="20201030 11:52:42.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.310" endtime="20201030 11:52:42.652"></status>
</kw>
<msg timestamp="20201030 11:52:42.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.307" endtime="20201030 11:52:42.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039648903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.662" endtime="20201030 11:52:42.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.680" endtime="20201030 11:52:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.300" endtime="20201030 11:52:42.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.295" endtime="20201030 11:52:42.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.697" level="INFO">${RESULT} = [{'diff': 9.608300000000375e-05}, {'diff': 9.576400000000512e-05}, {'diff': 9.622199999999997e-05}, {'diff': 9.609800000000279e-05}, {'diff': 9.59859999999993e-05}, {'diff': 9.63059999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:42.689" endtime="20201030 11:52:42.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.708" level="INFO">${ACCURACY} = {'diff': [9.608300000000375e-05, 9.576400000000512e-05, 9.622199999999997e-05, 9.609800000000279e-05, 9.59859999999993e-05, 9.63059999999974e-05, 9.568100000000024e-05, 9.590300000000135e-05, 9.588900...</msg>
<status status="PASS" starttime="20201030 11:52:42.699" endtime="20201030 11:52:42.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.719" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.717" endtime="20201030 11:52:42.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.724" level="INFO">VALUE: [9.608300000000375e-05, 9.576400000000512e-05, 9.622199999999997e-05, 9.609800000000279e-05, 9.59859999999993e-05, 9.63059999999974e-05, 9.568100000000024e-05, 9.590300000000135e-05, 9.588900000000178e-05, 9.574999999999861e-05, 9.659700000000382e-05, 9.595800000000015e-05, 9.591600000000144e-05, 9.641700000000142e-05, 9.656899999999774e-05, 9.59859999999993e-05, 9.60409999999981e-05, 9.606899999999724e-05, 9.64859999999998e-05, 9.657000000000415e-05, 9.654199999999807e-05, 9.658300000000425e-05, 9.6027999999998e-05, 9.60130000000059e-05, 9.633399999999653e-05, 9.574999999999861e-05, 9.647200000000022e-05, 9.563899999999459e-05, 9.655600000000458e-05, 9.565200000000162e-05, 9.608400000000322e-05, 9.604199999999757e-05, 9.581900000000393e-05, 9.608299999999681e-05, 9.6333000000004e-05, 9.662500000000296e-05, 9.595800000000015e-05, 9.579099999999785e-05, 9.566700000000067e-05, 9.649999999999936e-05, 9.629199999999782e-05, 9.620799999999347e-05, 9.61530000000016e-05, 9.651399999999893e-05, 9.622199999999997e-05, 9.620899999999988e-05, 9.595800000000015e-05, 9.593000000000101e-05, 9.636100000000314e-05, 9.659700000000382e-05]</msg>
<status status="PASS" starttime="20201030 11:52:42.721" endtime="20201030 11:52:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.710" endtime="20201030 11:52:42.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.737" endtime="20201030 11:52:42.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.733" endtime="20201030 11:52:42.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.730" endtime="20201030 11:52:42.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.237" endtime="20201030 11:52:42.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.236" endtime="20201030 11:52:42.762"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.785" endtime="20201030 11:52:42.804"></status>
</kw>
<msg timestamp="20201030 11:52:42.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.782" endtime="20201030 11:52:42.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.808" endtime="20201030 11:52:42.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.814" endtime="20201030 11:52:42.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.774" endtime="20201030 11:52:42.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.769" endtime="20201030 11:52:42.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.837" endtime="20201030 11:52:43.180"></status>
</kw>
<msg timestamp="20201030 11:52:43.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039499625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.834" endtime="20201030 11:52:43.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039499625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.190" endtime="20201030 11:52:43.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.208" endtime="20201030 11:52:43.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.827" endtime="20201030 11:52:43.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.822" endtime="20201030 11:52:43.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.226" level="INFO">${RESULT} = [{'diff': 9.750000000000036e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.662500000000296e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.729099999999935e-05}, {'diff': 9.722300000000045e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:43.217" endtime="20201030 11:52:43.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.241" level="INFO">${ACCURACY} = {'diff': [9.750000000000036e-05, 9.750000000000036e-05, 9.662500000000296e-05, 9.691700000000192e-05, 9.729099999999935e-05, 9.722300000000045e-05, 9.687499999999627e-05, 9.734800000000404e-05, 9.7304...</msg>
<status status="PASS" starttime="20201030 11:52:43.228" endtime="20201030 11:52:43.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.252" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.250" endtime="20201030 11:52:43.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.257" level="INFO">VALUE: [9.750000000000036e-05, 9.750000000000036e-05, 9.662500000000296e-05, 9.691700000000192e-05, 9.729099999999935e-05, 9.722300000000045e-05, 9.687499999999627e-05, 9.734800000000404e-05, 9.730499999999892e-05, 9.681900000000493e-05, 9.712500000000346e-05, 9.704199999999857e-05, 9.723600000000054e-05, 9.727799999999925e-05, 9.662500000000296e-05, 9.679199999999832e-05, 9.726399999999968e-05, 9.694500000000106e-05, 9.683299999999756e-05, 9.673600000000004e-05, 9.694499999999412e-05, 9.719500000000131e-05, 9.673600000000004e-05, 9.743100000000199e-05, 9.723600000000054e-05, 9.758400000000472e-05, 9.706899999999824e-05, 9.680499999999842e-05, 9.755599999999864e-05, 9.676400000000612e-05, 9.73059999999984e-05, 9.723600000000054e-05, 9.690300000000235e-05, 9.708299999999781e-05, 9.66530000000021e-05, 9.66530000000021e-05, 9.708300000000475e-05, 9.706899999999824e-05, 9.697200000000072e-05, 9.722300000000045e-05, 9.670900000000038e-05, 9.756899999999874e-05, 9.672200000000047e-05, 9.706899999999824e-05, 9.725000000000011e-05, 9.737500000000371e-05, 9.756899999999874e-05, 9.751399999999993e-05, 9.726399999999968e-05, 9.745800000000165e-05]</msg>
<status status="PASS" starttime="20201030 11:52:43.254" endtime="20201030 11:52:43.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.243" endtime="20201030 11:52:43.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.270" endtime="20201030 11:52:43.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.266" endtime="20201030 11:52:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.263" endtime="20201030 11:52:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.764" endtime="20201030 11:52:43.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.763" endtime="20201030 11:52:43.295"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.318" endtime="20201030 11:52:43.338"></status>
</kw>
<msg timestamp="20201030 11:52:43.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.315" endtime="20201030 11:52:43.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.341" endtime="20201030 11:52:43.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.347" endtime="20201030 11:52:43.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.307" endtime="20201030 11:52:43.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.302" endtime="20201030 11:52:43.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.371" endtime="20201030 11:52:43.715"></status>
</kw>
<msg timestamp="20201030 11:52:43.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039773569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.367" endtime="20201030 11:52:43.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039675056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039773569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.725" endtime="20201030 11:52:43.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.743" endtime="20201030 11:52:43.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.360" endtime="20201030 11:52:43.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.355" endtime="20201030 11:52:43.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.761" level="INFO">${RESULT} = [{'diff': 9.851300000000146e-05}, {'diff': 9.806999999999871e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.779199999999932e-05}, {'diff': 9.819400000000283e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:43.752" endtime="20201030 11:52:43.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.770" level="INFO">${ACCURACY} = {'diff': [9.851300000000146e-05, 9.806999999999871e-05, 9.773600000000104e-05, 9.809699999999838e-05, 9.779199999999932e-05, 9.819400000000283e-05, 9.794500000000206e-05, 9.804199999999957e-05, 9.8568...</msg>
<status status="PASS" starttime="20201030 11:52:43.763" endtime="20201030 11:52:43.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.781" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.779" endtime="20201030 11:52:43.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.786" level="INFO">VALUE: [9.851300000000146e-05, 9.806999999999871e-05, 9.773600000000104e-05, 9.809699999999838e-05, 9.779199999999932e-05, 9.819400000000283e-05, 9.794500000000206e-05, 9.804199999999957e-05, 9.856899999999974e-05, 9.858299999999931e-05, 9.76530000000031e-05, 9.827700000000078e-05, 9.79860000000013e-05, 9.844399999999615e-05, 9.77359999999941e-05, 9.777799999999975e-05, 9.790300000000335e-05, 9.761099999999745e-05, 9.829199999999982e-05, 9.820900000000188e-05, 9.805599999999914e-05, 9.8333000000006e-05, 9.805499999999967e-05, 9.765299999999616e-05, 9.766699999999573e-05, 9.825000000000111e-05, 9.795800000000215e-05, 9.800000000000086e-05, 9.773700000000052e-05, 9.847199999999529e-05, 9.795800000000215e-05, 9.816699999999623e-05, 9.78609999999977e-05, 9.850000000000136e-05, 9.831999999999896e-05, 9.791700000000292e-05, 9.844500000000256e-05, 9.813900000000403e-05, 9.825000000000111e-05, 9.840199999999744e-05, 9.843100000000299e-05, 9.808299999999881e-05, 9.798599999999436e-05, 9.78059999999989e-05, 9.813799999999762e-05, 9.781999999999846e-05, 9.859799999999835e-05, 9.849999999999443e-05, 9.854200000000007e-05, 9.783299999999856e-05]</msg>
<status status="PASS" starttime="20201030 11:52:43.783" endtime="20201030 11:52:43.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.772" endtime="20201030 11:52:43.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.799" endtime="20201030 11:52:43.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.794" endtime="20201030 11:52:43.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.792" endtime="20201030 11:52:43.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.297" endtime="20201030 11:52:43.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.296" endtime="20201030 11:52:43.824"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.846" endtime="20201030 11:52:43.868"></status>
</kw>
<msg timestamp="20201030 11:52:43.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.843" endtime="20201030 11:52:43.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.871" endtime="20201030 11:52:43.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.877" endtime="20201030 11:52:43.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.836" endtime="20201030 11:52:43.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.830" endtime="20201030 11:52:43.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.901" endtime="20201030 11:52:44.244"></status>
</kw>
<msg timestamp="20201030 11:52:44.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.897" endtime="20201030 11:52:44.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.253" endtime="20201030 11:52:44.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.272" endtime="20201030 11:52:44.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.890" endtime="20201030 11:52:44.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.885" endtime="20201030 11:52:44.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.289" level="INFO">${RESULT} = [{'diff': 9.883399999999903e-05}, {'diff': 9.927800000000125e-05}, {'diff': 9.876400000000118e-05}, {'diff': 9.954200000000107e-05}, {'diff': 9.906900000000024e-05}, {'diff': 9.945800000000365e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:44.280" endtime="20201030 11:52:44.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.298" level="INFO">${ACCURACY} = {'diff': [9.883399999999903e-05, 9.927800000000125e-05, 9.876400000000118e-05, 9.954200000000107e-05, 9.906900000000024e-05, 9.945800000000365e-05, 9.913900000000503e-05, 9.88609999999987e-05, 9.87220...</msg>
<status status="PASS" starttime="20201030 11:52:44.291" endtime="20201030 11:52:44.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.309" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.307" endtime="20201030 11:52:44.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.314" level="INFO">VALUE: [9.883399999999903e-05, 9.927800000000125e-05, 9.876400000000118e-05, 9.954200000000107e-05, 9.906900000000024e-05, 9.945800000000365e-05, 9.913900000000503e-05, 9.88609999999987e-05, 9.872200000000247e-05, 9.934699999999963e-05, 9.87359999999951e-05, 9.951400000000193e-05, 9.93060000000004e-05, 9.91939999999969e-05, 9.93060000000004e-05, 9.869499999999587e-05, 9.931900000000049e-05, 9.890299999999741e-05, 9.883399999999903e-05, 9.920799999999647e-05, 9.861099999999845e-05, 9.9513999999995e-05, 9.86530000000041e-05, 9.894399999999665e-05, 9.884699999999913e-05, 9.952700000000203e-05, 9.920900000000288e-05, 9.919500000000331e-05, 9.870799999999597e-05, 9.881999999999946e-05, 9.944400000000408e-05, 9.959699999999988e-05, 9.877800000000075e-05, 9.873600000000204e-05, 9.925000000000211e-05, 9.890199999999794e-05, 9.909699999999938e-05, 9.926400000000168e-05, 9.954200000000107e-05, 9.87080000000029e-05, 9.956900000000074e-05, 9.945899999999619e-05, 9.912499999999852e-05, 9.951300000000246e-05, 9.941700000000442e-05, 9.894399999999665e-05, 9.876300000000171e-05, 9.904200000000057e-05, 9.949999999999543e-05, 9.897200000000272e-05]</msg>
<status status="PASS" starttime="20201030 11:52:44.311" endtime="20201030 11:52:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.300" endtime="20201030 11:52:44.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.328" endtime="20201030 11:52:44.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.323" endtime="20201030 11:52:44.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.320" endtime="20201030 11:52:44.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.826" endtime="20201030 11:52:44.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.825" endtime="20201030 11:52:44.354"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.376" endtime="20201030 11:52:44.396"></status>
</kw>
<msg timestamp="20201030 11:52:44.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.373" endtime="20201030 11:52:44.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.399" endtime="20201030 11:52:44.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.406" endtime="20201030 11:52:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.366" endtime="20201030 11:52:44.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.360" endtime="20201030 11:52:44.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.429" endtime="20201030 11:52:44.770"></status>
</kw>
<msg timestamp="20201030 11:52:44.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03946375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:44.426" endtime="20201030 11:52:44.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03946375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:44.780" endtime="20201030 11:52:44.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.798" endtime="20201030 11:52:44.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.418" endtime="20201030 11:52:44.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.414" endtime="20201030 11:52:44.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.815" level="INFO">${RESULT} = [{'diff': 9.977800000000175e-05}, {'diff': 9.96939999999974e-05}, {'diff': 9.98609999999997e-05}, {'diff': 0.00010009700000000038}, {'diff': 9.966699999999773e-05}, {'diff': 0.0001005689999999948}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:44.806" endtime="20201030 11:52:44.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.826" level="INFO">${ACCURACY} = {'diff': [9.977800000000175e-05, 9.96939999999974e-05, 9.98609999999997e-05, 0.00010009700000000038, 9.966699999999773e-05, 0.0001005689999999948, 9.994499999999712e-05, 9.969499999999687e-05, 0.00010...</msg>
<status status="PASS" starttime="20201030 11:52:44.817" endtime="20201030 11:52:44.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.836" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.834" endtime="20201030 11:52:44.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.842" level="INFO">VALUE: [9.977800000000175e-05, 9.96939999999974e-05, 9.98609999999997e-05, 0.00010009700000000038, 9.966699999999773e-05, 0.0001005689999999948, 9.994499999999712e-05, 9.969499999999687e-05, 0.00010058299999999437, 0.00010029200000000182, 0.0001001660000000057, 0.0001001809999999978, 0.0001001660000000057, 0.00010044399999999815, 9.965299999999816e-05, 0.000100028000000002, 9.976400000000218e-05, 0.00010040299999999891, 9.990299999999841e-05, 9.963900000000553e-05, 0.00010005600000000114, 9.990299999999841e-05, 9.972299999999601e-05, 0.000100028000000002, 0.00010048599999999686, 0.00010038899999999934, 0.00010061100000000045, 0.00010051400000000293, 0.00010040299999999891, 9.975000000000261e-05, 9.977699999999534e-05, 0.00010048599999999686, 9.976400000000218e-05, 0.00010043099999999805, 9.966599999999826e-05, 0.00010012499999999952, 0.00010045800000000465, 0.00010005600000000114, 9.98609999999997e-05, 9.988899999999884e-05, 9.98609999999997e-05, 9.966699999999773e-05, 9.98609999999997e-05, 9.96660000000052e-05, 9.997200000000372e-05, 0.00010037499999999977, 0.0001005559999999947, 9.993099999999755e-05, 0.00010002700000000253, 0.000100028000000002]</msg>
<status status="PASS" starttime="20201030 11:52:44.839" endtime="20201030 11:52:44.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.827" endtime="20201030 11:52:44.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.854" endtime="20201030 11:52:44.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.850" endtime="20201030 11:52:44.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.847" endtime="20201030 11:52:44.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.356" endtime="20201030 11:52:44.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.355" endtime="20201030 11:52:44.880"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.902" endtime="20201030 11:52:44.922"></status>
</kw>
<msg timestamp="20201030 11:52:44.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.899" endtime="20201030 11:52:44.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.925" endtime="20201030 11:52:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.931" endtime="20201030 11:52:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.892" endtime="20201030 11:52:44.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.886" endtime="20201030 11:52:44.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.955" endtime="20201030 11:52:45.297"></status>
</kw>
<msg timestamp="20201030 11:52:45.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039410361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.952" endtime="20201030 11:52:45.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039410361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.306" endtime="20201030 11:52:45.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.325" endtime="20201030 11:52:45.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.944" endtime="20201030 11:52:45.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.940" endtime="20201030 11:52:45.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:45.342" level="INFO">${RESULT} = [{'diff': 0.00010111100000000095}, {'diff': 0.0001008610000000007}, {'diff': 0.0001008610000000007}, {'diff': 0.00010155600000000264}, {'diff': 0.00010138900000000034}, {'diff': 0.00010095799999999822...</msg>
<status status="PASS" starttime="20201030 11:52:45.333" endtime="20201030 11:52:45.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:45.353" level="INFO">${ACCURACY} = {'diff': [0.00010111100000000095, 0.0001008610000000007, 0.0001008610000000007, 0.00010155600000000264, 0.00010138900000000034, 0.00010095799999999822, 0.00010108299999999487, 0.00010140200000000044, ...</msg>
<status status="PASS" starttime="20201030 11:52:45.344" endtime="20201030 11:52:45.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.364" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:52:45.361" endtime="20201030 11:52:45.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.369" level="INFO">VALUE: [0.00010111100000000095, 0.0001008610000000007, 0.0001008610000000007, 0.00010155600000000264, 0.00010138900000000034, 0.00010095799999999822, 0.00010108299999999487, 0.00010140200000000044, 0.00010062500000000002, 0.00010127800000000325, 0.00010137500000000077, 0.00010117999999999933, 0.0001009730000000042, 0.00010134699999999469, 0.0001013610000000012, 0.0001013339999999946, 0.00010136099999999426, 0.00010147200000000522, 0.000101513999999997, 0.00010072299999999701, 0.0001014860000000048, 0.00010158400000000178, 0.00010130500000000292, 0.00010062500000000002, 0.0001009860000000043, 0.00010083299999999462, 0.00010100000000000386, 0.00010061100000000045, 0.00010159800000000135, 0.00010106999999999478, 0.00010059700000000088, 0.00010081900000000199, 0.00010073600000000404, 0.00010140200000000044, 0.00010062500000000002, 0.00010113900000000009, 0.0001008610000000007, 0.00010123600000000454, 0.00010138900000000034, 0.00010124999999999718, 0.00010148599999999786, 0.00010066699999999873, 0.00010133300000000206, 0.00010132000000000196, 0.00010074999999999668, 0.00010093099999999855, 0.00010145899999999819, 0.00010137500000000077, 0.00010104199999999564, 0.00010113800000000062]</msg>
<status status="PASS" starttime="20201030 11:52:45.366" endtime="20201030 11:52:45.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.354" endtime="20201030 11:52:45.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:45.381" endtime="20201030 11:52:45.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.377" endtime="20201030 11:52:45.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.375" endtime="20201030 11:52:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.882" endtime="20201030 11:52:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.880" endtime="20201030 11:52:45.407"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.429" endtime="20201030 11:52:45.449"></status>
</kw>
<msg timestamp="20201030 11:52:45.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.426" endtime="20201030 11:52:45.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.452" endtime="20201030 11:52:45.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.459" endtime="20201030 11:52:45.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.419" endtime="20201030 11:52:45.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.413" endtime="20201030 11:52:45.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.482" endtime="20201030 11:52:45.826"></status>
</kw>
<msg timestamp="20201030 11:52:45.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039654028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.479" endtime="20201030 11:52:45.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039654028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.835" endtime="20201030 11:52:45.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.853" endtime="20201030 11:52:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.472" endtime="20201030 11:52:45.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.467" endtime="20201030 11:52:45.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:45.870" level="INFO">${RESULT} = [{'diff': 0.000102513999999998}, {'diff': 0.00010230500000000392}, {'diff': 0.00010247199999999929}, {'diff': 0.00010226399999999775}, {'diff': 0.00010176300000000471}, {'diff': 0.00010245900000000613...</msg>
<status status="PASS" starttime="20201030 11:52:45.862" endtime="20201030 11:52:45.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:45.880" level="INFO">${ACCURACY} = {'diff': [0.000102513999999998, 0.00010230500000000392, 0.00010247199999999929, 0.00010226399999999775, 0.00010176300000000471, 0.00010245900000000613, 0.00010186099999999476, 0.00010187500000000127, ...</msg>
<status status="PASS" starttime="20201030 11:52:45.873" endtime="20201030 11:52:45.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.891" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:52:45.888" endtime="20201030 11:52:45.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.896" level="INFO">VALUE: [0.000102513999999998, 0.00010230500000000392, 0.00010247199999999929, 0.00010226399999999775, 0.00010176300000000471, 0.00010245900000000613, 0.00010186099999999476, 0.00010187500000000127, 0.00010179199999999639, 0.00010172199999999854, 0.00010165300000000016, 0.00010231900000000349, 0.00010207000000000271, 0.00010177799999999682, 0.00010245799999999972, 0.00010159700000000188, 0.00010258299999999637, 0.00010200000000000486, 0.00010222299999999851, 0.00010193099999999955, 0.00010247199999999929, 0.00010229200000000382, 0.00010247199999999929, 0.0001023480000000021, 0.00010209700000000238, 0.00010204200000000357, 0.00010170799999999897, 0.00010237499999999483, 0.00010166699999999973, 0.00010255499999999723, 0.00010254199999999714, 0.00010194499999999912, 0.00010208399999999535, 0.00010244400000000015, 0.00010244499999999962, 0.00010213900000000109, 0.00010243100000000005, 0.00010245799999999972, 0.00010165300000000016, 0.00010158300000000231, 0.00010259800000000235, 0.00010255499999999723, 0.0001020689999999963, 0.00010230499999999698, 0.00010161199999999398, 0.00010177799999999682, 0.00010225000000000511, 0.00010254199999999714, 0.00010247199999999929, 0.0001022359999999986]</msg>
<status status="PASS" starttime="20201030 11:52:45.893" endtime="20201030 11:52:45.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.881" endtime="20201030 11:52:45.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:45.908" endtime="20201030 11:52:45.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.904" endtime="20201030 11:52:45.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.902" endtime="20201030 11:52:45.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.409" endtime="20201030 11:52:45.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.407" endtime="20201030 11:52:45.934"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.956" endtime="20201030 11:52:45.978"></status>
</kw>
<msg timestamp="20201030 11:52:45.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.953" endtime="20201030 11:52:45.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.981" endtime="20201030 11:52:45.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.987" endtime="20201030 11:52:45.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.946" endtime="20201030 11:52:45.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.940" endtime="20201030 11:52:45.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.011" endtime="20201030 11:52:46.353"></status>
</kw>
<msg timestamp="20201030 11:52:46.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.008" endtime="20201030 11:52:46.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.362" endtime="20201030 11:52:46.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.380" endtime="20201030 11:52:46.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.000" endtime="20201030 11:52:46.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.995" endtime="20201030 11:52:46.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:46.397" level="INFO">${RESULT} = [{'diff': 0.00010273699999999858}, {'diff': 0.00010287500000000227}, {'diff': 0.000103513999999999}, {'diff': 0.00010356900000000474}, {'diff': 0.00010320800000000047}, {'diff': 0.00010341700000000148...</msg>
<status status="PASS" starttime="20201030 11:52:46.389" endtime="20201030 11:52:46.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:46.406" level="INFO">${ACCURACY} = {'diff': [0.00010273699999999858, 0.00010287500000000227, 0.000103513999999999, 0.00010356900000000474, 0.00010320800000000047, 0.00010341700000000148, 0.00010261100000000245, 0.00010261199999999499, ...</msg>
<status status="PASS" starttime="20201030 11:52:46.399" endtime="20201030 11:52:46.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.417" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:52:46.415" endtime="20201030 11:52:46.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.423" level="INFO">VALUE: [0.00010273699999999858, 0.00010287500000000227, 0.000103513999999999, 0.00010356900000000474, 0.00010320800000000047, 0.00010341700000000148, 0.00010261100000000245, 0.00010261199999999499, 0.00010262499999999508, 0.00010279199999999739, 0.00010266700000000073, 0.00010274999999999868, 0.00010315300000000166, 0.00010322200000000004, 0.00010276399999999825, 0.0001026810000000003, 0.00010345900000000019, 0.00010337500000000277, 0.0001026810000000003, 0.00010329199999999789, 0.00010330499999999798, 0.00010322200000000004, 0.0001031940000000009, 0.0001026810000000003, 0.00010275000000000561, 0.00010284700000000313, 0.00010274999999999868, 0.00010337499999999583, 0.00010349999999999943, 0.00010344499999999368, 0.00010295800000000022, 0.00010330599999999746, 0.00010262499999999508, 0.00010280599999999696, 0.00010281900000000399, 0.00010302799999999807, 0.00010308299999999687, 0.00010295899999999969, 0.00010358300000000431, 0.00010343000000000158, 0.00010343000000000158, 0.00010302699999999859, 0.00010291700000000098, 0.00010295800000000022, 0.00010363799999999618, 0.00010348599999999986, 0.00010362500000000302, 0.00010302799999999807, 0.00010361100000000345, 0.0001028480000000026]</msg>
<status status="PASS" starttime="20201030 11:52:46.420" endtime="20201030 11:52:46.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.408" endtime="20201030 11:52:46.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:46.437" endtime="20201030 11:52:46.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.431" endtime="20201030 11:52:46.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.428" endtime="20201030 11:52:46.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.936" endtime="20201030 11:52:46.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.934" endtime="20201030 11:52:46.462"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.485" endtime="20201030 11:52:46.504"></status>
</kw>
<msg timestamp="20201030 11:52:46.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.481" endtime="20201030 11:52:46.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.508" endtime="20201030 11:52:46.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.514" endtime="20201030 11:52:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.474" endtime="20201030 11:52:46.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.468" endtime="20201030 11:52:46.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.537" endtime="20201030 11:52:46.879"></status>
</kw>
<msg timestamp="20201030 11:52:46.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039591333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.534" endtime="20201030 11:52:46.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039486917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039591333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.889" endtime="20201030 11:52:46.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.907" endtime="20201030 11:52:46.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.527" endtime="20201030 11:52:46.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.522" endtime="20201030 11:52:46.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:46.924" level="INFO">${RESULT} = [{'diff': 0.00010441599999999607}, {'diff': 0.0001043060000000054}, {'diff': 0.00010454199999999914}, {'diff': 0.0001045689999999988}, {'diff': 0.00010420900000000094}, {'diff': 0.00010427799999999932...</msg>
<status status="PASS" starttime="20201030 11:52:46.915" endtime="20201030 11:52:46.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:46.934" level="INFO">${ACCURACY} = {'diff': [0.00010441599999999607, 0.0001043060000000054, 0.00010454199999999914, 0.0001045689999999988, 0.00010420900000000094, 0.00010427799999999932, 0.00010430599999999846, 0.00010440299999999597, ...</msg>
<status status="PASS" starttime="20201030 11:52:46.926" endtime="20201030 11:52:46.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.945" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:52:46.943" endtime="20201030 11:52:46.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.950" level="INFO">VALUE: [0.00010441599999999607, 0.0001043060000000054, 0.00010454199999999914, 0.0001045689999999988, 0.00010420900000000094, 0.00010427799999999932, 0.00010430599999999846, 0.00010440299999999597, 0.00010394400000000165, 0.00010365299999999522, 0.00010445800000000172, 0.00010406999999999778, 0.0001042219999999941, 0.00010398600000000036, 0.00010433300000000506, 0.00010374999999999968, 0.00010372200000000054, 0.00010408299999999787, 0.00010398600000000036, 0.00010398600000000036, 0.00010445900000000119, 0.00010420800000000147, 0.00010448700000000033, 0.00010394500000000112, 0.00010416699999999529, 0.0001041940000000019, 0.00010370900000000044, 0.00010366699999999479, 0.0001037360000000001, 0.000104514, 0.0001040559999999982, 0.00010434700000000463, 0.00010437500000000377, 0.00010456999999999828, 0.00010434700000000463, 0.00010416699999999529, 0.000104514, 0.00010415200000000319, 0.00010382000000000446, 0.00010381999999999753, 0.00010412499999999658, 0.0001045559999999987, 0.00010394499999999418, 0.00010392999999999514, 0.00010416600000000276, 0.00010416700000000223, 0.00010422200000000104, 0.0001038339999999971, 0.00010425000000000018, 0.0001036810000000013]</msg>
<status status="PASS" starttime="20201030 11:52:46.947" endtime="20201030 11:52:46.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.936" endtime="20201030 11:52:46.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:46.967" endtime="20201030 11:52:46.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.963" endtime="20201030 11:52:46.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.960" endtime="20201030 11:52:46.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.464" endtime="20201030 11:52:46.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.463" endtime="20201030 11:52:46.992"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.015" endtime="20201030 11:52:47.035"></status>
</kw>
<msg timestamp="20201030 11:52:47.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.012" endtime="20201030 11:52:47.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.038" endtime="20201030 11:52:47.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.044" endtime="20201030 11:52:47.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.004" endtime="20201030 11:52:47.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.998" endtime="20201030 11:52:47.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.068" endtime="20201030 11:52:47.410"></status>
</kw>
<msg timestamp="20201030 11:52:47.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.065" endtime="20201030 11:52:47.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039556653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.419" endtime="20201030 11:52:47.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.438" endtime="20201030 11:52:47.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.057" endtime="20201030 11:52:47.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.053" endtime="20201030 11:52:47.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:47.455" level="INFO">${RESULT} = [{'diff': 0.00010463900000000359}, {'diff': 0.00010495800000000222}, {'diff': 0.00010475000000000068}, {'diff': 0.00010484700000000513}, {'diff': 0.00010463899999999665}, {'diff': 0.000105179999999996...</msg>
<status status="PASS" starttime="20201030 11:52:47.446" endtime="20201030 11:52:47.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:47.466" level="INFO">${ACCURACY} = {'diff': [0.00010463900000000359, 0.00010495800000000222, 0.00010475000000000068, 0.00010484700000000513, 0.00010463899999999665, 0.00010517999999999639, 0.00010519500000000237, 0.00010505499999999973...</msg>
<status status="PASS" starttime="20201030 11:52:47.457" endtime="20201030 11:52:47.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.477" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:52:47.475" endtime="20201030 11:52:47.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.483" level="INFO">VALUE: [0.00010463900000000359, 0.00010495800000000222, 0.00010475000000000068, 0.00010484700000000513, 0.00010463899999999665, 0.00010517999999999639, 0.00010519500000000237, 0.00010505499999999973, 0.00010487499999999733, 0.00010495799999999528, 0.0001048610000000047, 0.00010555600000000664, 0.00010481999999999853, 0.00010482000000000546, 0.00010497200000000179, 0.00010491599999999657, 0.00010466600000000326, 0.00010500000000000093, 0.00010522299999999457, 0.00010540300000000391, 0.0001055689999999998, 0.00010504100000000016, 0.00010550000000000143, 0.00010543099999999611, 0.00010548599999999492, 0.0001052360000000016, 0.0001050689999999993, 0.00010477799999999982, 0.00010525000000000118, 0.00010552800000000057, 0.00010525000000000118, 0.00010466699999999579, 0.0001046940000000024, 0.00010465199999999675, 0.00010506999999999878, 0.0001055559999999997, 0.00010480599999999896, 0.00010468000000000283, 0.0001053339999999986, 0.00010504199999999964, 0.00010470800000000197, 0.00010470799999999503, 0.00010536099999999826, 0.00010554200000000014, 0.00010540299999999697, 0.00010467999999999589, 0.00010538900000000434, 0.00010516700000000323, 0.00010466700000000273, 0.00010494400000000265]</msg>
<status status="PASS" starttime="20201030 11:52:47.479" endtime="20201030 11:52:47.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.468" endtime="20201030 11:52:47.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:47.495" endtime="20201030 11:52:47.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.491" endtime="20201030 11:52:47.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.488" endtime="20201030 11:52:47.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.994" endtime="20201030 11:52:47.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.993" endtime="20201030 11:52:47.520"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.543" endtime="20201030 11:52:47.563"></status>
</kw>
<msg timestamp="20201030 11:52:47.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.540" endtime="20201030 11:52:47.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.566" endtime="20201030 11:52:47.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.573" endtime="20201030 11:52:47.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.533" endtime="20201030 11:52:47.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.527" endtime="20201030 11:52:47.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.596" endtime="20201030 11:52:47.940"></status>
</kw>
<msg timestamp="20201030 11:52:47.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.593" endtime="20201030 11:52:47.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039707875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.949" endtime="20201030 11:52:47.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.967" endtime="20201030 11:52:47.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.585" endtime="20201030 11:52:47.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.581" endtime="20201030 11:52:47.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:47.985" level="INFO">${RESULT} = [{'diff': 0.00010575000000000168}, {'diff': 0.00010643100000000405}, {'diff': 0.00010580499999999354}, {'diff': 0.00010598600000000236}, {'diff': 0.00010568099999999636}, {'diff': 0.000105971999999995...</msg>
<status status="PASS" starttime="20201030 11:52:47.976" endtime="20201030 11:52:47.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:47.994" level="INFO">${ACCURACY} = {'diff': [0.00010575000000000168, 0.00010643100000000405, 0.00010580499999999354, 0.00010598600000000236, 0.00010568099999999636, 0.00010597199999999585, 0.00010591699999999704, 0.00010613900000000509...</msg>
<status status="PASS" starttime="20201030 11:52:47.987" endtime="20201030 11:52:47.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.005" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:52:48.002" endtime="20201030 11:52:48.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.010" level="INFO">VALUE: [0.00010575000000000168, 0.00010643100000000405, 0.00010580499999999354, 0.00010598600000000236, 0.00010568099999999636, 0.00010597199999999585, 0.00010591699999999704, 0.00010613900000000509, 0.0001061810000000038, 0.00010644400000000415, 0.00010593099999999661, 0.00010565300000000416, 0.00010637499999999883, 0.00010637499999999883, 0.0001058889999999979, 0.00010572200000000254, 0.00010648599999999592, 0.00010626400000000175, 0.00010625000000000218, 0.00010644500000000362, 0.00010648600000000286, 0.00010579200000000039, 0.00010650000000000243, 0.00010577800000000082, 0.00010576400000000125, 0.00010647199999999635, 0.0001060690000000003, 0.00010573700000000158, 0.00010580599999999996, 0.00010659699999999994, 0.00010609799999999892, 0.00010637500000000577, 0.00010645899999999625, 0.00010615300000000466, 0.00010622200000000304, 0.00010608399999999935, 0.00010631900000000055, 0.00010595800000000322, 0.00010565300000000416, 0.00010616700000000423, 0.00010613899999999815, 0.00010629199999999395, 0.00010594400000000365, 0.00010637499999999883, 0.00010622200000000304, 0.00010636099999999926, 0.00010593000000000408, 0.00010580599999999996, 0.00010569499999999593, 0.00010579100000000091]</msg>
<status status="PASS" starttime="20201030 11:52:48.007" endtime="20201030 11:52:48.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.995" endtime="20201030 11:52:48.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:48.022" endtime="20201030 11:52:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.018" endtime="20201030 11:52:48.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.015" endtime="20201030 11:52:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.522" endtime="20201030 11:52:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.521" endtime="20201030 11:52:48.048"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.070" endtime="20201030 11:52:48.096"></status>
</kw>
<msg timestamp="20201030 11:52:48.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.067" endtime="20201030 11:52:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.100" endtime="20201030 11:52:48.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.106" endtime="20201030 11:52:48.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.060" endtime="20201030 11:52:48.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.054" endtime="20201030 11:52:48.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.130" endtime="20201030 11:52:48.470"></status>
</kw>
<msg timestamp="20201030 11:52:48.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045500278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045607056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.126" endtime="20201030 11:52:48.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045500278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045607056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.479" endtime="20201030 11:52:48.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.497" endtime="20201030 11:52:48.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.119" endtime="20201030 11:52:48.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.114" endtime="20201030 11:52:48.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:48.515" level="INFO">${RESULT} = [{'diff': 0.00010677800000000182}, {'diff': 0.00010740299999999897}, {'diff': 0.00010694399999999771}, {'diff': 0.00010754200000000214}, {'diff': 0.00010718099999999786}, {'diff': 0.000107500000000003...</msg>
<status status="PASS" starttime="20201030 11:52:48.506" endtime="20201030 11:52:48.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:48.524" level="INFO">${ACCURACY} = {'diff': [0.00010677800000000182, 0.00010740299999999897, 0.00010694399999999771, 0.00010754200000000214, 0.00010718099999999786, 0.00010750000000000343, 0.0001073889999999994, 0.00010727799999999538,...</msg>
<status status="PASS" starttime="20201030 11:52:48.517" endtime="20201030 11:52:48.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.534" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:52:48.532" endtime="20201030 11:52:48.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.540" level="INFO">VALUE: [0.00010677800000000182, 0.00010740299999999897, 0.00010694399999999771, 0.00010754200000000214, 0.00010718099999999786, 0.00010750000000000343, 0.0001073889999999994, 0.00010727799999999538, 0.00010748699999999639, 0.0001073889999999994, 0.00010722200000000404, 0.00010691599999999857, 0.00010750000000000343, 0.00010748599999999692, 0.00010761100000000051, 0.0001068340000000001, 0.00010718099999999786, 0.00010675000000000268, 0.0001066940000000044, 0.00010676400000000225, 0.00010719399999999796, 0.00010745800000000472, 0.00010713899999999915, 0.00010718099999999786, 0.00010761100000000051, 0.00010726400000000275, 0.00010692999999999814, 0.00010747199999999735, 0.00010730600000000146, 0.00010758300000000137, 0.00010711199999999949, 0.00010691699999999804, 0.00010663899999999865, 0.0001067089999999965, 0.00010751399999999606, 0.000107514000000003, 0.00010684700000000019, 0.000107514000000003, 0.00010682000000000053, 0.00010679200000000139, 0.00010729199999999495, 0.00010695899999999675, 0.00010740299999999897, 0.0001070969999999935, 0.00010690299999999847, 0.00010712499999999958, 0.00010677700000000234, 0.00010751399999999606, 0.00010677700000000234, 0.0001067219999999966]</msg>
<status status="PASS" starttime="20201030 11:52:48.537" endtime="20201030 11:52:48.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.525" endtime="20201030 11:52:48.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:48.554" endtime="20201030 11:52:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.548" endtime="20201030 11:52:48.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.545" endtime="20201030 11:52:48.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.050" endtime="20201030 11:52:48.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.049" endtime="20201030 11:52:48.579"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.602" endtime="20201030 11:52:48.622"></status>
</kw>
<msg timestamp="20201030 11:52:48.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.598" endtime="20201030 11:52:48.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.625" endtime="20201030 11:52:48.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.631" endtime="20201030 11:52:48.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.591" endtime="20201030 11:52:48.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.585" endtime="20201030 11:52:48.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.654" endtime="20201030 11:52:48.995"></status>
</kw>
<msg timestamp="20201030 11:52:49.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039514319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.651" endtime="20201030 11:52:49.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039514319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.005" endtime="20201030 11:52:49.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.023" endtime="20201030 11:52:49.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.644" endtime="20201030 11:52:49.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.639" endtime="20201030 11:52:49.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:49.040" level="INFO">${RESULT} = [{'diff': 0.00010791699999999904}, {'diff': 0.00010858400000000185}, {'diff': 0.00010825000000000418}, {'diff': 0.00010849999999999749}, {'diff': 0.0001078340000000011}, {'diff': 0.0001083750000000008...</msg>
<status status="PASS" starttime="20201030 11:52:49.031" endtime="20201030 11:52:49.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:49.050" level="INFO">${ACCURACY} = {'diff': [0.00010791699999999904, 0.00010858400000000185, 0.00010825000000000418, 0.00010849999999999749, 0.0001078340000000011, 0.00010837500000000083, 0.00010825000000000418, 0.00010844499999999868,...</msg>
<status status="PASS" starttime="20201030 11:52:49.042" endtime="20201030 11:52:49.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.061" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:52:49.059" endtime="20201030 11:52:49.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.066" level="INFO">VALUE: [0.00010791699999999904, 0.00010858400000000185, 0.00010825000000000418, 0.00010849999999999749, 0.0001078340000000011, 0.00010837500000000083, 0.00010825000000000418, 0.00010844499999999868, 0.00010776400000000325, 0.00010816699999999929, 0.00010791699999999904, 0.00010824999999999724, 0.00010848599999999792, 0.00010855500000000323, 0.00010802800000000307, 0.00010776399999999631, 0.00010800000000000393, 0.00010842999999999964, 0.00010859800000000142, 0.00010784699999999425, 0.00010815299999999972, 0.00010777800000000282, 0.00010765299999999922, 0.00010848599999999792, 0.00010815299999999972, 0.00010840299999999997, 0.00010776400000000325, 0.00010819399999999896, 0.00010783300000000162, 0.00010836100000000126, 0.00010852799999999663, 0.00010837499999999389, 0.0001077360000000041, 0.00010781900000000205, 0.0001080560000000022, 0.00010794399999999871, 0.00010836200000000074, 0.00010780600000000196, 0.00010851399999999706, 0.0001080140000000035, 0.0001080560000000022, 0.00010834700000000169, 0.00010843099999999911, 0.00010852699999999715, 0.00010797199999999785, 0.00010767999999999889, 0.00010777800000000282, 0.00010777799999999588, 0.00010833300000000212, 0.00010774999999999674]</msg>
<status status="PASS" starttime="20201030 11:52:49.063" endtime="20201030 11:52:49.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.052" endtime="20201030 11:52:49.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.079" endtime="20201030 11:52:49.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.075" endtime="20201030 11:52:49.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.072" endtime="20201030 11:52:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.581" endtime="20201030 11:52:49.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.580" endtime="20201030 11:52:49.104"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.127" endtime="20201030 11:52:49.147"></status>
</kw>
<msg timestamp="20201030 11:52:49.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.123" endtime="20201030 11:52:49.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.150" endtime="20201030 11:52:49.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.156" endtime="20201030 11:52:49.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.116" endtime="20201030 11:52:49.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.111" endtime="20201030 11:52:49.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.180" endtime="20201030 11:52:49.521"></status>
</kw>
<msg timestamp="20201030 11:52:49.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039630444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.176" endtime="20201030 11:52:49.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039630444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.531" endtime="20201030 11:52:49.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.549" endtime="20201030 11:52:49.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.169" endtime="20201030 11:52:49.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.164" endtime="20201030 11:52:49.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:49.566" level="INFO">${RESULT} = [{'diff': 0.00010948599999999892}, {'diff': 0.00010876399999999731}, {'diff': 0.0001090690000000033}, {'diff': 0.00010893099999999961}, {'diff': 0.0001087360000000051}, {'diff': 0.00010938800000000193...</msg>
<status status="PASS" starttime="20201030 11:52:49.557" endtime="20201030 11:52:49.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:49.577" level="INFO">${ACCURACY} = {'diff': [0.00010948599999999892, 0.00010876399999999731, 0.0001090690000000033, 0.00010893099999999961, 0.0001087360000000051, 0.00010938800000000193, 0.00010951399999999806, 0.00010893000000000014, ...</msg>
<status status="PASS" starttime="20201030 11:52:49.568" endtime="20201030 11:52:49.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.588" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:52:49.585" endtime="20201030 11:52:49.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.593" level="INFO">VALUE: [0.00010948599999999892, 0.00010876399999999731, 0.0001090690000000033, 0.00010893099999999961, 0.0001087360000000051, 0.00010938800000000193, 0.00010951399999999806, 0.00010893000000000014, 0.00010913900000000115, 0.00010891700000000004, 0.00010901299999999808, 0.0001090560000000032, 0.00010883300000000262, 0.00010933299999999618, 0.00010916700000000029, 0.00010877700000000434, 0.00010919499999999943, 0.0001090419999999967, 0.00010891600000000057, 0.00010919499999999943, 0.00010898599999999842, 0.00010944499999999968, 0.00010945799999999978, 0.0001087089999999985, 0.00010856899999999586, 0.0001093890000000014, 0.00010880499999999654, 0.00010951399999999806, 0.00010906899999999636, 0.00010865300000000022, 0.00010944400000000021, 0.00010954200000000414, 0.00010915300000000072, 0.00010956899999999686, 0.00010937500000000183, 0.00010948599999999892, 0.0001093890000000014, 0.00010945799999999978, 0.00010869399999999946, 0.00010945799999999978, 0.00010908400000000235, 0.0001088890000000009, 0.00010949999999999849, 0.00010911100000000201, 0.00010943000000000064, 0.00010897199999999885, 0.00010941700000000054, 0.00010944499999999968, 0.00010891700000000004, 0.00010944499999999968]</msg>
<status status="PASS" starttime="20201030 11:52:49.590" endtime="20201030 11:52:49.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.579" endtime="20201030 11:52:49.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.605" endtime="20201030 11:52:49.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.601" endtime="20201030 11:52:49.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.599" endtime="20201030 11:52:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.106" endtime="20201030 11:52:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.105" endtime="20201030 11:52:49.631"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.653" endtime="20201030 11:52:49.673"></status>
</kw>
<msg timestamp="20201030 11:52:49.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.650" endtime="20201030 11:52:49.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.677" endtime="20201030 11:52:49.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.683" endtime="20201030 11:52:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.643" endtime="20201030 11:52:49.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.637" endtime="20201030 11:52:49.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.706" endtime="20201030 11:52:50.052"></status>
</kw>
<msg timestamp="20201030 11:52:50.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039523, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039633042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:49.703" endtime="20201030 11:52:50.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039523, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039633042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:50.061" endtime="20201030 11:52:50.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.079" endtime="20201030 11:52:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.696" endtime="20201030 11:52:50.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.691" endtime="20201030 11:52:50.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:50.096" level="INFO">${RESULT} = [{'diff': 0.0001100419999999977}, {'diff': 0.00011016700000000129}, {'diff': 0.00010974999999999874}, {'diff': 0.00011023599999999967}, {'diff': 0.00010997299999999932}, {'diff': 0.0001104310000000011...</msg>
<status status="PASS" starttime="20201030 11:52:50.088" endtime="20201030 11:52:50.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:50.105" level="INFO">${ACCURACY} = {'diff': [0.0001100419999999977, 0.00011016700000000129, 0.00010974999999999874, 0.00011023599999999967, 0.00010997299999999932, 0.00011043100000000111, 0.00010990300000000147, 0.00011008400000000335,...</msg>
<status status="PASS" starttime="20201030 11:52:50.099" endtime="20201030 11:52:50.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.116" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:52:50.114" endtime="20201030 11:52:50.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.122" level="INFO">VALUE: [0.0001100419999999977, 0.00011016700000000129, 0.00010974999999999874, 0.00011023599999999967, 0.00010997299999999932, 0.00011043100000000111, 0.00010990300000000147, 0.00011008400000000335, 0.00010994400000000071, 0.00011036099999999632, 0.000110209, 0.00010977799999999788, 0.00010962500000000208, 0.00010976399999999831, 0.00011063899999999571, 0.00011044500000000068, 0.00011058299999999743, 0.00010977799999999788, 0.00011061100000000351, 0.00010965200000000175, 0.00011036099999999632, 0.000110209, 0.00010980599999999702, 0.0001100690000000043, 0.00011034700000000369, 0.0001105419999999982, 0.0001102220000000001, 0.00011022299999999957, 0.0001098890000000019, 0.0001102220000000001, 0.00011001399999999856, 0.00011052799999999863, 0.00010968000000000089, 0.00011008400000000335, 0.00010980600000000396, 0.00010969400000000046, 0.0001097089999999995, 0.0001104299999999947, 0.0001098340000000031, 0.00011015300000000172, 0.00010977799999999788, 0.00010983399999999616, 0.00011030499999999804, 0.00011034699999999675, 0.00010962500000000208, 0.00010965300000000122, 0.00010980599999999702, 0.00010976300000000577, 0.00011002800000000507, 0.00010983299999999668]</msg>
<status status="PASS" starttime="20201030 11:52:50.119" endtime="20201030 11:52:50.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.107" endtime="20201030 11:52:50.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:50.134" endtime="20201030 11:52:50.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.130" endtime="20201030 11:52:50.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.127" endtime="20201030 11:52:50.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.633" endtime="20201030 11:52:50.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.632" endtime="20201030 11:52:50.159"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.182" endtime="20201030 11:52:50.204"></status>
</kw>
<msg timestamp="20201030 11:52:50.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.179" endtime="20201030 11:52:50.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.207" endtime="20201030 11:52:50.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.214" endtime="20201030 11:52:50.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.172" endtime="20201030 11:52:50.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.166" endtime="20201030 11:52:50.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.237" endtime="20201030 11:52:50.579"></status>
</kw>
<msg timestamp="20201030 11:52:50.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040982681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041094167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:50.234" endtime="20201030 11:52:50.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040982681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041094167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:50.588" endtime="20201030 11:52:50.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.606" endtime="20201030 11:52:50.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.226" endtime="20201030 11:52:50.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.222" endtime="20201030 11:52:50.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:50.623" level="INFO">${RESULT} = [{'diff': 0.00011148600000000092}, {'diff': 0.00011104200000000564}, {'diff': 0.00011101300000000008}, {'diff': 0.00011144400000000221}, {'diff': 0.00011119500000000143}, {'diff': 0.000111194000000001...</msg>
<status status="PASS" starttime="20201030 11:52:50.615" endtime="20201030 11:52:50.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:50.633" level="INFO">${ACCURACY} = {'diff': [0.00011148600000000092, 0.00011104200000000564, 0.00011101300000000008, 0.00011144400000000221, 0.00011119500000000143, 0.00011119400000000196, 0.00011088899999999596, 0.00011080599999999802...</msg>
<status status="PASS" starttime="20201030 11:52:50.625" endtime="20201030 11:52:50.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.643" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:50.641" endtime="20201030 11:52:50.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.649" level="INFO">VALUE: [0.00011148600000000092, 0.00011104200000000564, 0.00011101300000000008, 0.00011144400000000221, 0.00011119500000000143, 0.00011119400000000196, 0.00011088899999999596, 0.00011080599999999802, 0.00011108299999999793, 0.00011091700000000204, 0.00011131999999999809, 0.00011120799999999459, 0.00011148600000000092, 0.00011070800000000103, 0.00011065199999999581, 0.00011076399999999931, 0.00011061100000000351, 0.00011137499999999689, 0.0001108890000000029, 0.00011077799999999888, 0.00011143100000000211, 0.00011127799999999938, 0.00011120800000000153, 0.00011080600000000496, 0.00011059799999999648, 0.00011130499999999904, 0.00011113899999999621, 0.00011111099999999707, 0.00011099999999999999, 0.00011123600000000067, 0.00011091700000000204, 0.00011145800000000178, 0.00011112500000000358, 0.00011133300000000512, 0.00011065299999999528, 0.00011087500000000333, 0.00011136100000000426, 0.00011145799999999484, 0.00011136100000000426, 0.00011077799999999888, 0.0001115419999999992, 0.00011133299999999818, 0.00011090299999999553, 0.00011062499999999614, 0.00011151400000000006, 0.00011084699999999725, 0.00011125000000000024, 0.0001107090000000005, 0.0001110549999999988, 0.00011083299999999768]</msg>
<status status="PASS" starttime="20201030 11:52:50.646" endtime="20201030 11:52:50.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.634" endtime="20201030 11:52:50.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:50.663" endtime="20201030 11:52:50.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.657" endtime="20201030 11:52:50.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.654" endtime="20201030 11:52:50.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.162" endtime="20201030 11:52:50.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.160" endtime="20201030 11:52:50.688"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.711" endtime="20201030 11:52:50.731"></status>
</kw>
<msg timestamp="20201030 11:52:50.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.707" endtime="20201030 11:52:50.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.734" endtime="20201030 11:52:50.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.741" endtime="20201030 11:52:50.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.700" endtime="20201030 11:52:50.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.694" endtime="20201030 11:52:50.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.764" endtime="20201030 11:52:51.105"></status>
</kw>
<msg timestamp="20201030 11:52:51.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039484528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:50.761" endtime="20201030 11:52:51.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039484528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039596333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.115" endtime="20201030 11:52:51.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.133" endtime="20201030 11:52:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.753" endtime="20201030 11:52:51.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.749" endtime="20201030 11:52:51.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:51.150" level="INFO">${RESULT} = [{'diff': 0.00011180499999999954}, {'diff': 0.00011229199999999995}, {'diff': 0.00011201400000000056}, {'diff': 0.00011265300000000422}, {'diff': 0.00011197200000000185}, {'diff': 0.000112222000000002...</msg>
<status status="PASS" starttime="20201030 11:52:51.141" endtime="20201030 11:52:51.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:51.160" level="INFO">${ACCURACY} = {'diff': [0.00011180499999999954, 0.00011229199999999995, 0.00011201400000000056, 0.00011265300000000422, 0.00011197200000000185, 0.0001122220000000021, 0.00011184799999999773, 0.00011219499999999549,...</msg>
<status status="PASS" starttime="20201030 11:52:51.152" endtime="20201030 11:52:51.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.171" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:51.169" endtime="20201030 11:52:51.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.177" level="INFO">VALUE: [0.00011180499999999954, 0.00011229199999999995, 0.00011201400000000056, 0.00011265300000000422, 0.00011197200000000185, 0.0001122220000000021, 0.00011184799999999773, 0.00011219499999999549, 0.00011187499999999739, 0.00011202700000000065, 0.00011193100000000261, 0.00011247200000000235, 0.000112209000000002, 0.00011211099999999807, 0.000112596999999999, 0.00011243100000000311, 0.00011198600000000142, 0.00011245799999999584, 0.00011169500000000193, 0.00011237500000000483, 0.00011188800000000443, 0.00011222299999999463, 0.00011252800000000063, 0.00011198700000000089, 0.00011173700000000064, 0.00011258299999999943, 0.00011215300000000372, 0.00011230600000000646, 0.00011240299999999703, 0.00011219500000000243, 0.00011231900000000655, 0.00011218100000000286, 0.00011163899999999671, 0.00011169399999999552, 0.00011231999999999909, 0.00011206999999999884, 0.00011251400000000106, 0.0001117770000000004, 0.00011181900000000605, 0.00011225000000000124, 0.00011222199999999516, 0.00011183299999999868, 0.00011187499999999739, 0.00011262499999999814, 0.00011187499999999739, 0.00011236099999999832, 0.00011231999999999909, 0.00011180599999999902, 0.00011233299999999918, 0.00011236200000000474]</msg>
<status status="PASS" starttime="20201030 11:52:51.174" endtime="20201030 11:52:51.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.162" endtime="20201030 11:52:51.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:51.189" endtime="20201030 11:52:51.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.185" endtime="20201030 11:52:51.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.182" endtime="20201030 11:52:51.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.690" endtime="20201030 11:52:51.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.689" endtime="20201030 11:52:51.214"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.237" endtime="20201030 11:52:51.257"></status>
</kw>
<msg timestamp="20201030 11:52:51.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.234" endtime="20201030 11:52:51.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.261" endtime="20201030 11:52:51.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.267" endtime="20201030 11:52:51.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.226" endtime="20201030 11:52:51.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.221" endtime="20201030 11:52:51.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.290" endtime="20201030 11:52:51.632"></status>
</kw>
<msg timestamp="20201030 11:52:51.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039637486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.287" endtime="20201030 11:52:51.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039524264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039637486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.641" endtime="20201030 11:52:51.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.660" endtime="20201030 11:52:51.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.280" endtime="20201030 11:52:51.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.275" endtime="20201030 11:52:51.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:51.677" level="INFO">${RESULT} = [{'diff': 0.00011322199999999616}, {'diff': 0.0001132220000000031}, {'diff': 0.00011334699999999975}, {'diff': 0.00011291599999999763}, {'diff': 0.00011263900000000465}, {'diff': 0.0001127500000000017...</msg>
<status status="PASS" starttime="20201030 11:52:51.668" endtime="20201030 11:52:51.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:51.688" level="INFO">${ACCURACY} = {'diff': [0.00011322199999999616, 0.0001132220000000031, 0.00011334699999999975, 0.00011291599999999763, 0.00011263900000000465, 0.00011275000000000174, 0.00011280600000000002, 0.00011325000000000224,...</msg>
<status status="PASS" starttime="20201030 11:52:51.679" endtime="20201030 11:52:51.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.699" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:51.696" endtime="20201030 11:52:51.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.704" level="INFO">VALUE: [0.00011322199999999616, 0.0001132220000000031, 0.00011334699999999975, 0.00011291599999999763, 0.00011263900000000465, 0.00011275000000000174, 0.00011280600000000002, 0.00011325000000000224, 0.00011343100000000411, 0.0001135550000000013, 0.00011283399999999916, 0.00011327800000000138, 0.00011340299999999803, 0.00011312499999999864, 0.00011266699999999685, 0.00011291599999999763, 0.00011326400000000181, 0.00011298700000000189, 0.0001128890000000049, 0.00011325000000000224, 0.00011330600000000052, 0.00011333300000000018, 0.0001128749999999984, 0.0001128749999999984, 0.00011347200000000335, 0.00011319500000000343, 0.00011309700000000644, 0.00011343099999999717, 0.00011345899999999631, 0.00011281900000000011, 0.00011268100000000336, 0.00011298600000000242, 0.00011319499999999649, 0.0001133749999999989, 0.00011345800000000378, 0.0001129169999999971, 0.0001134020000000055, 0.0001133749999999989, 0.00011338899999999846, 0.00011363900000000565, 0.00011338899999999846, 0.00011315199999999831, 0.00011281999999999959, 0.00011284699999999925, 0.0001133749999999989, 0.00011326400000000181, 0.00011290299999999753, 0.00011298600000000242, 0.000113597, 0.0001132499999999953]</msg>
<status status="PASS" starttime="20201030 11:52:51.701" endtime="20201030 11:52:51.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.689" endtime="20201030 11:52:51.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:51.716" endtime="20201030 11:52:51.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.712" endtime="20201030 11:52:51.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.709" endtime="20201030 11:52:51.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.216" endtime="20201030 11:52:51.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.215" endtime="20201030 11:52:51.741"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.764" endtime="20201030 11:52:51.784"></status>
</kw>
<msg timestamp="20201030 11:52:51.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.761" endtime="20201030 11:52:51.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.788" endtime="20201030 11:52:51.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.794" endtime="20201030 11:52:51.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.754" endtime="20201030 11:52:51.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.748" endtime="20201030 11:52:51.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.817" endtime="20201030 11:52:52.173"></status>
</kw>
<msg timestamp="20201030 11:52:52.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.814" endtime="20201030 11:52:52.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.183" endtime="20201030 11:52:52.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.201" endtime="20201030 11:52:52.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.807" endtime="20201030 11:52:52.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.802" endtime="20201030 11:52:52.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:52.218" level="INFO">${RESULT} = [{'diff': 0.0001138749999999994}, {'diff': 0.000114209000000004}, {'diff': 0.00011363899999999871}, {'diff': 0.00011394400000000471}, {'diff': 0.00011383300000000068}, {'diff': 0.00011395800000000428}...</msg>
<status status="PASS" starttime="20201030 11:52:52.209" endtime="20201030 11:52:52.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:52.227" level="INFO">${ACCURACY} = {'diff': [0.0001138749999999994, 0.000114209000000004, 0.00011363899999999871, 0.00011394400000000471, 0.00011383300000000068, 0.00011395800000000428, 0.00011366700000000479, 0.00011367999999999795, 0...</msg>
<status status="PASS" starttime="20201030 11:52:52.220" endtime="20201030 11:52:52.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.238" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:52.235" endtime="20201030 11:52:52.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.243" level="INFO">VALUE: [0.0001138749999999994, 0.000114209000000004, 0.00011363899999999871, 0.00011394400000000471, 0.00011383300000000068, 0.00011395800000000428, 0.00011366700000000479, 0.00011367999999999795, 0.00011412499999999964, 0.00011407000000000084, 0.00011377800000000188, 0.00011401399999999562, 0.00011405600000000127, 0.00011408300000000093, 0.00011420799999999759, 0.00011368100000000436, 0.00011443100000000511, 0.00011377799999999494, 0.00011461099999999363, 0.00011369399999999752, 0.00011399999999999605, 0.00011419399999999802, 0.00011384700000000025, 0.00011462500000000014, 0.00011397200000000385, 0.00011427799999999544, 0.00011427800000000238, 0.00011461100000000057, 0.00011440299999999903, 0.00011383400000000016, 0.00011400000000000299, 0.00011440300000000597, 0.0001144169999999986, 0.00011395900000000375, 0.00011394400000000471, 0.00011369400000000446, 0.00011429200000000195, 0.00011398599999999648, 0.00011449999999999655, 0.00011465299999999928, 0.00011447200000000435, 0.00011458400000000091, 0.00011369400000000446, 0.00011370899999999656, 0.00011412499999999964, 0.00011393000000000514, 0.00011382000000000059, 0.00011438799999999999, 0.00011369400000000446, 0.00011365299999999828]</msg>
<status status="PASS" starttime="20201030 11:52:52.240" endtime="20201030 11:52:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.229" endtime="20201030 11:52:52.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:52.260" endtime="20201030 11:52:52.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.256" endtime="20201030 11:52:52.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.253" endtime="20201030 11:52:52.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.744" endtime="20201030 11:52:52.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.742" endtime="20201030 11:52:52.286"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.309" endtime="20201030 11:52:52.332"></status>
</kw>
<msg timestamp="20201030 11:52:52.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.305" endtime="20201030 11:52:52.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.335" endtime="20201030 11:52:52.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.342" endtime="20201030 11:52:52.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.298" endtime="20201030 11:52:52.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.292" endtime="20201030 11:52:52.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.365" endtime="20201030 11:52:52.712"></status>
</kw>
<msg timestamp="20201030 11:52:52.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.362" endtime="20201030 11:52:52.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.721" endtime="20201030 11:52:52.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.740" endtime="20201030 11:52:52.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.354" endtime="20201030 11:52:52.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.350" endtime="20201030 11:52:52.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:52.757" level="INFO">${RESULT} = [{'diff': 0.00011515299999999978}, {'diff': 0.00011490300000000647}, {'diff': 0.00011493100000000561}, {'diff': 0.00011490299999999953}, {'diff': 0.00011466599999999938}, {'diff': 0.000115389000000000...</msg>
<status status="PASS" starttime="20201030 11:52:52.748" endtime="20201030 11:52:52.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:52.766" level="INFO">${ACCURACY} = {'diff': [0.00011515299999999978, 0.00011490300000000647, 0.00011493100000000561, 0.00011490299999999953, 0.00011466599999999938, 0.00011538900000000046, 0.00011483400000000116, 0.00011482000000000159...</msg>
<status status="PASS" starttime="20201030 11:52:52.759" endtime="20201030 11:52:52.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.776" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:52.774" endtime="20201030 11:52:52.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.782" level="INFO">VALUE: [0.00011515299999999978, 0.00011490300000000647, 0.00011493100000000561, 0.00011490299999999953, 0.00011466599999999938, 0.00011538900000000046, 0.00011483400000000116, 0.00011482000000000159, 0.00011467999999999895, 0.00011536199999999386, 0.0001152499999999973, 0.00011501399999999662, 0.00011465199999999981, 0.00011562500000000114, 0.00011490299999999953, 0.00011486100000000082, 0.00011473600000000417, 0.00011533300000000218, 0.00011488899999999996, 0.00011533299999999524, 0.00011470800000000503, 0.00011466699999999885, 0.00011465300000000622, 0.00011545799999999884, 0.00011554199999999626, 0.00011469499999999799, 0.00011469399999999852, 0.00011463899999999971, 0.00011520799999999859, 0.00011562500000000114, 0.00011530600000000252, 0.00011545799999999884, 0.00011472199999999766, 0.00011466599999999938, 0.0001152770000000039, 0.00011473600000000417, 0.00011534700000000175, 0.00011529100000000347, 0.00011527799999999644, 0.00011466599999999938, 0.00011547299999999788, 0.00011529200000000295, 0.0001153049999999961, 0.00011509699999999456, 0.00011465300000000622, 0.00011479200000000245, 0.00011557000000000234, 0.00011515299999999978, 0.00011508300000000193, 0.0001153750000000009]</msg>
<status status="PASS" starttime="20201030 11:52:52.779" endtime="20201030 11:52:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.767" endtime="20201030 11:52:52.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:52.796" endtime="20201030 11:52:52.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.790" endtime="20201030 11:52:52.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.788" endtime="20201030 11:52:52.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.288" endtime="20201030 11:52:52.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.287" endtime="20201030 11:52:52.821"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.844" endtime="20201030 11:52:52.864"></status>
</kw>
<msg timestamp="20201030 11:52:52.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.840" endtime="20201030 11:52:52.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.868" endtime="20201030 11:52:52.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.874" endtime="20201030 11:52:52.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.833" endtime="20201030 11:52:52.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.827" endtime="20201030 11:52:52.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.897" endtime="20201030 11:52:53.240"></status>
</kw>
<msg timestamp="20201030 11:52:53.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039383472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.894" endtime="20201030 11:52:53.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039383472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039499944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.250" endtime="20201030 11:52:53.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.268" endtime="20201030 11:52:53.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.887" endtime="20201030 11:52:53.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.882" endtime="20201030 11:52:53.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:53.285" level="INFO">${RESULT} = [{'diff': 0.00011647199999999941}, {'diff': 0.00011581899999999618}, {'diff': 0.00011609800000000198}, {'diff': 0.00011579100000000397}, {'diff': 0.0001160420000000037}, {'diff': 0.0001156530000000002...</msg>
<status status="PASS" starttime="20201030 11:52:53.276" endtime="20201030 11:52:53.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:53.300" level="INFO">${ACCURACY} = {'diff': [0.00011647199999999941, 0.00011581899999999618, 0.00011609800000000198, 0.00011579100000000397, 0.0001160420000000037, 0.00011565300000000028, 0.00011611099999999513, 0.00011644400000000027,...</msg>
<status status="PASS" starttime="20201030 11:52:53.287" endtime="20201030 11:52:53.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.311" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:53.308" endtime="20201030 11:52:53.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.316" level="INFO">VALUE: [0.00011647199999999941, 0.00011581899999999618, 0.00011609800000000198, 0.00011579100000000397, 0.0001160420000000037, 0.00011565300000000028, 0.00011611099999999513, 0.00011644400000000027, 0.00011638900000000146, 0.00011595799999999934, 0.00011651399999999812, 0.00011627800000000438, 0.00011566699999999985, 0.00011651399999999812, 0.00011573600000000517, 0.00011579199999999651, 0.00011579199999999651, 0.00011649999999999855, 0.00011570799999999909, 0.00011619499999999949, 0.00011584800000000173, 0.00011594399999999977, 0.00011601300000000508, 0.00011599999999999805, 0.00011613900000000121, 0.00011615300000000078, 0.00011652800000000463, 0.00011570799999999909, 0.00011566699999999985, 0.00011566699999999985, 0.00011613900000000121, 0.00011615300000000078, 0.0001162770000000049, 0.00011634700000000275, 0.00011643100000000017, 0.00011643100000000017, 0.00011600000000000499, 0.00011640300000000103, 0.00011648599999999898, 0.00011640300000000103, 0.00011556900000000286, 0.00011641600000000113, 0.00011643100000000017, 0.00011656900000000386, 0.00011640199999999462, 0.00011569399999999952, 0.00011634699999999581, 0.00011597299999999838, 0.00011655600000000377, 0.00011566600000000038]</msg>
<status status="PASS" starttime="20201030 11:52:53.313" endtime="20201030 11:52:53.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.302" endtime="20201030 11:52:53.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:53.328" endtime="20201030 11:52:53.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.324" endtime="20201030 11:52:53.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.322" endtime="20201030 11:52:53.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.823" endtime="20201030 11:52:53.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.822" endtime="20201030 11:52:53.353"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.376" endtime="20201030 11:52:53.396"></status>
</kw>
<msg timestamp="20201030 11:52:53.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.373" endtime="20201030 11:52:53.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.400" endtime="20201030 11:52:53.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.406" endtime="20201030 11:52:53.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.366" endtime="20201030 11:52:53.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.360" endtime="20201030 11:52:53.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.429" endtime="20201030 11:52:53.773"></status>
</kw>
<msg timestamp="20201030 11:52:53.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.426" endtime="20201030 11:52:53.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039374847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039492042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.782" endtime="20201030 11:52:53.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.800" endtime="20201030 11:52:53.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.419" endtime="20201030 11:52:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.414" endtime="20201030 11:52:53.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:53.817" level="INFO">${RESULT} = [{'diff': 0.00011719500000000049}, {'diff': 0.00011713900000000221}, {'diff': 0.00011752700000000615}, {'diff': 0.00011668100000000042}, {'diff': 0.00011756899999999793}, {'diff': 0.000117556000000004...</msg>
<status status="PASS" starttime="20201030 11:52:53.809" endtime="20201030 11:52:53.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:53.828" level="INFO">${ACCURACY} = {'diff': [0.00011719500000000049, 0.00011713900000000221, 0.00011752700000000615, 0.00011668100000000042, 0.00011756899999999793, 0.00011755600000000477, 0.00011687499999999545, 0.00011754199999999826...</msg>
<status status="PASS" starttime="20201030 11:52:53.820" endtime="20201030 11:52:53.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.839" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:53.837" endtime="20201030 11:52:53.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.844" level="INFO">VALUE: [0.00011719500000000049, 0.00011713900000000221, 0.00011752700000000615, 0.00011668100000000042, 0.00011756899999999793, 0.00011755600000000477, 0.00011687499999999545, 0.00011754199999999826, 0.000117082999999997, 0.00011749999999999955, 0.00011725000000000624, 0.0001174170000000016, 0.00011740300000000203, 0.00011676400000000531, 0.00011738900000000246, 0.00011695800000000034, 0.00011752799999999869, 0.00011679199999999751, 0.0001174170000000016, 0.00011662500000000214, 0.00011663900000000171, 0.00011676399999999837, 0.00011701400000000556, 0.00011723599999999973, 0.0001167499999999988, 0.00011712500000000264, 0.0001174300000000017, 0.0001167629999999989, 0.00011695800000000034, 0.0001176249999999962, 0.00011715300000000178, 0.00011684800000000273, 0.00011666700000000085, 0.0001173049999999981, 0.00011715299999999484, 0.00011698599999999948, 0.00011736099999999638, 0.00011754099999999879, 0.00011740300000000203, 0.00011705499999999786, 0.00011736099999999638, 0.00011676400000000531, 0.00011680500000000454, 0.00011751399999999912, 0.00011677799999999794, 0.00011716700000000135, 0.00011720800000000059, 0.0001171249999999957, 0.0001167770000000054, 0.00011672199999999966]</msg>
<status status="PASS" starttime="20201030 11:52:53.841" endtime="20201030 11:52:53.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.830" endtime="20201030 11:52:53.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:53.857" endtime="20201030 11:52:53.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.853" endtime="20201030 11:52:53.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.850" endtime="20201030 11:52:53.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.356" endtime="20201030 11:52:53.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.354" endtime="20201030 11:52:53.882"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.905" endtime="20201030 11:52:53.926"></status>
</kw>
<msg timestamp="20201030 11:52:53.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.902" endtime="20201030 11:52:53.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.929" endtime="20201030 11:52:53.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.936" endtime="20201030 11:52:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.894" endtime="20201030 11:52:53.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.888" endtime="20201030 11:52:53.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.959" endtime="20201030 11:52:54.321"></status>
</kw>
<msg timestamp="20201030 11:52:54.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.956" endtime="20201030 11:52:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.330" endtime="20201030 11:52:54.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.349" endtime="20201030 11:52:54.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.948" endtime="20201030 11:52:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.944" endtime="20201030 11:52:54.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.366" level="INFO">${RESULT} = [{'diff': 0.0001184579999999949}, {'diff': 0.00011781999999999765}, {'diff': 0.00011833399999999772}, {'diff': 0.00011800000000000005}, {'diff': 0.0001182500000000003}, {'diff': 0.00011813899999999627...</msg>
<status status="PASS" starttime="20201030 11:52:54.358" endtime="20201030 11:52:54.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:54.375" level="INFO">${ACCURACY} = {'diff': [0.0001184579999999949, 0.00011781999999999765, 0.00011833399999999772, 0.00011800000000000005, 0.0001182500000000003, 0.00011813899999999627, 0.00011852799999999969, 0.00011790300000000253, ...</msg>
<status status="PASS" starttime="20201030 11:52:54.368" endtime="20201030 11:52:54.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.388" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:54.385" endtime="20201030 11:52:54.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.395" level="INFO">VALUE: [0.0001184579999999949, 0.00011781999999999765, 0.00011833399999999772, 0.00011800000000000005, 0.0001182500000000003, 0.00011813899999999627, 0.00011852799999999969, 0.00011790300000000253, 0.00011779199999999851, 0.00011765299999999534, 0.00011834799999999729, 0.00011777799999999894, 0.0001180699999999979, 0.00011826399999999987, 0.00011776399999999937, 0.00011855599999999883, 0.0001181950000000015, 0.0001177499999999998, 0.000118597000000005, 0.00011773600000000023, 0.00011795800000000134, 0.00011807000000000484, 0.0001184579999999949, 0.00011809699999999757, 0.00011802699999999972, 0.00011816700000000235, 0.00011761100000000357, 0.0001179300000000022, 0.00011804199999999876, 0.00011773600000000023, 0.00011840300000000303, 0.00011784700000000425, 0.00011820900000000106, 0.00011801399999999962, 0.00011834799999999729, 0.00011844400000000227, 0.00011826399999999987, 0.00011780600000000502, 0.00011801399999999962, 0.0001179029999999956, 0.00011763899999999577, 0.00011820799999999465, 0.0001182370000000002, 0.00011823599999999379, 0.00011794500000000124, 0.00011769399999999458, 0.0001185420000000062, 0.0001181950000000015, 0.00011798699999999995, 0.00011788899999999602]</msg>
<status status="PASS" starttime="20201030 11:52:54.391" endtime="20201030 11:52:54.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.377" endtime="20201030 11:52:54.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:54.409" endtime="20201030 11:52:54.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.404" endtime="20201030 11:52:54.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.401" endtime="20201030 11:52:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.884" endtime="20201030 11:52:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.883" endtime="20201030 11:52:54.435"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.458" endtime="20201030 11:52:54.483"></status>
</kw>
<msg timestamp="20201030 11:52:54.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.454" endtime="20201030 11:52:54.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.487" endtime="20201030 11:52:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.494" endtime="20201030 11:52:54.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.447" endtime="20201030 11:52:54.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.441" endtime="20201030 11:52:54.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.519" endtime="20201030 11:52:54.874"></status>
</kw>
<msg timestamp="20201030 11:52:54.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.516" endtime="20201030 11:52:54.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.884" endtime="20201030 11:52:54.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.902" endtime="20201030 11:52:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.508" endtime="20201030 11:52:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.503" endtime="20201030 11:52:54.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.919" level="INFO">${RESULT} = [{'diff': 0.00011913900000000421}, {'diff': 0.00011938900000000446}, {'diff': 0.00011947199999999547}, {'diff': 0.00011933399999999872}, {'diff': 0.00011873599999999429}, {'diff': 0.000119318999999999...</msg>
<status status="PASS" starttime="20201030 11:52:54.910" endtime="20201030 11:52:54.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:54.928" level="INFO">${ACCURACY} = {'diff': [0.00011913900000000421, 0.00011938900000000446, 0.00011947199999999547, 0.00011933399999999872, 0.00011873599999999429, 0.00011931899999999968, 0.00011881899999999918, 0.00011909699999999857...</msg>
<status status="PASS" starttime="20201030 11:52:54.921" endtime="20201030 11:52:54.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.939" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:54.937" endtime="20201030 11:52:54.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.945" level="INFO">VALUE: [0.00011913900000000421, 0.00011938900000000446, 0.00011947199999999547, 0.00011933399999999872, 0.00011873599999999429, 0.00011931899999999968, 0.00011881899999999918, 0.00011909699999999857, 0.00011931999999999915, 0.00011866599999999644, 0.00011959799999999854, 0.00011894400000000277, 0.00011918099999999598, 0.00011879100000000004, 0.00011881999999999865, 0.00011959699999999907, 0.00011881900000000611, 0.0001187500000000008, 0.00011920799999999565, 0.00011922200000000216, 0.00011951400000000112, 0.00011901400000000062, 0.00011888900000000396, 0.00011943100000000317, 0.00011877799999999994, 0.000119082999999999, 0.00011950000000000155, 0.00011918099999999598, 0.00011944500000000274, 0.00011879199999999951, 0.00011934699999999882, 0.00011961100000000557, 0.0001193620000000048, 0.00011866700000000285, 0.00011947200000000241, 0.00011868000000000295, 0.00011955500000000036, 0.00011958399999999897, 0.000118695000000002, 0.00011884699999999832, 0.0001193050000000001, 0.00011893100000000267, 0.00011962500000000514, 0.00011886099999999789, 0.00011900000000000105, 0.00011888899999999702, 0.00011876400000000037, 0.00011943099999999623, 0.0001189170000000031, 0.00011934799999999829]</msg>
<status status="PASS" starttime="20201030 11:52:54.942" endtime="20201030 11:52:54.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.930" endtime="20201030 11:52:54.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:54.959" endtime="20201030 11:52:54.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.953" endtime="20201030 11:52:54.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.951" endtime="20201030 11:52:54.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.437" endtime="20201030 11:52:54.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.435" endtime="20201030 11:52:54.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.531" endtime="20201030 11:52:54.985"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:01.387" endtime="20201030 11:52:54.987" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:55.006" endtime="20201030 11:52:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.003" endtime="20201030 11:52:55.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.065" endtime="20201030 11:52:55.092"></status>
</kw>
<msg timestamp="20201030 11:52:55.093" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.062" endtime="20201030 11:52:55.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.095" endtime="20201030 11:52:55.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.106" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:55.102" endtime="20201030 11:52:55.107"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:55.053" endtime="20201030 11:52:55.109"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:55.047" endtime="20201030 11:52:55.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.044" endtime="20201030 11:52:55.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:55.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:55.118" endtime="20201030 11:52:55.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.113" endtime="20201030 11:52:55.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.042" endtime="20201030 11:52:55.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.040" endtime="20201030 11:52:55.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.123" endtime="20201030 11:52:55.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.036" endtime="20201030 11:52:55.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.031" endtime="20201030 11:52:55.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.000" endtime="20201030 11:52:55.130"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.158" endtime="20201030 11:52:55.175"></status>
</kw>
<msg timestamp="20201030 11:52:55.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.154" endtime="20201030 11:52:55.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.178" endtime="20201030 11:52:55.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.185" endtime="20201030 11:52:55.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.145" endtime="20201030 11:52:55.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.139" endtime="20201030 11:52:55.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.209" endtime="20201030 11:52:55.561"></status>
</kw>
<msg timestamp="20201030 11:52:55.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143619486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.206" endtime="20201030 11:52:55.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143619486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.571" endtime="20201030 11:52:55.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.590" endtime="20201030 11:52:55.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.198" endtime="20201030 11:52:55.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.194" endtime="20201030 11:52:55.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:55.607" level="INFO">${RESULT} = [{'diff': 2.0431000000015187e-05}, {'diff': 2.076399999997869e-05}, {'diff': 2.0916999999981423e-05}, {'diff': 2.1055000000019808e-05}, {'diff': 2.0277999999984697e-05}, {'diff': 2.112500000001072e-05...</msg>
<status status="PASS" starttime="20201030 11:52:55.598" endtime="20201030 11:52:55.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:55.617" level="INFO">${ACCURACY} = {'diff': [2.0431000000015187e-05, 2.076399999997869e-05, 2.0916999999981423e-05, 2.1055000000019808e-05, 2.0277999999984697e-05, 2.112500000001072e-05, 2.07369999999929e-05, 2.1250000000000435e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:52:55.609" endtime="20201030 11:52:55.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.627" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:52:55.625" endtime="20201030 11:52:55.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.635" level="INFO">VALUE: [2.0431000000015187e-05, 2.076399999997869e-05, 2.0916999999981423e-05, 2.1055000000019808e-05, 2.0277999999984697e-05, 2.112500000001072e-05, 2.07369999999929e-05, 2.1250000000000435e-05, 2.0750000000013813e-05, 2.0569999999997535e-05, 2.0722000000000795e-05, 2.0430000000015713e-05, 2.0735999999993426e-05, 2.0749999999986057e-05, 2.0972000000007984e-05, 2.10969999999977e-05, 2.0263999999992066e-05, 2.0805999999984337e-05, 2.0596999999983323e-05, 2.0430000000015713e-05, 2.106900000001244e-05, 2.0749999999986057e-05, 2.1263999999993066e-05, 2.0278000000012453e-05, 2.0903000000016547e-05, 2.0305999999997715e-05, 2.056899999999806e-05, 2.0764000000006444e-05, 2.056899999999806e-05, 2.04169999999948e-05, 2.0764000000006444e-05, 2.043099999998743e-05, 2.1236000000007804e-05, 2.040300000000217e-05, 2.1084000000004544e-05, 2.059700000001108e-05, 2.0305999999997715e-05, 2.0583999999990166e-05, 2.108300000000507e-05, 2.0986000000000615e-05, 2.0749999999986057e-05, 2.0735999999993426e-05, 2.1263999999993066e-05, 2.108300000000507e-05, 2.08610000000109e-05, 2.0596999999983323e-05, 2.108300000000507e-05, 2.0417000000022556e-05, 2.0916999999981423e-05, 2.0930000000002336e-05]</msg>
<status status="PASS" starttime="20201030 11:52:55.631" endtime="20201030 11:52:55.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.618" endtime="20201030 11:52:55.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:55.646" endtime="20201030 11:52:55.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.642" endtime="20201030 11:52:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.640" endtime="20201030 11:52:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.135" endtime="20201030 11:52:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.133" endtime="20201030 11:52:55.671"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.695" endtime="20201030 11:52:55.710"></status>
</kw>
<msg timestamp="20201030 11:52:55.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.691" endtime="20201030 11:52:55.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.713" endtime="20201030 11:52:55.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.719" endtime="20201030 11:52:55.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.684" endtime="20201030 11:52:55.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.678" endtime="20201030 11:52:55.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.743" endtime="20201030 11:52:56.083"></status>
</kw>
<msg timestamp="20201030 11:52:56.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.739" endtime="20201030 11:52:56.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:56.093" endtime="20201030 11:52:56.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.112" endtime="20201030 11:52:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.732" endtime="20201030 11:52:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.727" endtime="20201030 11:52:56.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:56.129" level="INFO">${RESULT} = [{'diff': 2.0527999999998825e-05}, {'diff': 2.108300000000507e-05}, {'diff': 2.0902000000003196e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 2.0263999999999005e-0...</msg>
<status status="PASS" starttime="20201030 11:52:56.120" endtime="20201030 11:52:56.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:56.140" level="INFO">${ACCURACY} = {'diff': [2.0527999999998825e-05, 2.108300000000507e-05, 2.0902000000003196e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 2.040300000000217e-05, 2.0249999999999435e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:56.131" endtime="20201030 11:52:56.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.151" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:52:56.148" endtime="20201030 11:52:56.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.156" level="INFO">VALUE: [2.0527999999998825e-05, 2.108300000000507e-05, 2.0902000000003196e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 2.040300000000217e-05, 2.0249999999999435e-05, 2.108299999999813e-05, 2.1250000000000435e-05, 2.0263999999999005e-05, 2.026299999999953e-05, 2.04169999999948e-05, 2.041700000000174e-05, 2.0749999999999935e-05, 2.111099999999727e-05, 2.087499999999659e-05, 2.0764000000006444e-05, 2.0249999999999435e-05, 2.076300000000003e-05, 2.118100000000206e-05, 2.108300000000507e-05, 2.041700000000174e-05, 2.058300000000457e-05, 2.0584000000004044e-05, 2.0721999999993856e-05, 2.038899999999566e-05, 2.058300000000457e-05, 2.036100000000346e-05, 2.058299999999763e-05, 2.0235999999999865e-05, 2.111100000000421e-05, 2.1084000000004544e-05, 2.104099999999942e-05, 2.0612000000003183e-05, 2.059700000000414e-05, 2.0263999999999005e-05, 2.041700000000174e-05, 2.08890000000031e-05, 2.0263999999999005e-05, 2.0319999999997285e-05, 2.0916000000002766e-05, 2.0194000000001155e-05, 2.058299999999763e-05, 2.041700000000174e-05, 2.05969999999972e-05, 2.090300000000267e-05, 2.0777999999999075e-05, 2.091700000000224e-05, 2.0235999999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:52:56.153" endtime="20201030 11:52:56.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.141" endtime="20201030 11:52:56.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:56.168" endtime="20201030 11:52:56.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.163" endtime="20201030 11:52:56.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.161" endtime="20201030 11:52:56.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.673" endtime="20201030 11:52:56.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.672" endtime="20201030 11:52:56.193"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.216" endtime="20201030 11:52:56.231"></status>
</kw>
<msg timestamp="20201030 11:52:56.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.213" endtime="20201030 11:52:56.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.235" endtime="20201030 11:52:56.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.241" endtime="20201030 11:52:56.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.206" endtime="20201030 11:52:56.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.200" endtime="20201030 11:52:56.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.264" endtime="20201030 11:52:56.606"></status>
</kw>
<msg timestamp="20201030 11:52:56.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:56.261" endtime="20201030 11:52:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040312833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:56.616" endtime="20201030 11:52:56.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.635" endtime="20201030 11:52:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.254" endtime="20201030 11:52:56.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.249" endtime="20201030 11:52:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:56.652" level="INFO">${RESULT} = [{'diff': 2.040300000000217e-05}, {'diff': 2.04169999999948e-05}, {'diff': 2.040299999999523e-05}, {'diff': 2.043099999999437e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.091700000000224e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:56.643" endtime="20201030 11:52:56.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:56.663" level="INFO">${ACCURACY} = {'diff': [2.040300000000217e-05, 2.04169999999948e-05, 2.040299999999523e-05, 2.043099999999437e-05, 2.108299999999813e-05, 2.091700000000224e-05, 2.108299999999813e-05, 2.0749999999999935e-05, 2.0402...</msg>
<status status="PASS" starttime="20201030 11:52:56.654" endtime="20201030 11:52:56.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.674" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:52:56.672" endtime="20201030 11:52:56.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.680" level="INFO">VALUE: [2.040300000000217e-05, 2.04169999999948e-05, 2.040299999999523e-05, 2.043099999999437e-05, 2.108299999999813e-05, 2.091700000000224e-05, 2.108299999999813e-05, 2.0749999999999935e-05, 2.0402000000002696e-05, 2.0902000000003196e-05, 2.058300000000457e-05, 2.108300000000507e-05, 2.106899999999856e-05, 2.0584000000004044e-05, 2.108299999999813e-05, 2.041700000000174e-05, 2.0277999999998575e-05, 2.058299999999763e-05, 2.0263999999999005e-05, 2.0249999999999435e-05, 2.108299999999813e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.1250000000000435e-05, 2.1083999999997605e-05, 2.0679999999995147e-05, 2.1069999999998035e-05, 2.056899999999806e-05, 2.0348000000003363e-05, 2.0763999999999505e-05, 2.0541999999998395e-05, 2.0763999999999505e-05, 2.1250000000000435e-05, 2.109700000000464e-05, 2.0736000000000365e-05, 2.058299999999763e-05, 2.1055999999998465e-05, 2.0416000000002266e-05, 2.1098000000004113e-05, 2.1069999999998035e-05, 2.0584000000004044e-05, 2.0930000000002336e-05, 2.1264000000000005e-05, 2.0570000000004474e-05, 2.091700000000224e-05, 2.0749999999999935e-05, 2.1083999999997605e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.1070000000004974e-05]</msg>
<status status="PASS" starttime="20201030 11:52:56.676" endtime="20201030 11:52:56.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.665" endtime="20201030 11:52:56.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:56.692" endtime="20201030 11:52:56.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.687" endtime="20201030 11:52:56.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.685" endtime="20201030 11:52:56.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.195" endtime="20201030 11:52:56.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.194" endtime="20201030 11:52:56.717"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.740" endtime="20201030 11:52:56.755"></status>
</kw>
<msg timestamp="20201030 11:52:56.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.737" endtime="20201030 11:52:56.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.758" endtime="20201030 11:52:56.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.764" endtime="20201030 11:52:56.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.729" endtime="20201030 11:52:56.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.724" endtime="20201030 11:52:56.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.788" endtime="20201030 11:52:57.132"></status>
</kw>
<msg timestamp="20201030 11:52:57.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03948025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:56.784" endtime="20201030 11:52:57.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03948025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:57.142" endtime="20201030 11:52:57.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.160" endtime="20201030 11:52:57.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.777" endtime="20201030 11:52:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.773" endtime="20201030 11:52:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:57.177" level="INFO">${RESULT} = [{'diff': 2.093100000000181e-05}, {'diff': 2.0415999999995327e-05}, {'diff': 2.063899999999591e-05}, {'diff': 2.0430000000001836e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.1083999999997605e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:57.169" endtime="20201030 11:52:57.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:57.187" level="INFO">${ACCURACY} = {'diff': [2.093100000000181e-05, 2.0415999999995327e-05, 2.063899999999591e-05, 2.0430000000001836e-05, 2.043100000000131e-05, 2.1083999999997605e-05, 2.090300000000267e-05, 2.0680000000002086e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:52:57.180" endtime="20201030 11:52:57.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.198" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:52:57.195" endtime="20201030 11:52:57.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.203" level="INFO">VALUE: [2.093100000000181e-05, 2.0415999999995327e-05, 2.063899999999591e-05, 2.0430000000001836e-05, 2.043100000000131e-05, 2.1083999999997605e-05, 2.090300000000267e-05, 2.0680000000002086e-05, 2.0249999999999435e-05, 2.040300000000217e-05, 2.1236000000000865e-05, 2.058299999999763e-05, 2.04169999999948e-05, 2.0958000000001475e-05, 2.090300000000267e-05, 2.040300000000217e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2.1069999999998035e-05, 2.0235999999999865e-05, 2.09169999999953e-05, 2.091700000000224e-05, 2.0221999999993356e-05, 2.1236000000000865e-05, 2.09169999999953e-05, 2.091700000000224e-05, 2.0430000000001836e-05, 2.073699999999984e-05, 2.0916000000002766e-05, 2.0916000000002766e-05, 2.1250000000000435e-05, 2.0222000000000295e-05, 2.058300000000457e-05, 2.105499999999899e-05, 2.108299999999813e-05, 2.0736000000000365e-05, 2.10969999999977e-05, 2.043100000000131e-05, 2.0736000000000365e-05, 2.041700000000174e-05, 2.090300000000267e-05, 2.056899999999806e-05, 2.0416000000002266e-05, 2.0736000000000365e-05, 2.090300000000267e-05, 2.104099999999942e-05, 2.0249999999999435e-05, 2.0708000000001225e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201030 11:52:57.200" endtime="20201030 11:52:57.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.189" endtime="20201030 11:52:57.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:57.216" endtime="20201030 11:52:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.211" endtime="20201030 11:52:57.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.209" endtime="20201030 11:52:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.719" endtime="20201030 11:52:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.718" endtime="20201030 11:52:57.241"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.264" endtime="20201030 11:52:57.280"></status>
</kw>
<msg timestamp="20201030 11:52:57.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.260" endtime="20201030 11:52:57.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.284" endtime="20201030 11:52:57.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.290" endtime="20201030 11:52:57.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.253" endtime="20201030 11:52:57.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.247" endtime="20201030 11:52:57.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.313" endtime="20201030 11:52:57.657"></status>
</kw>
<msg timestamp="20201030 11:52:57.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04135225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:57.310" endtime="20201030 11:52:57.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04135225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:57.666" endtime="20201030 11:52:57.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.685" endtime="20201030 11:52:57.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.303" endtime="20201030 11:52:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.298" endtime="20201030 11:52:57.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:57.702" level="INFO">${RESULT} = [{'diff': 2.0249999999999435e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 2.061100000000371e-05}, {'diff': 2.05969999999972e-05}, {'diff': 2.0263999999999005e-05}, {'diff': 2.04169999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:57.693" endtime="20201030 11:52:57.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:57.712" level="INFO">${ACCURACY} = {'diff': [2.0249999999999435e-05, 2.0249999999999435e-05, 2.061100000000371e-05, 2.05969999999972e-05, 2.0263999999999005e-05, 2.04169999999948e-05, 2.0736000000000365e-05, 2.091700000000224e-05, 2.12...</msg>
<status status="PASS" starttime="20201030 11:52:57.704" endtime="20201030 11:52:57.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.722" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:52:57.720" endtime="20201030 11:52:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.728" level="INFO">VALUE: [2.0249999999999435e-05, 2.0249999999999435e-05, 2.061100000000371e-05, 2.05969999999972e-05, 2.0263999999999005e-05, 2.04169999999948e-05, 2.0736000000000365e-05, 2.091700000000224e-05, 2.1250000000000435e-05, 2.1305999999998715e-05, 2.0763999999999505e-05, 2.0249999999999435e-05, 2.034699999999695e-05, 2.10969999999977e-05, 2.0902000000003196e-05, 2.0429999999994897e-05, 2.0916000000002766e-05, 2.045900000000045e-05, 2.0916000000002766e-05, 2.0749999999999935e-05, 2.023699999999934e-05, 2.0915999999995827e-05, 2.056899999999806e-05, 2.108300000000507e-05, 2.040299999999523e-05, 2.1084000000004544e-05, 2.0763999999999505e-05, 2.0930000000002336e-05, 2.108299999999813e-05, 2.0930000000002336e-05, 2.0415999999995327e-05, 2.0249999999999435e-05, 2.0415999999995327e-05, 2.08890000000031e-05, 2.026299999999953e-05, 2.0249999999999435e-05, 2.0930000000002336e-05, 2.1000000000000185e-05, 2.041700000000174e-05, 2.1264000000000005e-05, 2.0930000000002336e-05, 2.0569999999997535e-05, 2.058300000000457e-05, 2.093100000000181e-05, 2.108299999999813e-05, 2.0430000000001836e-05, 2.109700000000464e-05, 2.108300000000507e-05, 2.062499999999634e-05, 2.058300000000457e-05]</msg>
<status status="PASS" starttime="20201030 11:52:57.725" endtime="20201030 11:52:57.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.713" endtime="20201030 11:52:57.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:57.748" endtime="20201030 11:52:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.742" endtime="20201030 11:52:57.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.740" endtime="20201030 11:52:57.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.243" endtime="20201030 11:52:57.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.242" endtime="20201030 11:52:57.773"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.796" endtime="20201030 11:52:57.812"></status>
</kw>
<msg timestamp="20201030 11:52:57.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.793" endtime="20201030 11:52:57.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.816" endtime="20201030 11:52:57.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.822" endtime="20201030 11:52:57.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.785" endtime="20201030 11:52:57.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.780" endtime="20201030 11:52:57.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.845" endtime="20201030 11:52:58.202"></status>
</kw>
<msg timestamp="20201030 11:52:58.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039550931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:57.842" endtime="20201030 11:52:58.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039550931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.211" endtime="20201030 11:52:58.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.230" endtime="20201030 11:52:58.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.835" endtime="20201030 11:52:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.830" endtime="20201030 11:52:58.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:58.247" level="INFO">${RESULT} = [{'diff': 2.0499999999999685e-05}, {'diff': 2.0583999999997105e-05}, {'diff': 2.090299999999573e-05}, {'diff': 2.0278000000005514e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.0749999999999935e-05...</msg>
<status status="PASS" starttime="20201030 11:52:58.238" endtime="20201030 11:52:58.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:58.262" level="INFO">${ACCURACY} = {'diff': [2.0499999999999685e-05, 2.0583999999997105e-05, 2.090299999999573e-05, 2.0278000000005514e-05, 2.043100000000131e-05, 2.0749999999999935e-05, 2.0999999999993246e-05, 2.0235999999999865e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:58.249" endtime="20201030 11:52:58.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.273" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:52:58.271" endtime="20201030 11:52:58.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.279" level="INFO">VALUE: [2.0499999999999685e-05, 2.0583999999997105e-05, 2.090299999999573e-05, 2.0278000000005514e-05, 2.043100000000131e-05, 2.0749999999999935e-05, 2.0999999999993246e-05, 2.0235999999999865e-05, 2.1083999999997605e-05, 2.108300000000507e-05, 2.094500000000138e-05, 2.0749999999999935e-05, 2.0916000000002766e-05, 2.0193999999994217e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0430000000001836e-05, 2.0584000000004044e-05, 2.0930000000002336e-05, 2.113900000000335e-05, 2.0249999999999435e-05, 2.115300000000292e-05, 2.0736000000000365e-05, 2.0612000000003183e-05, 2.0708000000001225e-05, 2.108299999999813e-05, 2.063899999999591e-05, 2.043099999999437e-05, 2.1069999999998035e-05, 2.041700000000174e-05, 2.1250000000000435e-05, 2.040300000000217e-05, 2.0749999999999935e-05, 2.059700000000414e-05, 2.090299999999573e-05, 2.0749999999999935e-05, 2.0930000000002336e-05, 2.090300000000267e-05, 2.0402000000002696e-05, 2.0749999999999935e-05, 2.040299999999523e-05, 2.0763999999999505e-05, 2.109700000000464e-05, 2.061099999999677e-05, 2.094500000000138e-05, 2.087499999999659e-05, 2.09169999999953e-05, 2.091700000000224e-05, 2.091700000000224e-05]</msg>
<status status="PASS" starttime="20201030 11:52:58.275" endtime="20201030 11:52:58.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.264" endtime="20201030 11:52:58.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:58.291" endtime="20201030 11:52:58.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.287" endtime="20201030 11:52:58.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.284" endtime="20201030 11:52:58.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.775" endtime="20201030 11:52:58.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.774" endtime="20201030 11:52:58.316"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.339" endtime="20201030 11:52:58.356"></status>
</kw>
<msg timestamp="20201030 11:52:58.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.336" endtime="20201030 11:52:58.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.359" endtime="20201030 11:52:58.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.365" endtime="20201030 11:52:58.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.329" endtime="20201030 11:52:58.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.323" endtime="20201030 11:52:58.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.388" endtime="20201030 11:52:58.742"></status>
</kw>
<msg timestamp="20201030 11:52:58.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039898111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039919014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.385" endtime="20201030 11:52:58.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039898111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039919014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.752" endtime="20201030 11:52:58.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.770" endtime="20201030 11:52:58.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.378" endtime="20201030 11:52:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.373" endtime="20201030 11:52:58.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:58.787" level="INFO">${RESULT} = [{'diff': 2.090300000000267e-05}, {'diff': 2.04169999999948e-05}, {'diff': 2.08890000000031e-05}, {'diff': 2.093099999999487e-05}, {'diff': 2.038899999999566e-05}, {'diff': 2.0749999999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:58.779" endtime="20201030 11:52:58.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:58.798" level="INFO">${ACCURACY} = {'diff': [2.090300000000267e-05, 2.04169999999948e-05, 2.08890000000031e-05, 2.093099999999487e-05, 2.038899999999566e-05, 2.0749999999999935e-05, 2.108300000000507e-05, 2.108300000000507e-05, 2.04030...</msg>
<status status="PASS" starttime="20201030 11:52:58.789" endtime="20201030 11:52:58.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.809" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:52:58.807" endtime="20201030 11:52:58.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.815" level="INFO">VALUE: [2.090300000000267e-05, 2.04169999999948e-05, 2.08890000000031e-05, 2.093099999999487e-05, 2.038899999999566e-05, 2.0749999999999935e-05, 2.108300000000507e-05, 2.108300000000507e-05, 2.040300000000217e-05, 2.040300000000217e-05, 2.111099999999727e-05, 2.108299999999813e-05, 2.09169999999953e-05, 2.108299999999813e-05, 2.0763999999999505e-05, 2.091700000000224e-05, 2.1069999999998035e-05, 2.0415999999995327e-05, 2.093100000000181e-05, 2.062500000000328e-05, 2.0764000000006444e-05, 2.108299999999813e-05, 2.05969999999972e-05, 2.0249999999999435e-05, 2.0416000000002266e-05, 2.0513999999999255e-05, 2.093100000000181e-05, 2.0749999999999935e-05, 2.1042000000005834e-05, 2.059700000000414e-05, 2.0915999999995827e-05, 2.0235999999999865e-05, 2.0749999999999935e-05, 2.0415999999995327e-05, 2.041700000000174e-05, 2.0583999999997105e-05, 2.0805999999998215e-05, 2.0749999999999935e-05, 2.106899999999856e-05, 2.0570000000004474e-05, 2.026299999999953e-05, 2.0736000000000365e-05, 2.05969999999972e-05, 2.040300000000217e-05, 2.061099999999677e-05, 2.119500000000163e-05, 2.090300000000267e-05, 2.1097999999997175e-05, 2.040299999999523e-05, 2.0277999999998575e-05]</msg>
<status status="PASS" starttime="20201030 11:52:58.812" endtime="20201030 11:52:58.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.800" endtime="20201030 11:52:58.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:58.827" endtime="20201030 11:52:58.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.823" endtime="20201030 11:52:58.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.821" endtime="20201030 11:52:58.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.319" endtime="20201030 11:52:58.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.317" endtime="20201030 11:52:58.853"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.875" endtime="20201030 11:52:58.892"></status>
</kw>
<msg timestamp="20201030 11:52:58.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.872" endtime="20201030 11:52:58.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.895" endtime="20201030 11:52:58.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.902" endtime="20201030 11:52:58.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.865" endtime="20201030 11:52:58.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.859" endtime="20201030 11:52:58.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.925" endtime="20201030 11:52:59.283"></status>
</kw>
<msg timestamp="20201030 11:52:59.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.922" endtime="20201030 11:52:59.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039805194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039833014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.292" endtime="20201030 11:52:59.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.311" endtime="20201030 11:52:59.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.915" endtime="20201030 11:52:59.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.910" endtime="20201030 11:52:59.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:59.328" level="INFO">${RESULT} = [{'diff': 2.7819999999997846e-05}, {'diff': 2.7820000000004785e-05}, {'diff': 2.8152000000003508e-05}, {'diff': 2.7652999999995542e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.7805999999998277e-...</msg>
<status status="PASS" starttime="20201030 11:52:59.319" endtime="20201030 11:52:59.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:59.337" level="INFO">${ACCURACY} = {'diff': [2.7819999999997846e-05, 2.7820000000004785e-05, 2.8152000000003508e-05, 2.7652999999995542e-05, 2.7818999999998373e-05, 2.7805999999998277e-05, 2.766700000000205e-05, 2.731900000000481e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:59.330" endtime="20201030 11:52:59.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.348" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:52:59.346" endtime="20201030 11:52:59.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.354" level="INFO">VALUE: [2.7819999999997846e-05, 2.7820000000004785e-05, 2.8152000000003508e-05, 2.7652999999995542e-05, 2.7818999999998373e-05, 2.7805999999998277e-05, 2.766700000000205e-05, 2.731900000000481e-05, 2.765300000000248e-05, 2.7152999999995042e-05, 2.7194000000001217e-05, 2.7986000000000677e-05, 2.816700000000255e-05, 2.7472000000000607e-05, 2.8138999999996472e-05, 2.768100000000162e-05, 2.7472000000000607e-05, 2.8013000000000343e-05, 2.816700000000255e-05, 2.798700000000015e-05, 2.761100000000377e-05, 2.768100000000162e-05, 2.816700000000255e-05, 2.787500000000359e-05, 2.7986000000000677e-05, 2.8055000000005992e-05, 2.7305000000005242e-05, 2.7305999999997776e-05, 2.7499999999999747e-05, 2.7986000000000677e-05, 2.713900000000241e-05, 2.8055999999998527e-05, 2.7374999999996152e-05, 2.7832999999997943e-05, 2.8166999999995612e-05, 2.7249999999999497e-05, 2.7819999999997846e-05, 2.740300000000223e-05, 2.7486000000000177e-05, 2.7306000000004715e-05, 2.7499999999999747e-05, 2.8166000000003077e-05, 2.7652000000003008e-05, 2.7708000000001287e-05, 2.7486000000000177e-05, 2.7986000000000677e-05, 2.765300000000248e-05, 2.8013999999999817e-05, 2.798700000000015e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201030 11:52:59.351" endtime="20201030 11:52:59.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.339" endtime="20201030 11:52:59.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:59.366" endtime="20201030 11:52:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.362" endtime="20201030 11:52:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.359" endtime="20201030 11:52:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.855" endtime="20201030 11:52:59.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.854" endtime="20201030 11:52:59.392"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.414" endtime="20201030 11:52:59.433"></status>
</kw>
<msg timestamp="20201030 11:52:59.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.411" endtime="20201030 11:52:59.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.436" endtime="20201030 11:52:59.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.442" endtime="20201030 11:52:59.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.404" endtime="20201030 11:52:59.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.398" endtime="20201030 11:52:59.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.466" endtime="20201030 11:52:59.820"></status>
</kw>
<msg timestamp="20201030 11:52:59.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041342181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041369833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.462" endtime="20201030 11:52:59.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041342181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041369833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.829" endtime="20201030 11:52:59.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.848" endtime="20201030 11:52:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.455" endtime="20201030 11:52:59.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.450" endtime="20201030 11:52:59.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:59.865" level="INFO">${RESULT} = [{'diff': 2.7652000000003008e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.7638999999995972e-05}, {'diff': 2.8166000000003077e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.7471999999993668e-0...</msg>
<status status="PASS" starttime="20201030 11:52:59.857" endtime="20201030 11:52:59.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:59.875" level="INFO">${ACCURACY} = {'diff': [2.7652000000003008e-05, 2.8000000000000247e-05, 2.7638999999995972e-05, 2.8166000000003077e-05, 2.769500000000119e-05, 2.7471999999993668e-05, 2.7334000000003855e-05, 2.7499999999999747e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:59.867" endtime="20201030 11:52:59.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.885" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:52:59.883" endtime="20201030 11:52:59.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.891" level="INFO">VALUE: [2.7652000000003008e-05, 2.8000000000000247e-05, 2.7638999999995972e-05, 2.8166000000003077e-05, 2.769500000000119e-05, 2.7471999999993668e-05, 2.7334000000003855e-05, 2.7499999999999747e-05, 2.7291999999998207e-05, 2.8000000000000247e-05, 2.816700000000255e-05, 2.76379999999965e-05, 2.793100000000187e-05, 2.7306000000004715e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7846999999997513e-05, 2.7486000000000177e-05, 2.7334000000003855e-05, 2.765300000000248e-05, 2.7347999999996486e-05, 2.7513999999999317e-05, 2.748699999999965e-05, 2.797300000000058e-05, 2.763900000000291e-05, 2.7819000000005312e-05, 2.7346999999997013e-05, 2.8000000000000247e-05, 2.8013999999999817e-05, 2.783300000000488e-05, 2.7374999999996152e-05, 2.7472000000000607e-05, 2.8152999999996042e-05, 2.8000000000000247e-05, 2.7971999999994168e-05, 2.7652999999995542e-05, 2.7319999999997346e-05, 2.7792000000005646e-05, 2.765300000000248e-05, 2.7791999999998707e-05, 2.794500000000144e-05, 2.765300000000248e-05, 2.7986000000000677e-05, 2.808300000000513e-05, 2.815300000000298e-05, 2.7305999999997776e-05, 2.731900000000481e-05, 2.7430000000001897e-05, 2.8166000000003077e-05, 2.7971999999994168e-05]</msg>
<status status="PASS" starttime="20201030 11:52:59.888" endtime="20201030 11:52:59.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.876" endtime="20201030 11:52:59.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:59.905" endtime="20201030 11:52:59.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.899" endtime="20201030 11:52:59.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.897" endtime="20201030 11:52:59.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.394" endtime="20201030 11:52:59.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.393" endtime="20201030 11:52:59.930"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.953" endtime="20201030 11:52:59.970"></status>
</kw>
<msg timestamp="20201030 11:52:59.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.950" endtime="20201030 11:52:59.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.973" endtime="20201030 11:52:59.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.980" endtime="20201030 11:52:59.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.943" endtime="20201030 11:52:59.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.937" endtime="20201030 11:52:59.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.003" endtime="20201030 11:53:00.358"></status>
</kw>
<msg timestamp="20201030 11:53:00.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039806069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.000" endtime="20201030 11:53:00.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039778069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039806069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.367" endtime="20201030 11:53:00.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.386" endtime="20201030 11:53:00.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.993" endtime="20201030 11:53:00.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.988" endtime="20201030 11:53:00.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:00.403" level="INFO">${RESULT} = [{'diff': 2.8000000000000247e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.815300000000298e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.765199999999607e-05}, {'diff': 2.7499999999999747e-05...</msg>
<status status="PASS" starttime="20201030 11:53:00.394" endtime="20201030 11:53:00.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:00.414" level="INFO">${ACCURACY} = {'diff': [2.8000000000000247e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8000000000000247e-05, 2.765199999999607e-05, 2.7499999999999747e-05, 2.7846999999997513e-05, 2.819500000000169e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:53:00.405" endtime="20201030 11:53:00.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.425" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:53:00.422" endtime="20201030 11:53:00.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.430" level="INFO">VALUE: [2.8000000000000247e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8000000000000247e-05, 2.765199999999607e-05, 2.7499999999999747e-05, 2.7846999999997513e-05, 2.819500000000169e-05, 2.798700000000015e-05, 2.7958000000001537e-05, 2.763900000000291e-05, 2.815199999999657e-05, 2.7819999999997846e-05, 2.7486000000000177e-05, 2.8013999999999817e-05, 2.763900000000291e-05, 2.765300000000248e-05, 2.8013999999999817e-05, 2.8054999999999053e-05, 2.7486000000000177e-05, 2.7486000000000177e-05, 2.763900000000291e-05, 2.7472000000000607e-05, 2.816700000000255e-05, 2.7986000000000677e-05, 2.7972000000001107e-05, 2.7666000000002577e-05, 2.797300000000058e-05, 2.766700000000205e-05, 2.8138999999996472e-05, 2.7666000000002577e-05, 2.7986000000000677e-05, 2.8180000000002647e-05, 2.7652999999995542e-05, 2.8000000000000247e-05, 2.8166000000003077e-05, 2.7305999999997776e-05, 2.8110999999997333e-05, 2.7332999999997443e-05, 2.7444000000001467e-05, 2.7819000000005312e-05, 2.744399999999453e-05, 2.7958000000001537e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.7652999999995542e-05, 2.7638000000003438e-05, 2.7486000000000177e-05, 2.7805999999998277e-05, 2.8138999999996472e-05]</msg>
<status status="PASS" starttime="20201030 11:53:00.427" endtime="20201030 11:53:00.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.415" endtime="20201030 11:53:00.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:00.442" endtime="20201030 11:53:00.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.438" endtime="20201030 11:53:00.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.436" endtime="20201030 11:53:00.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.933" endtime="20201030 11:53:00.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.931" endtime="20201030 11:53:00.468"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.490" endtime="20201030 11:53:00.507"></status>
</kw>
<msg timestamp="20201030 11:53:00.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:00.487" endtime="20201030 11:53:00.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:00.511" endtime="20201030 11:53:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.517" endtime="20201030 11:53:00.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.480" endtime="20201030 11:53:00.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.474" endtime="20201030 11:53:00.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.540" endtime="20201030 11:53:00.893"></status>
</kw>
<msg timestamp="20201030 11:53:00.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.537" endtime="20201030 11:53:00.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039900042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039927889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.903" endtime="20201030 11:53:00.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.921" endtime="20201030 11:53:00.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.530" endtime="20201030 11:53:00.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.525" endtime="20201030 11:53:00.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:00.938" level="INFO">${RESULT} = [{'diff': 2.784700000000445e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.7513999999999317e-05}, {'diff': 2.7958000000001537e-05}, {'diff': 2.8013999999999817e-05}, {'diff': 2.8207999999994848e-0...</msg>
<status status="PASS" starttime="20201030 11:53:00.930" endtime="20201030 11:53:00.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:00.950" level="INFO">${ACCURACY} = {'diff': [2.784700000000445e-05, 2.7818999999998373e-05, 2.7513999999999317e-05, 2.7958000000001537e-05, 2.8013999999999817e-05, 2.8207999999994848e-05, 2.7333999999996916e-05, 2.7818999999998373e-05,...</msg>
<status status="PASS" starttime="20201030 11:53:00.940" endtime="20201030 11:53:00.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.961" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:53:00.958" endtime="20201030 11:53:00.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.966" level="INFO">VALUE: [2.784700000000445e-05, 2.7818999999998373e-05, 2.7513999999999317e-05, 2.7958000000001537e-05, 2.8013999999999817e-05, 2.8207999999994848e-05, 2.7333999999996916e-05, 2.7818999999998373e-05, 2.7332999999997443e-05, 2.765300000000248e-05, 2.763900000000291e-05, 2.7806000000005215e-05, 2.7472000000000607e-05, 2.765300000000248e-05, 2.7499999999999747e-05, 2.7333999999996916e-05, 2.815300000000298e-05, 2.816599999999614e-05, 2.766700000000205e-05, 2.8166999999995612e-05, 2.7318999999997873e-05, 2.7430000000001897e-05, 2.8000000000000247e-05, 2.7986000000000677e-05, 2.816599999999614e-05, 2.731900000000481e-05, 2.7472000000000607e-05, 2.7499999999999747e-05, 2.718100000000112e-05, 2.7666999999995112e-05, 2.817999999999571e-05, 2.7582999999997693e-05, 2.7332999999997443e-05, 2.7499999999999747e-05, 2.766700000000205e-05, 2.768100000000162e-05, 2.768100000000162e-05, 2.763900000000291e-05, 2.765199999999607e-05, 2.8054999999999053e-05, 2.7819999999997846e-05, 2.763900000000291e-05, 2.7513999999999317e-05, 2.8000000000000247e-05, 2.8083999999997666e-05, 2.7320000000004285e-05, 2.7318999999997873e-05, 2.770900000000076e-05, 2.7986000000000677e-05, 2.783300000000488e-05]</msg>
<status status="PASS" starttime="20201030 11:53:00.963" endtime="20201030 11:53:00.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.951" endtime="20201030 11:53:00.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:00.978" endtime="20201030 11:53:01.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.974" endtime="20201030 11:53:01.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.972" endtime="20201030 11:53:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.470" endtime="20201030 11:53:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.469" endtime="20201030 11:53:01.004"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.026" endtime="20201030 11:53:01.042"></status>
</kw>
<msg timestamp="20201030 11:53:01.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.023" endtime="20201030 11:53:01.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.046" endtime="20201030 11:53:01.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.052" endtime="20201030 11:53:01.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.016" endtime="20201030 11:53:01.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.010" endtime="20201030 11:53:01.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.075" endtime="20201030 11:53:01.425"></status>
</kw>
<msg timestamp="20201030 11:53:01.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.072" endtime="20201030 11:53:01.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040078347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.436" endtime="20201030 11:53:01.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.458" endtime="20201030 11:53:01.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.065" endtime="20201030 11:53:01.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.060" endtime="20201030 11:53:01.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.479" level="INFO">${RESULT} = [{'diff': 2.8222000000001357e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.8166999999995612e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.7513999999999317e-05}, {'diff': 2.7846999999997513e-...</msg>
<status status="PASS" starttime="20201030 11:53:01.469" endtime="20201030 11:53:01.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:01.488" level="INFO">${ACCURACY} = {'diff': [2.8222000000001357e-05, 2.7818999999998373e-05, 2.8166999999995612e-05, 2.7818999999998373e-05, 2.7513999999999317e-05, 2.7846999999997513e-05, 2.786100000000402e-05, 2.7374999999996152e-05,...</msg>
<status status="PASS" starttime="20201030 11:53:01.481" endtime="20201030 11:53:01.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.499" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:53:01.497" endtime="20201030 11:53:01.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.505" level="INFO">VALUE: [2.8222000000001357e-05, 2.7818999999998373e-05, 2.8166999999995612e-05, 2.7818999999998373e-05, 2.7513999999999317e-05, 2.7846999999997513e-05, 2.786100000000402e-05, 2.7374999999996152e-05, 2.7486000000000177e-05, 2.7652999999995542e-05, 2.7833999999997416e-05, 2.8000000000000247e-05, 2.7486000000000177e-05, 2.7666999999995112e-05, 2.733300000000438e-05, 2.8027999999999387e-05, 2.7985999999993738e-05, 2.7486000000000177e-05, 2.7249999999999497e-05, 2.7986000000000677e-05, 2.7652000000003008e-05, 2.765300000000248e-05, 2.8013999999999817e-05, 2.7305000000005242e-05, 2.8152999999996042e-05, 2.819500000000169e-05, 2.7304999999998303e-05, 2.7833999999997416e-05, 2.7486000000000177e-05, 2.7860999999997083e-05, 2.765300000000248e-05, 2.7318999999997873e-05, 2.8096999999997763e-05, 2.7790999999999233e-05, 2.8152999999996042e-05, 2.815300000000298e-05, 2.7333999999996916e-05, 2.7513999999999317e-05, 2.7819000000005312e-05, 2.7930000000002397e-05, 2.8000000000000247e-05, 2.765300000000248e-05, 2.7277999999998637e-05, 2.731900000000481e-05, 2.766700000000205e-05, 2.786100000000402e-05, 2.7486000000000177e-05, 2.766599999999564e-05, 2.7833999999997416e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201030 11:53:01.502" endtime="20201030 11:53:01.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.490" endtime="20201030 11:53:01.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:01.518" endtime="20201030 11:53:01.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.513" endtime="20201030 11:53:01.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.511" endtime="20201030 11:53:01.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.006" endtime="20201030 11:53:01.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.005" endtime="20201030 11:53:01.543"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.566" endtime="20201030 11:53:01.584"></status>
</kw>
<msg timestamp="20201030 11:53:01.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.562" endtime="20201030 11:53:01.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.588" endtime="20201030 11:53:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.594" endtime="20201030 11:53:01.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.555" endtime="20201030 11:53:01.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.550" endtime="20201030 11:53:01.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.617" endtime="20201030 11:53:01.971"></status>
</kw>
<msg timestamp="20201030 11:53:01.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041725292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:01.614" endtime="20201030 11:53:01.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041725292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:01.981" endtime="20201030 11:53:01.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.999" endtime="20201030 11:53:02.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.607" endtime="20201030 11:53:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.602" endtime="20201030 11:53:02.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:02.017" level="INFO">${RESULT} = [{'diff': 2.7791999999998707e-05}, {'diff': 2.8152999999996042e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.7222000000000357e-05}, {'diff': 2.7249999999999497e-05}, {'diff': 2.7832999999997943e-...</msg>
<status status="PASS" starttime="20201030 11:53:02.008" endtime="20201030 11:53:02.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:02.026" level="INFO">${ACCURACY} = {'diff': [2.7791999999998707e-05, 2.8152999999996042e-05, 2.8000000000000247e-05, 2.7222000000000357e-05, 2.7249999999999497e-05, 2.7832999999997943e-05, 2.812500000000384e-05, 2.7790999999999233e-05,...</msg>
<status status="PASS" starttime="20201030 11:53:02.019" endtime="20201030 11:53:02.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.037" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:53:02.035" endtime="20201030 11:53:02.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.043" level="INFO">VALUE: [2.7791999999998707e-05, 2.8152999999996042e-05, 2.8000000000000247e-05, 2.7222000000000357e-05, 2.7249999999999497e-05, 2.7832999999997943e-05, 2.812500000000384e-05, 2.7790999999999233e-05, 2.7472000000000607e-05, 2.7986000000000677e-05, 2.713900000000241e-05, 2.7652999999995542e-05, 2.783300000000488e-05, 2.7319999999997346e-05, 2.7277999999998637e-05, 2.7291999999998207e-05, 2.818100000000212e-05, 2.7958000000001537e-05, 2.7278000000005576e-05, 2.7820000000004785e-05, 2.783300000000488e-05, 2.7820000000004785e-05, 2.8124999999996902e-05, 2.766700000000205e-05, 2.7305999999997776e-05, 2.8236000000000927e-05, 2.733300000000438e-05, 2.816700000000255e-05, 2.7332999999997443e-05, 2.7819999999997846e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.7318999999997873e-05, 2.763900000000291e-05, 2.8013999999999817e-05, 2.7486000000000177e-05, 2.7680000000002147e-05, 2.7152999999995042e-05, 2.7513999999999317e-05, 2.7084000000003605e-05, 2.8152999999996042e-05, 2.813900000000341e-05, 2.7486000000000177e-05, 2.7986000000000677e-05, 2.7820000000004785e-05, 2.7818999999998373e-05, 2.8166000000003077e-05, 2.816599999999614e-05, 2.7778000000006076e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201030 11:53:02.039" endtime="20201030 11:53:02.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.028" endtime="20201030 11:53:02.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:02.057" endtime="20201030 11:53:02.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.051" endtime="20201030 11:53:02.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.048" endtime="20201030 11:53:02.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.545" endtime="20201030 11:53:02.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.544" endtime="20201030 11:53:02.082"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.105" endtime="20201030 11:53:02.122"></status>
</kw>
<msg timestamp="20201030 11:53:02.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.101" endtime="20201030 11:53:02.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.125" endtime="20201030 11:53:02.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.131" endtime="20201030 11:53:02.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.094" endtime="20201030 11:53:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.089" endtime="20201030 11:53:02.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.154" endtime="20201030 11:53:02.508"></status>
</kw>
<msg timestamp="20201030 11:53:02.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039882194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039909694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.151" endtime="20201030 11:53:02.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039882194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039909694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.517" endtime="20201030 11:53:02.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.536" endtime="20201030 11:53:02.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.144" endtime="20201030 11:53:02.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.139" endtime="20201030 11:53:02.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:02.553" level="INFO">${RESULT} = [{'diff': 2.7499999999999747e-05}, {'diff': 2.815300000000298e-05}, {'diff': 2.7986000000000677e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.813900000000341e-05}, {'diff': 2.7680999999994682e-05...</msg>
<status status="PASS" starttime="20201030 11:53:02.545" endtime="20201030 11:53:02.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:02.564" level="INFO">${ACCURACY} = {'diff': [2.7499999999999747e-05, 2.815300000000298e-05, 2.7986000000000677e-05, 2.7486000000000177e-05, 2.813900000000341e-05, 2.7680999999994682e-05, 2.7333999999996916e-05, 2.784700000000445e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:53:02.555" endtime="20201030 11:53:02.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.575" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:53:02.573" endtime="20201030 11:53:02.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.580" level="INFO">VALUE: [2.7499999999999747e-05, 2.815300000000298e-05, 2.7986000000000677e-05, 2.7486000000000177e-05, 2.813900000000341e-05, 2.7680999999994682e-05, 2.7333999999996916e-05, 2.784700000000445e-05, 2.7916999999995362e-05, 2.731900000000481e-05, 2.8000000000000247e-05, 2.7680000000002147e-05, 2.7652999999995542e-05, 2.733300000000438e-05, 2.7499999999999747e-05, 2.76379999999965e-05, 2.7986000000000677e-05, 2.8180000000002647e-05, 2.765199999999607e-05, 2.7986000000000677e-05, 2.7472000000000607e-05, 2.7986000000000677e-05, 2.7318999999997873e-05, 2.7820000000004785e-05, 2.7458000000001037e-05, 2.815300000000298e-05, 2.7819999999997846e-05, 2.7318999999997873e-05, 2.7486000000000177e-05, 2.763900000000291e-05, 2.7638000000003438e-05, 2.745900000000051e-05, 2.7318999999997873e-05, 2.7596999999997263e-05, 2.7819999999997846e-05, 2.8013999999999817e-05, 2.733300000000438e-05, 2.8055999999998527e-05, 2.7486000000000177e-05, 2.7680000000002147e-05, 2.765199999999607e-05, 2.7319999999997346e-05, 2.8152999999996042e-05, 2.7472000000000607e-05, 2.815300000000298e-05, 2.7986000000000677e-05, 2.8013999999999817e-05, 2.8166999999995612e-05, 2.7832999999997943e-05, 2.7318999999997873e-05]</msg>
<status status="PASS" starttime="20201030 11:53:02.577" endtime="20201030 11:53:02.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.566" endtime="20201030 11:53:02.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:02.593" endtime="20201030 11:53:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.589" endtime="20201030 11:53:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.586" endtime="20201030 11:53:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.084" endtime="20201030 11:53:02.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.083" endtime="20201030 11:53:02.618"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.641" endtime="20201030 11:53:02.658"></status>
</kw>
<msg timestamp="20201030 11:53:02.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.637" endtime="20201030 11:53:02.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.662" endtime="20201030 11:53:02.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.668" endtime="20201030 11:53:02.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.630" endtime="20201030 11:53:02.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.625" endtime="20201030 11:53:02.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.691" endtime="20201030 11:53:03.045"></status>
</kw>
<msg timestamp="20201030 11:53:03.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039846778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039881875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.688" endtime="20201030 11:53:03.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039846778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039881875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.054" endtime="20201030 11:53:03.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.073" endtime="20201030 11:53:03.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.681" endtime="20201030 11:53:03.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.676" endtime="20201030 11:53:03.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:03.090" level="INFO">${RESULT} = [{'diff': 3.5096999999997824e-05}, {'diff': 3.5054999999999115e-05}, {'diff': 3.491700000000236e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.5082999999998254e-05}, {'diff': 3.488900000000322e-05}...</msg>
<status status="PASS" starttime="20201030 11:53:03.081" endtime="20201030 11:53:03.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:03.101" level="INFO">${ACCURACY} = {'diff': [3.5096999999997824e-05, 3.5054999999999115e-05, 3.491700000000236e-05, 3.473600000000049e-05, 3.5082999999998254e-05, 3.488900000000322e-05, 3.4568999999998185e-05, 3.473600000000049e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:53:03.092" endtime="20201030 11:53:03.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.112" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:53:03.110" endtime="20201030 11:53:03.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.118" level="INFO">VALUE: [3.5096999999997824e-05, 3.5054999999999115e-05, 3.491700000000236e-05, 3.473600000000049e-05, 3.5082999999998254e-05, 3.488900000000322e-05, 3.4568999999998185e-05, 3.473600000000049e-05, 3.5054999999999115e-05, 3.444399999999459e-05, 3.4388999999995784e-05, 3.505599999999859e-05, 3.441700000000186e-05, 3.470800000000135e-05, 3.440300000000229e-05, 3.475000000000006e-05, 3.506999999999816e-05, 3.4582999999997754e-05, 3.473600000000049e-05, 3.4874999999996714e-05, 3.475000000000006e-05, 3.505599999999859e-05, 3.4555000000005553e-05, 3.509700000000476e-05, 3.520799999999491e-05, 3.423699999999946e-05, 3.4888999999996284e-05, 3.506999999999816e-05, 3.4360999999996644e-05, 3.473600000000049e-05, 3.420799999999391e-05, 3.454199999999852e-05, 3.472200000000092e-05, 3.4374999999996214e-05, 3.50700000000051e-05, 3.4402999999995354e-05, 3.441700000000186e-05, 3.441599999999545e-05, 3.4846999999997574e-05, 3.424999999999956e-05, 3.440300000000229e-05, 3.5082999999998254e-05, 3.469500000000125e-05, 3.495900000000107e-05, 3.440300000000229e-05, 3.440300000000229e-05, 3.525000000000056e-05, 3.490300000000279e-05, 3.438900000000272e-05, 3.422200000000042e-05]</msg>
<status status="PASS" starttime="20201030 11:53:03.115" endtime="20201030 11:53:03.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.103" endtime="20201030 11:53:03.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:03.136" endtime="20201030 11:53:03.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.132" endtime="20201030 11:53:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.130" endtime="20201030 11:53:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.620" endtime="20201030 11:53:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.619" endtime="20201030 11:53:03.162"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.184" endtime="20201030 11:53:03.201"></status>
</kw>
<msg timestamp="20201030 11:53:03.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.181" endtime="20201030 11:53:03.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.205" endtime="20201030 11:53:03.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.211" endtime="20201030 11:53:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.174" endtime="20201030 11:53:03.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.168" endtime="20201030 11:53:03.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.235" endtime="20201030 11:53:03.584"></status>
</kw>
<msg timestamp="20201030 11:53:03.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039787722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039822111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.232" endtime="20201030 11:53:03.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039787722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039822111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.593" endtime="20201030 11:53:03.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.612" endtime="20201030 11:53:03.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.224" endtime="20201030 11:53:03.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.219" endtime="20201030 11:53:03.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:03.629" level="INFO">${RESULT} = [{'diff': 3.438900000000272e-05}, {'diff': 3.438900000000272e-05}, {'diff': 3.4902999999995854e-05}, {'diff': 3.516600000000314e-05}, {'diff': 3.455599999999809e-05}, {'diff': 3.473600000000049e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:53:03.620" endtime="20201030 11:53:03.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:03.638" level="INFO">${ACCURACY} = {'diff': [3.438900000000272e-05, 3.438900000000272e-05, 3.4902999999995854e-05, 3.516600000000314e-05, 3.455599999999809e-05, 3.473600000000049e-05, 3.4318999999997934e-05, 3.5068999999998685e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 11:53:03.631" endtime="20201030 11:53:03.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.649" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:53:03.647" endtime="20201030 11:53:03.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.654" level="INFO">VALUE: [3.438900000000272e-05, 3.438900000000272e-05, 3.4902999999995854e-05, 3.516600000000314e-05, 3.455599999999809e-05, 3.473600000000049e-05, 3.4318999999997934e-05, 3.5068999999998685e-05, 3.473600000000049e-05, 3.459700000000426e-05, 3.475000000000006e-05, 3.5068999999998685e-05, 3.440300000000229e-05, 3.5082999999998254e-05, 3.455600000000503e-05, 3.525000000000056e-05, 3.451399999999938e-05, 3.45700000000046e-05, 3.5096999999997824e-05, 3.458400000000417e-05, 3.488799999999681e-05, 3.4916999999995424e-05, 3.458300000000469e-05, 3.490300000000279e-05, 3.455600000000503e-05, 3.426400000000607e-05, 3.490300000000279e-05, 3.520900000000132e-05, 3.475000000000006e-05, 3.470900000000082e-05, 3.4888999999996284e-05, 3.423599999999999e-05, 3.505599999999859e-05, 3.458399999999723e-05, 3.501399999999988e-05, 3.475000000000006e-05, 3.4582999999997754e-05, 3.4708999999993884e-05, 3.523600000000099e-05, 3.5082999999998254e-05, 3.4430999999994494e-05, 3.438900000000272e-05, 3.438900000000272e-05, 3.4902999999995854e-05, 3.4874999999996714e-05, 3.5054999999999115e-05, 3.473600000000049e-05, 3.487500000000365e-05, 3.441700000000186e-05, 3.525000000000056e-05]</msg>
<status status="PASS" starttime="20201030 11:53:03.651" endtime="20201030 11:53:03.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.640" endtime="20201030 11:53:03.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:03.667" endtime="20201030 11:53:03.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.663" endtime="20201030 11:53:03.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.660" endtime="20201030 11:53:03.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.164" endtime="20201030 11:53:03.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.163" endtime="20201030 11:53:03.692"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.715" endtime="20201030 11:53:03.732"></status>
</kw>
<msg timestamp="20201030 11:53:03.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.712" endtime="20201030 11:53:03.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.736" endtime="20201030 11:53:03.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.742" endtime="20201030 11:53:03.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.704" endtime="20201030 11:53:03.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.699" endtime="20201030 11:53:03.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.765" endtime="20201030 11:53:04.108"></status>
</kw>
<msg timestamp="20201030 11:53:04.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041340083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.762" endtime="20201030 11:53:04.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041340083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.117" endtime="20201030 11:53:04.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.136" endtime="20201030 11:53:04.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.755" endtime="20201030 11:53:04.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.750" endtime="20201030 11:53:04.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:04.153" level="INFO">${RESULT} = [{'diff': 3.470800000000135e-05}, {'diff': 3.456999999999766e-05}, {'diff': 3.472200000000092e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.5054999999999115e-05}, {'diff': 3.472300000000039e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:04.144" endtime="20201030 11:53:04.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:04.163" level="INFO">${ACCURACY} = {'diff': [3.470800000000135e-05, 3.456999999999766e-05, 3.472200000000092e-05, 3.42779999999987e-05, 3.5054999999999115e-05, 3.472300000000039e-05, 3.438900000000272e-05, 3.472200000000092e-05, 3.4903...</msg>
<status status="PASS" starttime="20201030 11:53:04.155" endtime="20201030 11:53:04.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.173" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:53:04.171" endtime="20201030 11:53:04.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.179" level="INFO">VALUE: [3.470800000000135e-05, 3.456999999999766e-05, 3.472200000000092e-05, 3.42779999999987e-05, 3.5054999999999115e-05, 3.472300000000039e-05, 3.438900000000272e-05, 3.472200000000092e-05, 3.490300000000279e-05, 3.419399999999434e-05, 3.469400000000178e-05, 3.420800000000085e-05, 3.505599999999859e-05, 3.422200000000042e-05, 3.505600000000553e-05, 3.506999999999816e-05, 3.488900000000322e-05, 3.440300000000229e-05, 3.5069000000005623e-05, 3.472200000000092e-05, 3.4832999999998004e-05, 3.422200000000042e-05, 3.437500000000315e-05, 3.4874999999996714e-05, 3.5054999999999115e-05, 3.4360999999996644e-05, 3.5054999999999115e-05, 3.5222999999993954e-05, 3.422200000000042e-05, 3.438900000000272e-05, 3.505600000000553e-05, 3.438900000000272e-05, 3.422200000000042e-05, 3.4874999999996714e-05, 3.472200000000092e-05, 3.438900000000272e-05, 3.5082999999998254e-05, 3.451399999999938e-05, 3.4652999999995604e-05, 3.525000000000056e-05, 3.5069000000005623e-05, 3.455599999999809e-05, 3.440300000000229e-05, 3.4902999999995854e-05, 3.468100000000168e-05, 3.437500000000315e-05, 3.419400000000128e-05, 3.426399999999913e-05, 3.437500000000315e-05, 3.455600000000503e-05]</msg>
<status status="PASS" starttime="20201030 11:53:04.176" endtime="20201030 11:53:04.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.164" endtime="20201030 11:53:04.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:04.193" endtime="20201030 11:53:04.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.187" endtime="20201030 11:53:04.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.184" endtime="20201030 11:53:04.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.694" endtime="20201030 11:53:04.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.693" endtime="20201030 11:53:04.218"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.241" endtime="20201030 11:53:04.257"></status>
</kw>
<msg timestamp="20201030 11:53:04.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.237" endtime="20201030 11:53:04.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.260" endtime="20201030 11:53:04.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.266" endtime="20201030 11:53:04.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.230" endtime="20201030 11:53:04.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.224" endtime="20201030 11:53:04.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.290" endtime="20201030 11:53:04.631"></status>
</kw>
<msg timestamp="20201030 11:53:04.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039752597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.286" endtime="20201030 11:53:04.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039752597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039786792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.641" endtime="20201030 11:53:04.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.660" endtime="20201030 11:53:04.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.279" endtime="20201030 11:53:04.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.275" endtime="20201030 11:53:04.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:04.677" level="INFO">${RESULT} = [{'diff': 3.419500000000075e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.424999999999956e-05}, {'diff': 3.4888999999996284e-05}, {'diff': 3.420800000000085e-05}, {'diff': 3.505600000000553e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:53:04.668" endtime="20201030 11:53:04.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:04.687" level="INFO">${ACCURACY} = {'diff': [3.419500000000075e-05, 3.473600000000049e-05, 3.424999999999956e-05, 3.4888999999996284e-05, 3.420800000000085e-05, 3.505600000000553e-05, 3.4930999999994994e-05, 3.458300000000469e-05, 3.52...</msg>
<status status="PASS" starttime="20201030 11:53:04.679" endtime="20201030 11:53:04.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.698" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:53:04.696" endtime="20201030 11:53:04.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.704" level="INFO">VALUE: [3.419500000000075e-05, 3.473600000000049e-05, 3.424999999999956e-05, 3.4888999999996284e-05, 3.420800000000085e-05, 3.505600000000553e-05, 3.4930999999994994e-05, 3.458300000000469e-05, 3.525000000000056e-05, 3.438900000000272e-05, 3.440200000000282e-05, 3.5082999999998254e-05, 3.479199999999877e-05, 3.487500000000365e-05, 3.440199999999588e-05, 3.5054999999999115e-05, 3.4305000000005303e-05, 3.44580000000011e-05, 3.4722999999993454e-05, 3.440200000000282e-05, 3.490300000000279e-05, 3.5069000000005623e-05, 3.524999999999362e-05, 3.5166999999995674e-05, 3.5068999999998685e-05, 3.501399999999988e-05, 3.490300000000279e-05, 3.529199999999927e-05, 3.523600000000099e-05, 3.491700000000236e-05, 3.422200000000042e-05, 3.459700000000426e-05, 3.465300000000254e-05, 3.4568999999998185e-05, 3.493100000000193e-05, 3.459700000000426e-05, 3.475000000000006e-05, 3.458399999999723e-05, 3.483300000000494e-05, 3.4388999999995784e-05, 3.504199999999902e-05, 3.423599999999999e-05, 3.523700000000046e-05, 3.470900000000082e-05, 3.440200000000282e-05, 3.490300000000279e-05, 3.419400000000128e-05, 3.509700000000476e-05, 3.473600000000049e-05, 3.4888999999996284e-05]</msg>
<status status="PASS" starttime="20201030 11:53:04.701" endtime="20201030 11:53:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.689" endtime="20201030 11:53:04.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:04.716" endtime="20201030 11:53:04.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.712" endtime="20201030 11:53:04.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.709" endtime="20201030 11:53:04.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.220" endtime="20201030 11:53:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.219" endtime="20201030 11:53:04.741"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.764" endtime="20201030 11:53:04.780"></status>
</kw>
<msg timestamp="20201030 11:53:04.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.761" endtime="20201030 11:53:04.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.783" endtime="20201030 11:53:04.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.789" endtime="20201030 11:53:04.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.753" endtime="20201030 11:53:04.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.747" endtime="20201030 11:53:04.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.813" endtime="20201030 11:53:05.156"></status>
</kw>
<msg timestamp="20201030 11:53:05.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039618403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.810" endtime="20201030 11:53:05.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039618403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:05.165" endtime="20201030 11:53:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.184" endtime="20201030 11:53:05.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.802" endtime="20201030 11:53:05.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.797" endtime="20201030 11:53:05.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:05.201" level="INFO">${RESULT} = [{'diff': 3.493100000000193e-05}, {'diff': 3.455599999999809e-05}, {'diff': 3.423599999999999e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.455600000000503e-05}, {'diff': 3.470799999999441e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:05.192" endtime="20201030 11:53:05.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:05.212" level="INFO">${ACCURACY} = {'diff': [3.493100000000193e-05, 3.455599999999809e-05, 3.423599999999999e-05, 3.501399999999988e-05, 3.455600000000503e-05, 3.470799999999441e-05, 3.491600000000289e-05, 3.441700000000186e-05, 3.4736...</msg>
<status status="PASS" starttime="20201030 11:53:05.203" endtime="20201030 11:53:05.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.223" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:53:05.221" endtime="20201030 11:53:05.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.229" level="INFO">VALUE: [3.493100000000193e-05, 3.455599999999809e-05, 3.423599999999999e-05, 3.501399999999988e-05, 3.455600000000503e-05, 3.470799999999441e-05, 3.491600000000289e-05, 3.441700000000186e-05, 3.473600000000049e-05, 3.4902999999995854e-05, 3.490300000000279e-05, 3.465300000000254e-05, 3.488900000000322e-05, 3.458400000000417e-05, 3.470900000000082e-05, 3.441700000000186e-05, 3.472200000000092e-05, 3.469500000000125e-05, 3.440300000000229e-05, 3.423599999999999e-05, 3.438900000000272e-05, 3.523600000000099e-05, 3.4624999999996464e-05, 3.523600000000099e-05, 3.4916999999995424e-05, 3.501399999999988e-05, 3.479200000000571e-05, 3.5054999999999115e-05, 3.419400000000128e-05, 3.433300000000444e-05, 3.440300000000229e-05, 3.526400000000013e-05, 3.4430999999994494e-05, 3.4944999999994564e-05, 3.4582999999997754e-05, 3.5040999999999545e-05, 3.490300000000279e-05, 3.472300000000039e-05, 3.4582999999997754e-05, 3.463900000000297e-05, 3.454199999999852e-05, 3.476399999999963e-05, 3.470800000000135e-05, 3.4374999999996214e-05, 3.4596999999997324e-05, 3.491700000000236e-05, 3.4874999999996714e-05, 3.522200000000142e-05, 3.490200000000332e-05, 3.473699999999996e-05]</msg>
<status status="PASS" starttime="20201030 11:53:05.226" endtime="20201030 11:53:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.214" endtime="20201030 11:53:05.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:05.241" endtime="20201030 11:53:05.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.237" endtime="20201030 11:53:05.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.234" endtime="20201030 11:53:05.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.743" endtime="20201030 11:53:05.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.742" endtime="20201030 11:53:05.266"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.289" endtime="20201030 11:53:05.305"></status>
</kw>
<msg timestamp="20201030 11:53:05.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.286" endtime="20201030 11:53:05.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.309" endtime="20201030 11:53:05.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.315" endtime="20201030 11:53:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.279" endtime="20201030 11:53:05.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.273" endtime="20201030 11:53:05.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.338" endtime="20201030 11:53:05.681"></status>
</kw>
<msg timestamp="20201030 11:53:05.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039917931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:05.335" endtime="20201030 11:53:05.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039917931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:05.691" endtime="20201030 11:53:05.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.709" endtime="20201030 11:53:05.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.328" endtime="20201030 11:53:05.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.323" endtime="20201030 11:53:05.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:05.726" level="INFO">${RESULT} = [{'diff': 3.5069000000005623e-05}, {'diff': 3.424999999999956e-05}, {'diff': 3.4568999999998185e-05}, {'diff': 3.456999999999766e-05}, {'diff': 3.455599999999809e-05}, {'diff': 3.506999999999816e-05},...</msg>
<status status="PASS" starttime="20201030 11:53:05.717" endtime="20201030 11:53:05.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:05.736" level="INFO">${ACCURACY} = {'diff': [3.5069000000005623e-05, 3.424999999999956e-05, 3.4568999999998185e-05, 3.456999999999766e-05, 3.455599999999809e-05, 3.506999999999816e-05, 3.423599999999999e-05, 3.455599999999809e-05, 3.45...</msg>
<status status="PASS" starttime="20201030 11:53:05.728" endtime="20201030 11:53:05.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.746" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:53:05.744" endtime="20201030 11:53:05.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.752" level="INFO">VALUE: [3.5069000000005623e-05, 3.424999999999956e-05, 3.4568999999998185e-05, 3.456999999999766e-05, 3.455599999999809e-05, 3.506999999999816e-05, 3.423599999999999e-05, 3.455599999999809e-05, 3.4568999999998185e-05, 3.505599999999859e-05, 3.5068999999998685e-05, 3.472300000000039e-05, 3.472200000000092e-05, 3.505600000000553e-05, 3.494399999999509e-05, 3.472199999999398e-05, 3.506999999999816e-05, 3.4568999999998185e-05, 3.5055000000006054e-05, 3.441600000000239e-05, 3.454199999999852e-05, 3.522200000000142e-05, 3.438900000000272e-05, 3.49580000000016e-05, 3.438900000000272e-05, 3.4846999999997574e-05, 3.4902999999995854e-05, 3.438900000000272e-05, 3.473600000000049e-05, 3.440300000000229e-05, 3.472200000000092e-05, 3.440199999999588e-05, 3.475000000000006e-05, 3.455599999999809e-05, 3.472200000000092e-05, 3.4346999999997074e-05, 3.44580000000011e-05, 3.455599999999809e-05, 3.475000000000006e-05, 3.490199999999638e-05, 3.4902999999995854e-05, 3.4568999999998185e-05, 3.508400000000467e-05, 3.4902999999995854e-05, 3.440300000000229e-05, 3.525000000000056e-05, 3.420800000000085e-05, 3.4554999999998615e-05, 3.4582999999997754e-05, 3.422200000000042e-05]</msg>
<status status="PASS" starttime="20201030 11:53:05.749" endtime="20201030 11:53:05.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.737" endtime="20201030 11:53:05.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:05.764" endtime="20201030 11:53:05.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.760" endtime="20201030 11:53:05.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.758" endtime="20201030 11:53:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.269" endtime="20201030 11:53:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.267" endtime="20201030 11:53:05.790"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.812" endtime="20201030 11:53:05.830"></status>
</kw>
<msg timestamp="20201030 11:53:05.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.809" endtime="20201030 11:53:05.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.833" endtime="20201030 11:53:05.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.840" endtime="20201030 11:53:05.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.802" endtime="20201030 11:53:05.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.796" endtime="20201030 11:53:05.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.865" endtime="20201030 11:53:06.206"></status>
</kw>
<msg timestamp="20201030 11:53:06.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04122275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:05.861" endtime="20201030 11:53:06.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04122275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041257792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:06.215" endtime="20201030 11:53:06.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.234" endtime="20201030 11:53:06.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.853" endtime="20201030 11:53:06.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.848" endtime="20201030 11:53:06.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:06.251" level="INFO">${RESULT} = [{'diff': 3.504199999999902e-05}, {'diff': 3.488900000000322e-05}, {'diff': 3.454199999999852e-05}, {'diff': 3.4554999999998615e-05}, {'diff': 3.4568999999998185e-05}, {'diff': 3.436199999999612e-05},...</msg>
<status status="PASS" starttime="20201030 11:53:06.242" endtime="20201030 11:53:06.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:06.261" level="INFO">${ACCURACY} = {'diff': [3.504199999999902e-05, 3.488900000000322e-05, 3.454199999999852e-05, 3.4554999999998615e-05, 3.4568999999998185e-05, 3.436199999999612e-05, 3.522199999999448e-05, 3.463900000000297e-05, 3.46...</msg>
<status status="PASS" starttime="20201030 11:53:06.253" endtime="20201030 11:53:06.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.272" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:53:06.269" endtime="20201030 11:53:06.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.277" level="INFO">VALUE: [3.504199999999902e-05, 3.488900000000322e-05, 3.454199999999852e-05, 3.4554999999998615e-05, 3.4568999999998185e-05, 3.436199999999612e-05, 3.522199999999448e-05, 3.463900000000297e-05, 3.469500000000125e-05, 3.472200000000092e-05, 3.424999999999956e-05, 3.522199999999448e-05, 3.4388999999995784e-05, 3.4526999999999475e-05, 3.443100000000143e-05, 3.490300000000279e-05, 3.491600000000289e-05, 3.506999999999816e-05, 3.422200000000042e-05, 3.505600000000553e-05, 3.475000000000006e-05, 3.4416999999994924e-05, 3.5040999999999545e-05, 3.522300000000089e-05, 3.4568999999998185e-05, 3.490300000000279e-05, 3.5040999999999545e-05, 3.4582999999997754e-05, 3.490300000000279e-05, 3.491700000000236e-05, 3.490300000000279e-05, 3.486100000000408e-05, 3.504200000000596e-05, 3.4582999999997754e-05, 3.4554999999998615e-05, 3.523600000000099e-05, 3.444400000000153e-05, 3.438900000000272e-05, 3.5054999999999115e-05, 3.4888999999996284e-05, 3.438900000000272e-05, 3.5068999999998685e-05, 3.4388999999995784e-05, 3.468100000000168e-05, 3.422200000000042e-05, 3.438900000000272e-05, 3.504199999999902e-05, 3.502799999999945e-05, 3.472200000000092e-05, 3.505599999999859e-05]</msg>
<status status="PASS" starttime="20201030 11:53:06.274" endtime="20201030 11:53:06.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.262" endtime="20201030 11:53:06.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:06.291" endtime="20201030 11:53:06.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.285" endtime="20201030 11:53:06.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.283" endtime="20201030 11:53:06.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.792" endtime="20201030 11:53:06.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.791" endtime="20201030 11:53:06.316"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.339" endtime="20201030 11:53:06.355"></status>
</kw>
<msg timestamp="20201030 11:53:06.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.336" endtime="20201030 11:53:06.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.359" endtime="20201030 11:53:06.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.365" endtime="20201030 11:53:06.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.329" endtime="20201030 11:53:06.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.323" endtime="20201030 11:53:06.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.388" endtime="20201030 11:53:06.729"></status>
</kw>
<msg timestamp="20201030 11:53:06.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039844319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:06.385" endtime="20201030 11:53:06.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039802986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039844319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:06.739" endtime="20201030 11:53:06.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.757" endtime="20201030 11:53:06.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.378" endtime="20201030 11:53:06.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.373" endtime="20201030 11:53:06.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:06.775" level="INFO">${RESULT} = [{'diff': 4.1333000000004505e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.1639000000003035e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.1361000000003645e-05}, {'diff': 4.1459000000000634e-05},...</msg>
<status status="PASS" starttime="20201030 11:53:06.766" endtime="20201030 11:53:06.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:06.785" level="INFO">${ACCURACY} = {'diff': [4.1333000000004505e-05, 4.18059999999984e-05, 4.1639000000003035e-05, 4.18059999999984e-05, 4.1361000000003645e-05, 4.1459000000000634e-05, 4.170800000000141e-05, 4.1639000000003035e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 11:53:06.777" endtime="20201030 11:53:06.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.796" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:53:06.794" endtime="20201030 11:53:06.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.802" level="INFO">VALUE: [4.1333000000004505e-05, 4.18059999999984e-05, 4.1639000000003035e-05, 4.18059999999984e-05, 4.1361000000003645e-05, 4.1459000000000634e-05, 4.170800000000141e-05, 4.1639000000003035e-05, 4.170799999999447e-05, 4.1459000000000634e-05, 4.197199999999429e-05, 4.1681000000001744e-05, 4.145800000000116e-05, 4.127799999999876e-05, 4.173600000000055e-05, 4.2096999999997886e-05, 4.1639000000003035e-05, 4.19860000000008e-05, 4.154199999999858e-05, 4.199999999999343e-05, 4.2139000000003535e-05, 4.2125000000003965e-05, 4.216599999999626e-05, 4.19860000000008e-05, 4.1819000000005435e-05, 4.147199999999379e-05, 4.1332999999997566e-05, 4.1304999999998426e-05, 4.1639000000003035e-05, 4.19860000000008e-05, 4.2124999999997026e-05, 4.181999999999797e-05, 4.1959000000001134e-05, 4.2138999999996596e-05, 4.2124999999997026e-05, 4.129199999999833e-05, 4.13059999999979e-05, 4.195799999999472e-05, 4.179199999999883e-05, 4.1653000000002605e-05, 4.1459000000000634e-05, 4.136200000000312e-05, 4.1624999999996526e-05, 4.145800000000116e-05, 4.147200000000073e-05, 4.1790999999999356e-05, 4.147200000000073e-05, 4.195800000000166e-05, 4.195800000000166e-05, 4.1375000000003215e-05]</msg>
<status status="PASS" starttime="20201030 11:53:06.799" endtime="20201030 11:53:06.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.787" endtime="20201030 11:53:06.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:06.814" endtime="20201030 11:53:06.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.810" endtime="20201030 11:53:06.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.807" endtime="20201030 11:53:06.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.319" endtime="20201030 11:53:06.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.317" endtime="20201030 11:53:06.839"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.862" endtime="20201030 11:53:06.879"></status>
</kw>
<msg timestamp="20201030 11:53:06.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.859" endtime="20201030 11:53:06.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.882" endtime="20201030 11:53:06.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.889" endtime="20201030 11:53:06.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.852" endtime="20201030 11:53:06.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.846" endtime="20201030 11:53:06.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.913" endtime="20201030 11:53:07.254"></status>
</kw>
<msg timestamp="20201030 11:53:07.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039871278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:06.909" endtime="20201030 11:53:07.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039871278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.264" endtime="20201030 11:53:07.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.283" endtime="20201030 11:53:07.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.902" endtime="20201030 11:53:07.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.897" endtime="20201030 11:53:07.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:07.300" level="INFO">${RESULT} = [{'diff': 4.2181000000002244e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.147200000000073e-05}, {'diff': 4.14860000000003e-05}, {'diff': 4.1846999999997636e-05}, {'diff': 4.1473000000000204e-05},...</msg>
<status status="PASS" starttime="20201030 11:53:07.291" endtime="20201030 11:53:07.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:07.311" level="INFO">${ACCURACY} = {'diff': [4.2181000000002244e-05, 4.179199999999883e-05, 4.147200000000073e-05, 4.14860000000003e-05, 4.1846999999997636e-05, 4.1473000000000204e-05, 4.181999999999797e-05, 4.129199999999833e-05, 4.21...</msg>
<status status="PASS" starttime="20201030 11:53:07.302" endtime="20201030 11:53:07.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.322" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:53:07.320" endtime="20201030 11:53:07.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.327" level="INFO">VALUE: [4.2181000000002244e-05, 4.179199999999883e-05, 4.147200000000073e-05, 4.14860000000003e-05, 4.1846999999997636e-05, 4.1473000000000204e-05, 4.181999999999797e-05, 4.129199999999833e-05, 4.2166999999995736e-05, 4.19860000000008e-05, 4.1318999999997996e-05, 4.179199999999883e-05, 4.1290999999998856e-05, 4.13059999999979e-05, 4.1473000000000204e-05, 4.2125000000003965e-05, 4.2138999999996596e-05, 4.1304999999998426e-05, 4.12780000000057e-05, 4.1638999999996096e-05, 4.213799999999712e-05, 4.16660000000027e-05, 4.155599999999815e-05, 4.14860000000003e-05, 4.1319000000004935e-05, 4.2139000000003535e-05, 4.2138999999996596e-05, 4.2139000000003535e-05, 4.2153000000003105e-05, 4.1776999999999787e-05, 4.1818999999998496e-05, 4.200000000000037e-05, 4.1318999999997996e-05, 4.1459000000000634e-05, 4.19860000000008e-05, 4.1639000000003035e-05, 4.145799999999422e-05, 4.1318999999997996e-05, 4.12780000000057e-05, 4.19860000000008e-05, 4.147200000000073e-05, 4.13059999999979e-05, 4.12780000000057e-05, 4.1610999999996956e-05, 4.1361000000003645e-05, 4.1611000000003895e-05, 4.159799999999686e-05, 4.180600000000534e-05, 4.1639000000003035e-05, 4.180600000000534e-05]</msg>
<status status="PASS" starttime="20201030 11:53:07.324" endtime="20201030 11:53:07.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.313" endtime="20201030 11:53:07.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:07.340" endtime="20201030 11:53:07.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.335" endtime="20201030 11:53:07.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.333" endtime="20201030 11:53:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.842" endtime="20201030 11:53:07.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.840" endtime="20201030 11:53:07.365"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.388" endtime="20201030 11:53:07.404"></status>
</kw>
<msg timestamp="20201030 11:53:07.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.385" endtime="20201030 11:53:07.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.407" endtime="20201030 11:53:07.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.414" endtime="20201030 11:53:07.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.377" endtime="20201030 11:53:07.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.372" endtime="20201030 11:53:07.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.437" endtime="20201030 11:53:07.781"></status>
</kw>
<msg timestamp="20201030 11:53:07.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.434" endtime="20201030 11:53:07.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039818972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.790" endtime="20201030 11:53:07.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.809" endtime="20201030 11:53:07.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.427" endtime="20201030 11:53:07.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.422" endtime="20201030 11:53:07.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:07.826" level="INFO">${RESULT} = [{'diff': 4.1959000000001134e-05}, {'diff': 4.195800000000166e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.1889000000003285e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1790999999999356e-05}...</msg>
<status status="PASS" starttime="20201030 11:53:07.818" endtime="20201030 11:53:07.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:07.836" level="INFO">${ACCURACY} = {'diff': [4.1959000000001134e-05, 4.195800000000166e-05, 4.177799999999926e-05, 4.1889000000003285e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.1790999999999356e-05, 4.129200000000527e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:53:07.829" endtime="20201030 11:53:07.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.847" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:53:07.844" endtime="20201030 11:53:07.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.852" level="INFO">VALUE: [4.1959000000001134e-05, 4.195800000000166e-05, 4.177799999999926e-05, 4.1889000000003285e-05, 4.179199999999883e-05, 4.1790999999999356e-05, 4.1790999999999356e-05, 4.129200000000527e-05, 4.2124999999997026e-05, 4.132000000000441e-05, 4.2139000000003535e-05, 4.1291000000005795e-05, 4.18059999999984e-05, 4.129199999999833e-05, 4.1459000000000634e-05, 4.179200000000577e-05, 4.144400000000159e-05, 4.1959000000001134e-05, 4.18059999999984e-05, 4.1304999999998426e-05, 4.198599999999386e-05, 4.1653000000002605e-05, 4.145800000000116e-05, 4.1681000000001744e-05, 4.179199999999883e-05, 4.127799999999876e-05, 4.1611000000003895e-05, 4.154199999999858e-05, 4.1888999999996346e-05, 4.129199999999833e-05, 4.123600000000005e-05, 4.2139000000003535e-05, 4.197200000000123e-05, 4.147200000000073e-05, 4.179199999999883e-05, 4.1973000000000704e-05, 4.14860000000003e-05, 4.182000000000491e-05, 4.195800000000166e-05, 4.131999999999747e-05, 4.145800000000116e-05, 4.1445000000001064e-05, 4.147200000000073e-05, 4.1361000000003645e-05, 4.2125000000003965e-05, 4.1819000000005435e-05, 4.1318999999997996e-05, 4.1625000000003465e-05, 4.197200000000123e-05, 4.127799999999876e-05]</msg>
<status status="PASS" starttime="20201030 11:53:07.849" endtime="20201030 11:53:07.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.837" endtime="20201030 11:53:07.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:07.865" endtime="20201030 11:53:07.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.860" endtime="20201030 11:53:07.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.858" endtime="20201030 11:53:07.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.367" endtime="20201030 11:53:07.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.366" endtime="20201030 11:53:07.890"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.913" endtime="20201030 11:53:07.932"></status>
</kw>
<msg timestamp="20201030 11:53:07.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.910" endtime="20201030 11:53:07.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.935" endtime="20201030 11:53:07.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.941" endtime="20201030 11:53:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.902" endtime="20201030 11:53:07.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.896" endtime="20201030 11:53:07.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.965" endtime="20201030 11:53:08.307"></status>
</kw>
<msg timestamp="20201030 11:53:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.961" endtime="20201030 11:53:08.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042385444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.317" endtime="20201030 11:53:08.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.336" endtime="20201030 11:53:08.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.954" endtime="20201030 11:53:08.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.950" endtime="20201030 11:53:08.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.353" level="INFO">${RESULT} = [{'diff': 4.215200000000363e-05}, {'diff': 4.2125000000003965e-05}, {'diff': 4.14860000000003e-05}, {'diff': 4.129199999999833e-05}, {'diff': 4.14860000000003e-05}, {'diff': 4.1597000000004325e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:08.344" endtime="20201030 11:53:08.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:08.362" level="INFO">${ACCURACY} = {'diff': [4.215200000000363e-05, 4.2125000000003965e-05, 4.14860000000003e-05, 4.129199999999833e-05, 4.14860000000003e-05, 4.1597000000004325e-05, 4.131999999999747e-05, 4.1639000000003035e-05, 4.152...</msg>
<status status="PASS" starttime="20201030 11:53:08.355" endtime="20201030 11:53:08.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.373" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:53:08.371" endtime="20201030 11:53:08.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.379" level="INFO">VALUE: [4.215200000000363e-05, 4.2125000000003965e-05, 4.14860000000003e-05, 4.129199999999833e-05, 4.14860000000003e-05, 4.1597000000004325e-05, 4.131999999999747e-05, 4.1639000000003035e-05, 4.152799999999901e-05, 4.122200000000048e-05, 4.1847000000004575e-05, 4.182000000000491e-05, 4.2139000000003535e-05, 4.197200000000123e-05, 4.132000000000441e-05, 4.126400000000613e-05, 4.181999999999797e-05, 4.19860000000008e-05, 4.1652999999995666e-05, 4.200000000000037e-05, 4.1473000000000204e-05, 4.2111000000004395e-05, 4.1959000000001134e-05, 4.1304999999998426e-05, 4.2138999999996596e-05, 4.163800000000356e-05, 4.1374999999996276e-05, 4.1431000000001494e-05, 4.1318999999997996e-05, 4.1304999999998426e-05, 4.141600000000245e-05, 4.1554999999998676e-05, 4.2124999999997026e-05, 4.1972999999993765e-05, 4.1639000000003035e-05, 4.131999999999747e-05, 4.2139000000003535e-05, 4.197199999999429e-05, 4.1790999999999356e-05, 4.1818999999998496e-05, 4.1902999999995916e-05, 4.147200000000073e-05, 4.1818999999998496e-05, 4.197200000000123e-05, 4.19860000000008e-05, 4.19860000000008e-05, 4.191600000000295e-05, 4.183400000000448e-05, 4.1333000000004505e-05, 4.1473000000000204e-05]</msg>
<status status="PASS" starttime="20201030 11:53:08.375" endtime="20201030 11:53:08.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.364" endtime="20201030 11:53:08.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:08.397" endtime="20201030 11:53:08.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.387" endtime="20201030 11:53:08.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.384" endtime="20201030 11:53:08.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.892" endtime="20201030 11:53:08.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.891" endtime="20201030 11:53:08.422"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.445" endtime="20201030 11:53:08.461"></status>
</kw>
<msg timestamp="20201030 11:53:08.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.442" endtime="20201030 11:53:08.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.464" endtime="20201030 11:53:08.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.471" endtime="20201030 11:53:08.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.434" endtime="20201030 11:53:08.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.429" endtime="20201030 11:53:08.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.494" endtime="20201030 11:53:08.836"></status>
</kw>
<msg timestamp="20201030 11:53:08.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039557806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039599583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.491" endtime="20201030 11:53:08.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039557806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039599583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.846" endtime="20201030 11:53:08.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.865" endtime="20201030 11:53:08.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.484" endtime="20201030 11:53:08.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.479" endtime="20201030 11:53:08.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.882" level="INFO">${RESULT} = [{'diff': 4.1776999999999787e-05}, {'diff': 4.144399999999465e-05}, {'diff': 4.1639000000003035e-05}, {'diff': 4.1583000000004755e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1459000000000634e-05...</msg>
<status status="PASS" starttime="20201030 11:53:08.873" endtime="20201030 11:53:08.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:08.892" level="INFO">${ACCURACY} = {'diff': [4.1776999999999787e-05, 4.144399999999465e-05, 4.1639000000003035e-05, 4.1583000000004755e-05, 4.179199999999883e-05, 4.1459000000000634e-05, 4.1638999999996096e-05, 4.130600000000484e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:53:08.884" endtime="20201030 11:53:08.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.903" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:53:08.901" endtime="20201030 11:53:08.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.909" level="INFO">VALUE: [4.1776999999999787e-05, 4.144399999999465e-05, 4.1639000000003035e-05, 4.1583000000004755e-05, 4.179199999999883e-05, 4.1459000000000634e-05, 4.1638999999996096e-05, 4.130600000000484e-05, 4.1290999999998856e-05, 4.18059999999984e-05, 4.1804999999998926e-05, 4.179199999999883e-05, 4.127799999999876e-05, 4.2125000000003965e-05, 4.161199999999643e-05, 4.1625000000003465e-05, 4.1653000000002605e-05, 4.2125000000003965e-05, 4.1459000000000634e-05, 4.176399999999969e-05, 4.2138999999996596e-05, 4.2138999999996596e-05, 4.18059999999984e-05, 4.1624999999996526e-05, 4.197200000000123e-05, 4.129200000000527e-05, 4.181999999999797e-05, 4.1459000000000634e-05, 4.1305000000005365e-05, 4.126399999999919e-05, 4.195800000000166e-05, 4.195800000000166e-05, 4.145800000000116e-05, 4.145800000000116e-05, 4.1459000000000634e-05, 4.1291000000005795e-05, 4.197200000000123e-05, 4.2124999999997026e-05, 4.145800000000116e-05, 4.13059999999979e-05, 4.145800000000116e-05, 4.1653000000002605e-05, 4.1624999999996526e-05, 4.2027000000000037e-05, 4.127799999999876e-05, 4.180600000000534e-05, 4.1790999999999356e-05, 4.145800000000116e-05, 4.2153000000003105e-05, 4.1417000000001924e-05]</msg>
<status status="PASS" starttime="20201030 11:53:08.906" endtime="20201030 11:53:08.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.894" endtime="20201030 11:53:08.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:08.921" endtime="20201030 11:53:08.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.917" endtime="20201030 11:53:08.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.915" endtime="20201030 11:53:08.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.424" endtime="20201030 11:53:08.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.423" endtime="20201030 11:53:08.947"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.971" endtime="20201030 11:53:08.987"></status>
</kw>
<msg timestamp="20201030 11:53:08.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.967" endtime="20201030 11:53:08.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.990" endtime="20201030 11:53:08.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.997" endtime="20201030 11:53:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.960" endtime="20201030 11:53:09.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.954" endtime="20201030 11:53:09.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.020" endtime="20201030 11:53:09.362"></status>
</kw>
<msg timestamp="20201030 11:53:09.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041093514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041135347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.017" endtime="20201030 11:53:09.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041093514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041135347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.371" endtime="20201030 11:53:09.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.390" endtime="20201030 11:53:09.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.010" endtime="20201030 11:53:09.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.005" endtime="20201030 11:53:09.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:09.407" level="INFO">${RESULT} = [{'diff': 4.1833000000005005e-05}, {'diff': 4.2138999999996596e-05}, {'diff': 4.218000000000277e-05}, {'diff': 4.13059999999979e-05}, {'diff': 4.1417000000001924e-05}, {'diff': 4.179199999999883e-05},...</msg>
<status status="PASS" starttime="20201030 11:53:09.398" endtime="20201030 11:53:09.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:09.418" level="INFO">${ACCURACY} = {'diff': [4.1833000000005005e-05, 4.2138999999996596e-05, 4.218000000000277e-05, 4.13059999999979e-05, 4.1417000000001924e-05, 4.179199999999883e-05, 4.17780000000062e-05, 4.1959000000001134e-05, 4.15...</msg>
<status status="PASS" starttime="20201030 11:53:09.409" endtime="20201030 11:53:09.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.429" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:53:09.427" endtime="20201030 11:53:09.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.435" level="INFO">VALUE: [4.1833000000005005e-05, 4.2138999999996596e-05, 4.218000000000277e-05, 4.13059999999979e-05, 4.1417000000001924e-05, 4.179199999999883e-05, 4.17780000000062e-05, 4.1959000000001134e-05, 4.151399999999944e-05, 4.13059999999979e-05, 4.19860000000008e-05, 4.19860000000008e-05, 4.1652999999995666e-05, 4.1818999999998496e-05, 4.1596999999997386e-05, 4.19860000000008e-05, 4.2139000000003535e-05, 4.1790999999999356e-05, 4.131999999999747e-05, 4.147200000000073e-05, 4.1653000000002605e-05, 4.147200000000073e-05, 4.198599999999386e-05, 4.1389000000002785e-05, 4.1360999999996706e-05, 4.2125000000003965e-05, 4.195800000000166e-05, 4.217999999999583e-05, 4.14860000000003e-05, 4.1805000000005865e-05, 4.218000000000277e-05, 4.179199999999883e-05, 4.147200000000073e-05, 4.1459000000000634e-05, 4.206999999999822e-05, 4.13059999999979e-05, 4.1639000000003035e-05, 4.1304999999998426e-05, 4.1625000000003465e-05, 4.14860000000003e-05, 4.2153000000003105e-05, 4.1818999999998496e-05, 4.1818999999998496e-05, 4.1540999999999106e-05, 4.127799999999876e-05, 4.1290999999998856e-05, 4.197200000000123e-05, 4.1653000000002605e-05, 4.195800000000166e-05, 4.149999999999987e-05]</msg>
<status status="PASS" starttime="20201030 11:53:09.432" endtime="20201030 11:53:09.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.420" endtime="20201030 11:53:09.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:09.447" endtime="20201030 11:53:09.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.443" endtime="20201030 11:53:09.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.441" endtime="20201030 11:53:09.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.949" endtime="20201030 11:53:09.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.948" endtime="20201030 11:53:09.473"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.495" endtime="20201030 11:53:09.511"></status>
</kw>
<msg timestamp="20201030 11:53:09.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.492" endtime="20201030 11:53:09.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.515" endtime="20201030 11:53:09.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.521" endtime="20201030 11:53:09.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.485" endtime="20201030 11:53:09.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.479" endtime="20201030 11:53:09.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.544" endtime="20201030 11:53:09.888"></status>
</kw>
<msg timestamp="20201030 11:53:09.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039672458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.541" endtime="20201030 11:53:09.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039672458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.897" endtime="20201030 11:53:09.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.916" endtime="20201030 11:53:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.534" endtime="20201030 11:53:09.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.529" endtime="20201030 11:53:09.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:09.933" level="INFO">${RESULT} = [{'diff': 4.127799999999876e-05}, {'diff': 4.195799999999472e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.179200000000577e-05}, {'diff': 4.176399999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:09.924" endtime="20201030 11:53:09.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:09.942" level="INFO">${ACCURACY} = {'diff': [4.127799999999876e-05, 4.195799999999472e-05, 4.177799999999926e-05, 4.19860000000008e-05, 4.179200000000577e-05, 4.176399999999969e-05, 4.197200000000123e-05, 4.1459000000000634e-05, 4.1276...</msg>
<status status="PASS" starttime="20201030 11:53:09.935" endtime="20201030 11:53:09.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.953" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:53:09.951" endtime="20201030 11:53:09.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.959" level="INFO">VALUE: [4.127799999999876e-05, 4.195799999999472e-05, 4.177799999999926e-05, 4.19860000000008e-05, 4.179200000000577e-05, 4.176399999999969e-05, 4.197200000000123e-05, 4.1459000000000634e-05, 4.1276999999999286e-05, 4.1445000000001064e-05, 4.124999999999962e-05, 4.2124999999997026e-05, 4.127799999999876e-05, 4.195799999999472e-05, 4.1804999999998926e-05, 4.145800000000116e-05, 4.194400000000209e-05, 4.1459000000000634e-05, 4.1459000000000634e-05, 4.1625000000003465e-05, 4.1624999999996526e-05, 4.1611000000003895e-05, 4.1459000000000634e-05, 4.195800000000166e-05, 4.1610999999996956e-05, 4.2124999999997026e-05, 4.2097000000004825e-05, 4.1945000000001564e-05, 4.1290999999998856e-05, 4.127799999999876e-05, 4.193000000000252e-05, 4.17780000000062e-05, 4.1790999999999356e-05, 4.147200000000073e-05, 4.145800000000116e-05, 4.2139000000003535e-05, 4.179199999999883e-05, 4.1610999999996956e-05, 4.1305000000005365e-05, 4.2125000000003965e-05, 4.1597000000004325e-05, 4.2125000000003965e-05, 4.179199999999883e-05, 4.161199999999643e-05, 4.129199999999833e-05, 4.1945000000001564e-05, 4.177799999999926e-05, 4.2195000000001814e-05, 4.130600000000484e-05, 4.200000000000037e-05]</msg>
<status status="PASS" starttime="20201030 11:53:09.956" endtime="20201030 11:53:09.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.944" endtime="20201030 11:53:09.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:09.972" endtime="20201030 11:53:09.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.967" endtime="20201030 11:53:09.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.965" endtime="20201030 11:53:09.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.475" endtime="20201030 11:53:09.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.473" endtime="20201030 11:53:09.997"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.020" endtime="20201030 11:53:10.039"></status>
</kw>
<msg timestamp="20201030 11:53:10.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.017" endtime="20201030 11:53:10.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.042" endtime="20201030 11:53:10.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.048" endtime="20201030 11:53:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.010" endtime="20201030 11:53:10.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.004" endtime="20201030 11:53:10.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.072" endtime="20201030 11:53:10.412"></status>
</kw>
<msg timestamp="20201030 11:53:10.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041683139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.068" endtime="20201030 11:53:10.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041683139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041732347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.422" endtime="20201030 11:53:10.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.440" endtime="20201030 11:53:10.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.061" endtime="20201030 11:53:10.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.056" endtime="20201030 11:53:10.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:10.457" level="INFO">${RESULT} = [{'diff': 4.920800000000197e-05}, {'diff': 4.854099999999917e-05}, {'diff': 4.8209000000000446e-05}, {'diff': 4.85269999999996e-05}, {'diff': 4.8889000000003346e-05}, {'diff': 4.893000000000258e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:53:10.449" endtime="20201030 11:53:10.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:10.467" level="INFO">${ACCURACY} = {'diff': [4.920800000000197e-05, 4.854099999999917e-05, 4.8209000000000446e-05, 4.85269999999996e-05, 4.8889000000003346e-05, 4.893000000000258e-05, 4.884799999999717e-05, 4.81669999999948e-05, 4.9000...</msg>
<status status="PASS" starttime="20201030 11:53:10.459" endtime="20201030 11:53:10.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.478" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:53:10.475" endtime="20201030 11:53:10.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.483" level="INFO">VALUE: [4.920800000000197e-05, 4.854099999999917e-05, 4.8209000000000446e-05, 4.85269999999996e-05, 4.8889000000003346e-05, 4.893000000000258e-05, 4.884799999999717e-05, 4.81669999999948e-05, 4.900000000000043e-05, 4.8375000000003276e-05, 4.829099999999892e-05, 4.852799999999907e-05, 4.8389000000002846e-05, 4.902800000000651e-05, 4.870800000000147e-05, 4.868000000000233e-05, 4.820800000000097e-05, 4.8389000000002846e-05, 4.8193999999994463e-05, 4.8695000000001376e-05, 4.870800000000147e-05, 4.906999999999828e-05, 4.900000000000043e-05, 4.8361000000003707e-05, 4.8361000000003707e-05, 4.856899999999831e-05, 4.838800000000337e-05, 4.855599999999821e-05, 4.887499999999684e-05, 4.8375000000003276e-05, 4.83469999999972e-05, 4.8361000000003707e-05, 4.881899999999856e-05, 4.905599999999871e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.894400000000215e-05, 4.9014e-05, 4.852800000000601e-05, 4.83469999999972e-05, 4.852800000000601e-05, 4.9014e-05, 4.884700000000464e-05, 4.886099999999727e-05, 4.870800000000147e-05, 4.852799999999907e-05, 4.9207999999995033e-05, 4.904199999999914e-05, 4.870800000000147e-05, 4.886099999999727e-05]</msg>
<status status="PASS" starttime="20201030 11:53:10.480" endtime="20201030 11:53:10.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.469" endtime="20201030 11:53:10.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:10.497" endtime="20201030 11:53:10.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.492" endtime="20201030 11:53:10.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.489" endtime="20201030 11:53:10.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.000" endtime="20201030 11:53:10.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.998" endtime="20201030 11:53:10.523"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.545" endtime="20201030 11:53:10.563"></status>
</kw>
<msg timestamp="20201030 11:53:10.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.542" endtime="20201030 11:53:10.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.567" endtime="20201030 11:53:10.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.573" endtime="20201030 11:53:10.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.535" endtime="20201030 11:53:10.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.529" endtime="20201030 11:53:10.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.596" endtime="20201030 11:53:10.938"></status>
</kw>
<msg timestamp="20201030 11:53:10.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039839875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.593" endtime="20201030 11:53:10.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039839875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.947" endtime="20201030 11:53:10.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.966" endtime="20201030 11:53:10.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.586" endtime="20201030 11:53:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.581" endtime="20201030 11:53:10.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:10.983" level="INFO">${RESULT} = [{'diff': 7.816699999999704e-05}, {'diff': 7.795799999999603e-05}, {'diff': 7.898600000000311e-05}, {'diff': 7.89169999999978e-05}, {'diff': 7.88190000000008e-05}, {'diff': 7.812499999999833e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:10.975" endtime="20201030 11:53:10.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:10.994" level="INFO">${ACCURACY} = {'diff': [7.816699999999704e-05, 7.795799999999603e-05, 7.898600000000311e-05, 7.89169999999978e-05, 7.88190000000008e-05, 7.812499999999833e-05, 7.823700000000183e-05, 7.857000000000003e-05, 7.801400...</msg>
<status status="PASS" starttime="20201030 11:53:10.985" endtime="20201030 11:53:10.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.006" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:53:11.003" endtime="20201030 11:53:11.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.012" level="INFO">VALUE: [7.816699999999704e-05, 7.795799999999603e-05, 7.898600000000311e-05, 7.89169999999978e-05, 7.88190000000008e-05, 7.812499999999833e-05, 7.823700000000183e-05, 7.857000000000003e-05, 7.801400000000125e-05, 7.822300000000226e-05, 7.894499999999693e-05, 7.905499999999455e-05, 7.827699999999466e-05, 7.869499999999668e-05, 7.8764000000002e-05, 7.794399999999646e-05, 7.815299999999747e-05, 7.82640000000015e-05, 7.830600000000021e-05, 7.865299999999797e-05, 7.811099999999876e-05, 7.837499999999858e-05, 7.824999999999499e-05, 7.841700000000423e-05, 7.829200000000064e-05, 7.844399999999696e-05, 7.843099999999686e-05, 7.838799999999868e-05, 7.827800000000107e-05, 7.8764000000002e-05, 7.851400000000175e-05, 7.800000000000168e-05, 7.887499999999908e-05, 7.847300000000251e-05, 7.873599999999592e-05, 7.829200000000064e-05, 7.834700000000638e-05, 7.833399999999935e-05, 7.866700000000448e-05, 7.86110000000062e-05, 7.902800000000182e-05, 7.798600000000211e-05, 7.82919999999937e-05, 7.848600000000261e-05, 7.901400000000225e-05, 7.841599999999782e-05, 7.824999999999499e-05, 7.798600000000211e-05, 7.847200000000304e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201030 11:53:11.008" endtime="20201030 11:53:11.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.996" endtime="20201030 11:53:11.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:11.025" endtime="20201030 11:53:11.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.020" endtime="20201030 11:53:11.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.017" endtime="20201030 11:53:11.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.525" endtime="20201030 11:53:11.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.523" endtime="20201030 11:53:11.050"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.073" endtime="20201030 11:53:11.091"></status>
</kw>
<msg timestamp="20201030 11:53:11.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.070" endtime="20201030 11:53:11.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.094" endtime="20201030 11:53:11.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.101" endtime="20201030 11:53:11.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.062" endtime="20201030 11:53:11.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.057" endtime="20201030 11:53:11.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.124" endtime="20201030 11:53:11.465"></status>
</kw>
<msg timestamp="20201030 11:53:11.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.121" endtime="20201030 11:53:11.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.475" endtime="20201030 11:53:11.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.494" endtime="20201030 11:53:11.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.113" endtime="20201030 11:53:11.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.109" endtime="20201030 11:53:11.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:11.511" level="INFO">${RESULT} = [{'diff': 7.898600000000311e-05}, {'diff': 7.940199999999925e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.991700000000573e-05}, {'diff': 7.90840000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:11.502" endtime="20201030 11:53:11.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:11.522" level="INFO">${ACCURACY} = {'diff': [7.898600000000311e-05, 7.940199999999925e-05, 7.916699999999804e-05, 7.933300000000088e-05, 7.991700000000573e-05, 7.90840000000001e-05, 7.940199999999925e-05, 7.950000000000318e-05, 7.96669...</msg>
<status status="PASS" starttime="20201030 11:53:11.513" endtime="20201030 11:53:11.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.533" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:53:11.531" endtime="20201030 11:53:11.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.538" level="INFO">VALUE: [7.898600000000311e-05, 7.940199999999925e-05, 7.916699999999804e-05, 7.933300000000088e-05, 7.991700000000573e-05, 7.90840000000001e-05, 7.940199999999925e-05, 7.950000000000318e-05, 7.966699999999854e-05, 7.923600000000336e-05, 7.975000000000343e-05, 7.895900000000344e-05, 7.959800000000017e-05, 7.922200000000379e-05, 7.92640000000025e-05, 7.994399999999846e-05, 7.991700000000573e-05, 7.906900000000106e-05, 7.920899999999675e-05, 7.948600000000361e-05, 7.944399999999796e-05, 7.990299999999922e-05, 7.940299999999872e-05, 7.918099999999761e-05, 7.907000000000053e-05, 7.933400000000035e-05, 7.936199999999949e-05, 7.92919999999947e-05, 7.905500000000149e-05, 7.902800000000182e-05, 7.912500000000627e-05, 7.943099999999786e-05, 7.947299999999657e-05, 7.905600000000096e-05, 7.951399999999581e-05, 7.938899999999915e-05, 7.923600000000336e-05, 7.95970000000007e-05, 7.979200000000214e-05, 7.99169999999988e-05, 7.995799999999803e-05, 7.96389999999994e-05, 7.968100000000505e-05, 7.920900000000369e-05, 7.91389999999989e-05, 7.962499999999983e-05, 7.976399999999606e-05, 7.977800000000257e-05, 7.977800000000257e-05, 7.916700000000498e-05]</msg>
<status status="PASS" starttime="20201030 11:53:11.535" endtime="20201030 11:53:11.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.524" endtime="20201030 11:53:11.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:11.551" endtime="20201030 11:53:11.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.546" endtime="20201030 11:53:11.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.544" endtime="20201030 11:53:11.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.052" endtime="20201030 11:53:11.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.051" endtime="20201030 11:53:11.576"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.599" endtime="20201030 11:53:11.617"></status>
</kw>
<msg timestamp="20201030 11:53:11.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.595" endtime="20201030 11:53:11.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.620" endtime="20201030 11:53:11.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.626" endtime="20201030 11:53:11.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.588" endtime="20201030 11:53:11.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.582" endtime="20201030 11:53:11.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.650" endtime="20201030 11:53:11.994"></status>
</kw>
<msg timestamp="20201030 11:53:12.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039777889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.647" endtime="20201030 11:53:12.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039777889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.004" endtime="20201030 11:53:12.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.023" endtime="20201030 11:53:12.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.639" endtime="20201030 11:53:12.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.635" endtime="20201030 11:53:12.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:12.041" level="INFO">${RESULT} = [{'diff': 8.036099999999408e-05}, {'diff': 8.054199999999595e-05}, {'diff': 8.106899999999612e-05}, {'diff': 8.063800000000093e-05}, {'diff': 8.038900000000015e-05}, {'diff': 8.024999999999699e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:12.032" endtime="20201030 11:53:12.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:12.051" level="INFO">${ACCURACY} = {'diff': [8.036099999999408e-05, 8.054199999999595e-05, 8.106899999999612e-05, 8.063800000000093e-05, 8.038900000000015e-05, 8.024999999999699e-05, 8.070799999999878e-05, 8.029200000000264e-05, 8.0806...</msg>
<status status="PASS" starttime="20201030 11:53:12.043" endtime="20201030 11:53:12.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.062" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:53:12.060" endtime="20201030 11:53:12.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.067" level="INFO">VALUE: [8.036099999999408e-05, 8.054199999999595e-05, 8.106899999999612e-05, 8.063800000000093e-05, 8.038900000000015e-05, 8.024999999999699e-05, 8.070799999999878e-05, 8.029200000000264e-05, 8.080600000000271e-05, 8.016699999999904e-05, 8.08190000000028e-05, 8.033300000000188e-05, 8.041599999999982e-05, 8.02640000000035e-05, 8.090300000000022e-05, 8.06390000000004e-05, 8.030600000000221e-05, 8.072299999999782e-05, 7.997200000000454e-05, 8.084700000000195e-05, 8.012500000000033e-05, 8.00970000000012e-05, 8.012500000000033e-05, 8.069499999999868e-05, 8.011100000000076e-05, 8.029200000000264e-05, 8.066699999999954e-05, 8.098599999999817e-05, 8.072199999999835e-05, 8.104199999999645e-05, 8.025000000000393e-05, 8.03469999999945e-05, 8.001400000000325e-05, 8.054099999999648e-05, 8.027799999999613e-05, 8.06390000000004e-05, 8.050000000000418e-05, 8.0458999999998e-05, 8.072199999999835e-05, 8.052799999999638e-05, 8.06390000000004e-05, 8.055500000000299e-05, 8.087500000000108e-05, 8.045799999999853e-05, 8.058299999999519e-05, 8.0764000000004e-05, 8.087500000000108e-05, 8.062500000000083e-05, 8.084700000000195e-05, 8.044499999999843e-05]</msg>
<status status="PASS" starttime="20201030 11:53:12.064" endtime="20201030 11:53:12.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.052" endtime="20201030 11:53:12.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:12.080" endtime="20201030 11:53:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.076" endtime="20201030 11:53:12.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.073" endtime="20201030 11:53:12.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.578" endtime="20201030 11:53:12.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.577" endtime="20201030 11:53:12.105"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.128" endtime="20201030 11:53:12.148"></status>
</kw>
<msg timestamp="20201030 11:53:12.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.125" endtime="20201030 11:53:12.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.151" endtime="20201030 11:53:12.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.157" endtime="20201030 11:53:12.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.117" endtime="20201030 11:53:12.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.112" endtime="20201030 11:53:12.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.181" endtime="20201030 11:53:12.521"></status>
</kw>
<msg timestamp="20201030 11:53:12.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.177" endtime="20201030 11:53:12.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041381167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041462556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.530" endtime="20201030 11:53:12.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.549" endtime="20201030 11:53:12.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.170" endtime="20201030 11:53:12.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.165" endtime="20201030 11:53:12.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:12.566" level="INFO">${RESULT} = [{'diff': 8.138899999999422e-05}, {'diff': 8.15269999999979e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.104200000000339e-05}, {'diff': 8.108300000000263e-05}, {'diff': 8.120799999999928e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:12.557" endtime="20201030 11:53:12.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:12.575" level="INFO">${ACCURACY} = {'diff': [8.138899999999422e-05, 8.15269999999979e-05, 8.143000000000039e-05, 8.104200000000339e-05, 8.108300000000263e-05, 8.120799999999928e-05, 8.131899999999637e-05, 8.102799999999688e-05, 8.13620...</msg>
<status status="PASS" starttime="20201030 11:53:12.568" endtime="20201030 11:53:12.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.586" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:53:12.584" endtime="20201030 11:53:12.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.592" level="INFO">VALUE: [8.138899999999422e-05, 8.15269999999979e-05, 8.143000000000039e-05, 8.104200000000339e-05, 8.108300000000263e-05, 8.120799999999928e-05, 8.131899999999637e-05, 8.102799999999688e-05, 8.136200000000149e-05, 8.154199999999695e-05, 8.17919999999972e-05, 8.161100000000227e-05, 8.14719999999991e-05, 8.137500000000158e-05, 8.111099999999483e-05, 8.119399999999971e-05, 8.152800000000432e-05, 8.154200000000389e-05, 8.1458999999999e-05, 8.156899999999662e-05, 8.191600000000132e-05, 8.111100000000177e-05, 8.105500000000349e-05, 8.173599999999892e-05, 8.195800000000003e-05, 8.166600000000107e-05, 8.137500000000158e-05, 8.124999999999799e-05, 8.123700000000483e-05, 8.148599999999867e-05, 8.168100000000011e-05, 8.170799999999978e-05, 8.123599999999842e-05, 8.145799999999953e-05, 8.130599999999627e-05, 8.120899999999875e-05, 8.116700000000004e-05, 8.173599999999892e-05, 8.102800000000382e-05, 8.14170000000003e-05, 8.194499999999993e-05, 8.11249999999944e-05, 8.143099999999986e-05, 8.169499999999968e-05, 8.13469999999955e-05, 8.10840000000021e-05, 8.13190000000033e-05, 8.126399999999756e-05, 8.13190000000033e-05, 8.159699999999576e-05]</msg>
<status status="PASS" starttime="20201030 11:53:12.589" endtime="20201030 11:53:12.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.577" endtime="20201030 11:53:12.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:12.606" endtime="20201030 11:53:12.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.600" endtime="20201030 11:53:12.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.598" endtime="20201030 11:53:12.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.107" endtime="20201030 11:53:12.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.106" endtime="20201030 11:53:12.631"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.654" endtime="20201030 11:53:12.672"></status>
</kw>
<msg timestamp="20201030 11:53:12.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.650" endtime="20201030 11:53:12.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.675" endtime="20201030 11:53:12.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.682" endtime="20201030 11:53:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.643" endtime="20201030 11:53:12.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.637" endtime="20201030 11:53:12.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.705" endtime="20201030 11:53:13.046"></status>
</kw>
<msg timestamp="20201030 11:53:13.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039633375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.702" endtime="20201030 11:53:13.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039633375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.055" endtime="20201030 11:53:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.074" endtime="20201030 11:53:13.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.694" endtime="20201030 11:53:13.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.690" endtime="20201030 11:53:13.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:13.092" level="INFO">${RESULT} = [{'diff': 8.255599999999752e-05}, {'diff': 8.220899999999975e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.286099999999658e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.279099999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:13.083" endtime="20201030 11:53:13.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:13.103" level="INFO">${ACCURACY} = {'diff': [8.255599999999752e-05, 8.220899999999975e-05, 8.273599999999992e-05, 8.286099999999658e-05, 8.249999999999924e-05, 8.279099999999873e-05, 8.245800000000053e-05, 8.252799999999838e-05, 8.2818...</msg>
<status status="PASS" starttime="20201030 11:53:13.094" endtime="20201030 11:53:13.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.114" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:53:13.112" endtime="20201030 11:53:13.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.120" level="INFO">VALUE: [8.255599999999752e-05, 8.220899999999975e-05, 8.273599999999992e-05, 8.286099999999658e-05, 8.249999999999924e-05, 8.279099999999873e-05, 8.245800000000053e-05, 8.252799999999838e-05, 8.281899999999787e-05, 8.202799999999788e-05, 8.274999999999949e-05, 8.256899999999762e-05, 8.227800000000507e-05, 8.277699999999916e-05, 8.259699999999676e-05, 8.26249999999959e-05, 8.276299999999959e-05, 8.23190000000043e-05, 8.256999999999709e-05, 8.254099999999848e-05, 8.286100000000352e-05, 8.23469999999965e-05, 8.270800000000078e-05, 8.273599999999992e-05, 8.218000000000114e-05, 8.302799999999888e-05, 8.222199999999985e-05, 8.286100000000352e-05, 8.258299999999719e-05, 8.222199999999985e-05, 8.276399999999906e-05, 8.302800000000582e-05, 8.243000000000139e-05, 8.211100000000277e-05, 8.262500000000284e-05, 8.252799999999838e-05, 8.222199999999985e-05, 8.288799999999624e-05, 8.240299999999479e-05, 8.283399999999691e-05, 8.270800000000078e-05, 8.21390000000019e-05, 8.2152000000002e-05, 8.226399999999856e-05, 8.290300000000222e-05, 8.231999999999684e-05, 8.276399999999906e-05, 8.223600000000636e-05, 8.209799999999573e-05, 8.277699999999916e-05]</msg>
<status status="PASS" starttime="20201030 11:53:13.116" endtime="20201030 11:53:13.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.105" endtime="20201030 11:53:13.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:13.132" endtime="20201030 11:53:13.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.128" endtime="20201030 11:53:13.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.125" endtime="20201030 11:53:13.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.633" endtime="20201030 11:53:13.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.632" endtime="20201030 11:53:13.157"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.180" endtime="20201030 11:53:13.198"></status>
</kw>
<msg timestamp="20201030 11:53:13.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.177" endtime="20201030 11:53:13.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.202" endtime="20201030 11:53:13.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.208" endtime="20201030 11:53:13.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.169" endtime="20201030 11:53:13.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.164" endtime="20201030 11:53:13.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.231" endtime="20201030 11:53:13.570"></status>
</kw>
<msg timestamp="20201030 11:53:13.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039705681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039789597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.228" endtime="20201030 11:53:13.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039705681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039789597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.580" endtime="20201030 11:53:13.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.598" endtime="20201030 11:53:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.221" endtime="20201030 11:53:13.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.216" endtime="20201030 11:53:13.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:13.615" level="INFO">${RESULT} = [{'diff': 8.391600000000332e-05}, {'diff': 8.372200000000135e-05}, {'diff': 8.345800000000153e-05}, {'diff': 8.361100000000427e-05}, {'diff': 8.333299999999794e-05}, {'diff': 8.390299999999629e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:13.607" endtime="20201030 11:53:13.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:13.631" level="INFO">${ACCURACY} = {'diff': [8.391600000000332e-05, 8.372200000000135e-05, 8.345800000000153e-05, 8.361100000000427e-05, 8.333299999999794e-05, 8.390299999999629e-05, 8.39999999999938e-05, 8.397300000000107e-05, 8.34030...</msg>
<status status="PASS" starttime="20201030 11:53:13.617" endtime="20201030 11:53:13.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.642" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:53:13.639" endtime="20201030 11:53:13.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.647" level="INFO">VALUE: [8.391600000000332e-05, 8.372200000000135e-05, 8.345800000000153e-05, 8.361100000000427e-05, 8.333299999999794e-05, 8.390299999999629e-05, 8.39999999999938e-05, 8.397300000000107e-05, 8.340300000000272e-05, 8.380599999999877e-05, 8.352799999999938e-05, 8.362500000000384e-05, 8.370800000000178e-05, 8.402799999999988e-05, 8.3846999999998e-05, 8.313899999999597e-05, 8.341699999999536e-05, 8.322300000000032e-05, 8.369500000000168e-05, 8.398600000000117e-05, 8.377700000000016e-05, 8.356999999999809e-05, 8.355500000000599e-05, 8.394400000000246e-05, 8.348600000000067e-05, 8.34170000000023e-05, 8.306899999999812e-05, 8.311100000000377e-05, 8.368100000000211e-05, 8.35970000000047e-05, 8.341600000000282e-05, 8.355499999999905e-05, 8.306899999999812e-05, 8.36799999999957e-05, 8.347300000000057e-05, 8.375000000000049e-05, 8.376299999999365e-05, 8.319400000000171e-05, 8.401400000000031e-05, 8.320900000000075e-05, 8.316700000000204e-05, 8.313899999999597e-05, 8.341699999999536e-05, 8.31249999999964e-05, 8.351399999999981e-05, 8.383399999999791e-05, 8.407000000000553e-05, 8.372200000000135e-05, 8.34170000000023e-05, 8.354200000000589e-05]</msg>
<status status="PASS" starttime="20201030 11:53:13.644" endtime="20201030 11:53:13.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.633" endtime="20201030 11:53:13.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:13.664" endtime="20201030 11:53:13.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.659" endtime="20201030 11:53:13.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.657" endtime="20201030 11:53:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.159" endtime="20201030 11:53:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.158" endtime="20201030 11:53:13.689"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.711" endtime="20201030 11:53:13.730"></status>
</kw>
<msg timestamp="20201030 11:53:13.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.708" endtime="20201030 11:53:13.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.733" endtime="20201030 11:53:13.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.739" endtime="20201030 11:53:13.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.701" endtime="20201030 11:53:13.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.695" endtime="20201030 11:53:13.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.763" endtime="20201030 11:53:14.114"></status>
</kw>
<msg timestamp="20201030 11:53:14.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.759" endtime="20201030 11:53:14.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.124" endtime="20201030 11:53:14.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.143" endtime="20201030 11:53:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.752" endtime="20201030 11:53:14.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.747" endtime="20201030 11:53:14.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.160" level="INFO">${RESULT} = [{'diff': 8.443000000000339e-05}, {'diff': 8.479099999999379e-05}, {'diff': 8.408299999999869e-05}, {'diff': 8.475000000000149e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.469500000000268e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:14.151" endtime="20201030 11:53:14.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:14.169" level="INFO">${ACCURACY} = {'diff': [8.443000000000339e-05, 8.479099999999379e-05, 8.408299999999869e-05, 8.475000000000149e-05, 8.481899999999987e-05, 8.469500000000268e-05, 8.425000000000099e-05, 8.411099999999783e-05, 8.4916...</msg>
<status status="PASS" starttime="20201030 11:53:14.162" endtime="20201030 11:53:14.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.180" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:53:14.177" endtime="20201030 11:53:14.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.185" level="INFO">VALUE: [8.443000000000339e-05, 8.479099999999379e-05, 8.408299999999869e-05, 8.475000000000149e-05, 8.481899999999987e-05, 8.469500000000268e-05, 8.425000000000099e-05, 8.411099999999783e-05, 8.491600000000432e-05, 8.46799999999967e-05, 8.451400000000081e-05, 8.412500000000434e-05, 8.447199999999516e-05, 8.429100000000023e-05, 8.427800000000013e-05, 8.505600000000002e-05, 8.456999999999909e-05, 8.452800000000038e-05, 8.451400000000081e-05, 8.412500000000434e-05, 8.422199999999491e-05, 8.404200000000639e-05, 8.491699999999686e-05, 8.412500000000434e-05, 8.433300000000588e-05, 8.430599999999927e-05, 8.440200000000425e-05, 8.398600000000117e-05, 8.458299999999919e-05, 8.43469999999985e-05, 8.422200000000185e-05, 8.441699999999636e-05, 8.447199999999516e-05, 8.432000000000578e-05, 8.495800000000303e-05, 8.43049999999998e-05, 8.502800000000088e-05, 8.44720000000021e-05, 8.470900000000225e-05, 8.488899999999772e-05, 8.456999999999909e-05, 8.469500000000268e-05, 8.468099999999618e-05, 8.42919999999997e-05, 8.501399999999437e-05, 8.502800000000088e-05, 8.476400000000106e-05, 8.43049999999998e-05, 8.422199999999491e-05, 8.481899999999987e-05]</msg>
<status status="PASS" starttime="20201030 11:53:14.182" endtime="20201030 11:53:14.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.171" endtime="20201030 11:53:14.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:14.198" endtime="20201030 11:53:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.193" endtime="20201030 11:53:14.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.191" endtime="20201030 11:53:14.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.691" endtime="20201030 11:53:14.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.690" endtime="20201030 11:53:14.223"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.246" endtime="20201030 11:53:14.266"></status>
</kw>
<msg timestamp="20201030 11:53:14.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.242" endtime="20201030 11:53:14.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.270" endtime="20201030 11:53:14.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.276" endtime="20201030 11:53:14.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.235" endtime="20201030 11:53:14.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.229" endtime="20201030 11:53:14.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.300" endtime="20201030 11:53:14.638"></status>
</kw>
<msg timestamp="20201030 11:53:14.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041677694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.296" endtime="20201030 11:53:14.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041677694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.648" endtime="20201030 11:53:14.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.666" endtime="20201030 11:53:14.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.289" endtime="20201030 11:53:14.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.284" endtime="20201030 11:53:14.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.684" level="INFO">${RESULT} = [{'diff': 8.536099999999908e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.518099999999668e-05}, {'diff': 8.527800000000113e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.554100000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:14.675" endtime="20201030 11:53:14.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:14.693" level="INFO">${ACCURACY} = {'diff': [8.536099999999908e-05, 8.581900000000087e-05, 8.518099999999668e-05, 8.527800000000113e-05, 8.501400000000131e-05, 8.554100000000148e-05, 8.59720000000036e-05, 8.544500000000343e-05, 8.55280...</msg>
<status status="PASS" starttime="20201030 11:53:14.685" endtime="20201030 11:53:14.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.704" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:53:14.702" endtime="20201030 11:53:14.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.709" level="INFO">VALUE: [8.536099999999908e-05, 8.581900000000087e-05, 8.518099999999668e-05, 8.527800000000113e-05, 8.501400000000131e-05, 8.554100000000148e-05, 8.59720000000036e-05, 8.544500000000343e-05, 8.552800000000138e-05, 8.583300000000044e-05, 8.591699999999786e-05, 8.527800000000113e-05, 8.587499999999915e-05, 8.5847e-05, 8.555500000000105e-05, 8.586099999999958e-05, 8.598599999999623e-05, 8.509699999999926e-05, 8.594399999999752e-05, 8.491599999999738e-05, 8.547199999999616e-05, 8.533299999999994e-05, 8.569399999999727e-05, 8.555600000000052e-05, 8.548600000000267e-05, 8.557000000000009e-05, 8.52920000000007e-05, 8.552800000000138e-05, 8.502800000000088e-05, 8.54999999999953e-05, 8.569399999999727e-05, 8.591600000000532e-05, 8.520800000000328e-05, 8.588899999999872e-05, 8.552700000000191e-05, 8.551400000000181e-05, 8.542999999999745e-05, 8.554200000000095e-05, 8.515300000000448e-05, 8.563799999999899e-05, 8.495800000000303e-05, 8.602800000000188e-05, 8.509699999999926e-05, 8.520800000000328e-05, 8.531900000000037e-05, 8.583300000000044e-05, 8.523600000000242e-05, 8.537499999999865e-05, 8.504200000000045e-05, 8.580600000000077e-05]</msg>
<status status="PASS" starttime="20201030 11:53:14.706" endtime="20201030 11:53:14.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.695" endtime="20201030 11:53:14.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:14.723" endtime="20201030 11:53:14.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.717" endtime="20201030 11:53:14.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.715" endtime="20201030 11:53:14.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.225" endtime="20201030 11:53:14.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.224" endtime="20201030 11:53:14.748"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.771" endtime="20201030 11:53:14.789"></status>
</kw>
<msg timestamp="20201030 11:53:14.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.767" endtime="20201030 11:53:14.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.792" endtime="20201030 11:53:14.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.799" endtime="20201030 11:53:14.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.760" endtime="20201030 11:53:14.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.754" endtime="20201030 11:53:14.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.822" endtime="20201030 11:53:15.161"></status>
</kw>
<msg timestamp="20201030 11:53:15.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039531361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.818" endtime="20201030 11:53:15.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039531361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039617597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.170" endtime="20201030 11:53:15.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.189" endtime="20201030 11:53:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.811" endtime="20201030 11:53:15.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.806" endtime="20201030 11:53:15.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:15.206" level="INFO">${RESULT} = [{'diff': 8.623599999999648e-05}, {'diff': 8.652799999999544e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.686100000000058e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.609700000000026e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:15.197" endtime="20201030 11:53:15.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:15.216" level="INFO">${ACCURACY} = {'diff': [8.623599999999648e-05, 8.652799999999544e-05, 8.632000000000084e-05, 8.686100000000058e-05, 8.687500000000015e-05, 8.609700000000026e-05, 8.641599999999888e-05, 8.629199999999476e-05, 8.6832...</msg>
<status status="PASS" starttime="20201030 11:53:15.208" endtime="20201030 11:53:15.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.227" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:53:15.225" endtime="20201030 11:53:15.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.233" level="INFO">VALUE: [8.623599999999648e-05, 8.652799999999544e-05, 8.632000000000084e-05, 8.686100000000058e-05, 8.687500000000015e-05, 8.609700000000026e-05, 8.641599999999888e-05, 8.629199999999476e-05, 8.68329999999945e-05, 8.691699999999886e-05, 8.669400000000521e-05, 8.677800000000263e-05, 8.683300000000144e-05, 8.679199999999526e-05, 8.637499999999965e-05, 8.601399999999537e-05, 8.708400000000116e-05, 8.747199999999816e-05, 8.657000000000109e-05, 8.651399999999587e-05, 8.64999999999963e-05, 8.619499999999725e-05, 8.606900000000112e-05, 8.636100000000008e-05, 8.652800000000238e-05, 8.701399999999637e-05, 8.665299999999904e-05, 8.594400000000446e-05, 8.598599999999623e-05, 8.640299999999879e-05, 8.624999999999605e-05, 8.687500000000015e-05, 8.627800000000213e-05, 8.677800000000263e-05, 8.618099999999768e-05, 8.705600000000202e-05, 8.695899999999757e-05, 8.6459000000004e-05, 8.620800000000428e-05, 8.652800000000238e-05, 8.669499999999775e-05, 8.615299999999854e-05, 8.645799999999759e-05, 8.708400000000116e-05, 8.602800000000188e-05, 8.618100000000462e-05, 8.676399999999612e-05, 8.672299999999689e-05, 8.634799999999998e-05, 8.663799999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:53:15.230" endtime="20201030 11:53:15.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.218" endtime="20201030 11:53:15.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:15.245" endtime="20201030 11:53:15.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.241" endtime="20201030 11:53:15.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.238" endtime="20201030 11:53:15.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.750" endtime="20201030 11:53:15.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.749" endtime="20201030 11:53:15.270"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.293" endtime="20201030 11:53:15.311"></status>
</kw>
<msg timestamp="20201030 11:53:15.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.289" endtime="20201030 11:53:15.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.314" endtime="20201030 11:53:15.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.321" endtime="20201030 11:53:15.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.282" endtime="20201030 11:53:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.276" endtime="20201030 11:53:15.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.344" endtime="20201030 11:53:15.682"></status>
</kw>
<msg timestamp="20201030 11:53:15.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0395815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:15.340" endtime="20201030 11:53:15.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0395815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:15.691" endtime="20201030 11:53:15.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.710" endtime="20201030 11:53:15.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.333" endtime="20201030 11:53:15.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.329" endtime="20201030 11:53:15.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:15.726" level="INFO">${RESULT} = [{'diff': 8.705600000000202e-05}, {'diff': 8.711100000000083e-05}, {'diff': 8.808400000000216e-05}, {'diff': 8.886099999999564e-05}, {'diff': 8.750000000000424e-05}, {'diff': 8.855599999999658e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:15.718" endtime="20201030 11:53:15.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:15.737" level="INFO">${ACCURACY} = {'diff': [8.705600000000202e-05, 8.711100000000083e-05, 8.808400000000216e-05, 8.886099999999564e-05, 8.750000000000424e-05, 8.855599999999658e-05, 8.687500000000015e-05, 8.769399999999927e-05, 8.7889...</msg>
<status status="PASS" starttime="20201030 11:53:15.729" endtime="20201030 11:53:15.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.749" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:53:15.746" endtime="20201030 11:53:15.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.754" level="INFO">VALUE: [8.705600000000202e-05, 8.711100000000083e-05, 8.808400000000216e-05, 8.886099999999564e-05, 8.750000000000424e-05, 8.855599999999658e-05, 8.687500000000015e-05, 8.769399999999927e-05, 8.788900000000072e-05, 8.837500000000165e-05, 8.733300000000194e-05, 8.712499999999346e-05, 8.754199999999601e-05, 8.826299999999815e-05, 8.719399999999877e-05, 8.773599999999798e-05, 8.748599999999773e-05, 8.709800000000073e-05, 8.784700000000201e-05, 8.723599999999748e-05, 8.858300000000319e-05, 8.720799999999834e-05, 8.71799999999992e-05, 8.698600000000417e-05, 8.708300000000169e-05, 8.765300000000004e-05, 8.701399999999637e-05, 8.809700000000226e-05, 8.76250000000009e-05, 8.769399999999927e-05, 8.87920000000042e-05, 8.755599999999558e-05, 8.76799999999997e-05, 8.745799999999859e-05, 8.88329999999965e-05, 8.698599999999723e-05, 8.787500000000115e-05, 8.75129999999974e-05, 8.743099999999893e-05, 8.801399999999737e-05, 8.758400000000166e-05, 8.76799999999997e-05, 8.792999999999995e-05, 8.743099999999893e-05, 8.720900000000475e-05, 8.694400000000546e-05, 8.719499999999825e-05, 8.783300000000244e-05, 8.770899999999832e-05, 8.769499999999875e-05]</msg>
<status status="PASS" starttime="20201030 11:53:15.751" endtime="20201030 11:53:15.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.739" endtime="20201030 11:53:15.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:15.766" endtime="20201030 11:53:15.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.762" endtime="20201030 11:53:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.759" endtime="20201030 11:53:15.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.272" endtime="20201030 11:53:15.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.271" endtime="20201030 11:53:15.791"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.814" endtime="20201030 11:53:15.832"></status>
</kw>
<msg timestamp="20201030 11:53:15.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.810" endtime="20201030 11:53:15.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.835" endtime="20201030 11:53:15.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.841" endtime="20201030 11:53:15.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.803" endtime="20201030 11:53:15.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.798" endtime="20201030 11:53:15.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.865" endtime="20201030 11:53:16.206"></status>
</kw>
<msg timestamp="20201030 11:53:16.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039458139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.862" endtime="20201030 11:53:16.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039458139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.215" endtime="20201030 11:53:16.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.234" endtime="20201030 11:53:16.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.854" endtime="20201030 11:53:16.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.850" endtime="20201030 11:53:16.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:16.251" level="INFO">${RESULT} = [{'diff': 8.808300000000269e-05}, {'diff': 8.872199999999941e-05}, {'diff': 8.887499999999521e-05}, {'diff': 8.830599999999633e-05}, {'diff': 8.829099999999729e-05}, {'diff': 8.83050000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:16.242" endtime="20201030 11:53:16.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:16.261" level="INFO">${ACCURACY} = {'diff': [8.808300000000269e-05, 8.872199999999941e-05, 8.887499999999521e-05, 8.830599999999633e-05, 8.829099999999729e-05, 8.83050000000038e-05, 8.827699999999772e-05, 8.87920000000042e-05, 8.988899...</msg>
<status status="PASS" starttime="20201030 11:53:16.253" endtime="20201030 11:53:16.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.271" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:53:16.269" endtime="20201030 11:53:16.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.277" level="INFO">VALUE: [8.808300000000269e-05, 8.872199999999941e-05, 8.887499999999521e-05, 8.830599999999633e-05, 8.829099999999729e-05, 8.83050000000038e-05, 8.827699999999772e-05, 8.87920000000042e-05, 8.988899999999578e-05, 8.847199999999916e-05, 8.913900000000197e-05, 8.804099999999704e-05, 8.861100000000233e-05, 8.916600000000163e-05, 8.832000000000284e-05, 8.805499999999661e-05, 8.902799999999794e-05, 8.838800000000174e-05, 8.886100000000258e-05, 8.981900000000487e-05, 8.809700000000226e-05, 8.986100000000358e-05, 8.845799999999959e-05, 8.832000000000284e-05, 8.943000000000145e-05, 8.798599999999823e-05, 8.979100000000573e-05, 8.852799999999744e-05, 8.947200000000016e-05, 8.826399999999762e-05, 8.877799999999769e-05, 8.919400000000077e-05, 8.838900000000122e-05, 8.880499999999736e-05, 8.834700000000251e-05, 8.870799999999984e-05, 8.798599999999823e-05, 8.91250000000024e-05, 8.832000000000284e-05, 8.847199999999916e-05, 8.84449999999995e-05, 8.933300000000394e-05, 8.888900000000172e-05, 8.938899999999528e-05, 8.813900000000097e-05, 8.976399999999912e-05, 8.837499999999471e-05, 8.94999999999993e-05, 8.862499999999496e-05, 8.922199999999991e-05]</msg>
<status status="PASS" starttime="20201030 11:53:16.274" endtime="20201030 11:53:16.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.262" endtime="20201030 11:53:16.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:16.289" endtime="20201030 11:53:16.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.285" endtime="20201030 11:53:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.282" endtime="20201030 11:53:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.793" endtime="20201030 11:53:16.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.792" endtime="20201030 11:53:16.314"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.336" endtime="20201030 11:53:16.356"></status>
</kw>
<msg timestamp="20201030 11:53:16.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.333" endtime="20201030 11:53:16.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.360" endtime="20201030 11:53:16.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.366" endtime="20201030 11:53:16.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.326" endtime="20201030 11:53:16.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.321" endtime="20201030 11:53:16.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.389" endtime="20201030 11:53:16.727"></status>
</kw>
<msg timestamp="20201030 11:53:16.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040698986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040789264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.386" endtime="20201030 11:53:16.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040698986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040789264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.736" endtime="20201030 11:53:16.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.755" endtime="20201030 11:53:16.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.379" endtime="20201030 11:53:16.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.374" endtime="20201030 11:53:16.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:16.772" level="INFO">${RESULT} = [{'diff': 9.027799999999919e-05}, {'diff': 8.976399999999912e-05}, {'diff': 9.06250000000039e-05}, {'diff': 8.955599999999758e-05}, {'diff': 8.908400000000316e-05}, {'diff': 9.009699999999732e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:16.764" endtime="20201030 11:53:16.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:16.781" level="INFO">${ACCURACY} = {'diff': [9.027799999999919e-05, 8.976399999999912e-05, 9.06250000000039e-05, 8.955599999999758e-05, 8.908400000000316e-05, 9.009699999999732e-05, 8.923599999999948e-05, 9.015300000000254e-05, 8.94440...</msg>
<status status="PASS" starttime="20201030 11:53:16.774" endtime="20201030 11:53:16.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.792" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:53:16.790" endtime="20201030 11:53:16.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.798" level="INFO">VALUE: [9.027799999999919e-05, 8.976399999999912e-05, 9.06250000000039e-05, 8.955599999999758e-05, 8.908400000000316e-05, 9.009699999999732e-05, 8.923599999999948e-05, 9.015300000000254e-05, 8.944400000000102e-05, 9.025000000000005e-05, 9.009699999999732e-05, 8.923599999999948e-05, 9.093000000000295e-05, 8.994399999999458e-05, 9.026400000000656e-05, 8.970800000000084e-05, 9.045800000000159e-05, 8.93199999999969e-05, 9.080499999999936e-05, 8.901400000000531e-05, 8.993099999999449e-05, 8.948599999999973e-05, 9.038900000000322e-05, 9.056999999999815e-05, 8.977799999999869e-05, 8.991700000000186e-05, 8.927799999999819e-05, 9.083400000000491e-05, 8.9332999999997e-05, 9.059699999999782e-05, 8.919400000000077e-05, 9.08199999999984e-05, 8.897199999999966e-05, 8.94450000000005e-05, 8.966600000000213e-05, 8.938900000000222e-05, 8.937500000000265e-05, 9.095900000000157e-05, 9.051399999999987e-05, 8.938899999999528e-05, 8.993000000000195e-05, 8.91250000000024e-05, 8.977799999999869e-05, 9.054199999999901e-05, 8.995900000000057e-05, 8.94999999999993e-05, 9.075000000000055e-05, 8.973599999999998e-05, 9.038899999999628e-05, 8.89999999999988e-05]</msg>
<status status="PASS" starttime="20201030 11:53:16.794" endtime="20201030 11:53:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.783" endtime="20201030 11:53:16.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:16.812" endtime="20201030 11:53:16.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.806" endtime="20201030 11:53:16.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.803" endtime="20201030 11:53:16.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.316" endtime="20201030 11:53:16.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.315" endtime="20201030 11:53:16.837"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.859" endtime="20201030 11:53:16.878"></status>
</kw>
<msg timestamp="20201030 11:53:16.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.856" endtime="20201030 11:53:16.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.881" endtime="20201030 11:53:16.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.887" endtime="20201030 11:53:16.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.849" endtime="20201030 11:53:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.843" endtime="20201030 11:53:16.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.911" endtime="20201030 11:53:17.249"></status>
</kw>
<msg timestamp="20201030 11:53:17.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039492417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039583847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.907" endtime="20201030 11:53:17.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039492417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039583847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.259" endtime="20201030 11:53:17.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.277" endtime="20201030 11:53:17.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.900" endtime="20201030 11:53:17.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.895" endtime="20201030 11:53:17.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:17.294" level="INFO">${RESULT} = [{'diff': 9.142999999999651e-05}, {'diff': 9.088800000000424e-05}, {'diff': 9.126400000000062e-05}, {'diff': 9.180599999999983e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.034699999999757e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:17.285" endtime="20201030 11:53:17.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:17.305" level="INFO">${ACCURACY} = {'diff': [9.142999999999651e-05, 9.088800000000424e-05, 9.126400000000062e-05, 9.180599999999983e-05, 9.001399999999937e-05, 9.034699999999757e-05, 9.161100000000533e-05, 9.198600000000223e-05, 9.0263...</msg>
<status status="PASS" starttime="20201030 11:53:17.296" endtime="20201030 11:53:17.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.316" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:53:17.313" endtime="20201030 11:53:17.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.321" level="INFO">VALUE: [9.142999999999651e-05, 9.088800000000424e-05, 9.126400000000062e-05, 9.180599999999983e-05, 9.001399999999937e-05, 9.034699999999757e-05, 9.161100000000533e-05, 9.198600000000223e-05, 9.026399999999962e-05, 9.180599999999983e-05, 9.061099999999739e-05, 9.15130000000014e-05, 9.056999999999815e-05, 9.163899999999753e-05, 9.06250000000039e-05, 9.016699999999517e-05, 9.101400000000037e-05, 9.036199999999661e-05, 9.120800000000234e-05, 9.175000000000155e-05, 9.040300000000279e-05, 9.155500000000011e-05, 9.040300000000279e-05, 9.148600000000173e-05, 9.022200000000091e-05, 9.079099999999979e-05, 9.187499999999821e-05, 9.138900000000422e-05, 9.065300000000304e-05, 9.06529999999961e-05, 9.083399999999797e-05, 9.125000000000105e-05, 9.086199999999711e-05, 9.144400000000302e-05, 8.998600000000023e-05, 9.126400000000062e-05, 9.027799999999919e-05, 9.126400000000062e-05, 9.023699999999996e-05, 9.181899999999993e-05, 9.026399999999962e-05, 9.168099999999624e-05, 9.175000000000155e-05, 9.072199999999447e-05, 9.190300000000429e-05, 9.158300000000619e-05, 9.034700000000451e-05, 9.140300000000379e-05, 9.087499999999721e-05, 9.102799999999994e-05]</msg>
<status status="PASS" starttime="20201030 11:53:17.318" endtime="20201030 11:53:17.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.307" endtime="20201030 11:53:17.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:17.333" endtime="20201030 11:53:17.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.329" endtime="20201030 11:53:17.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.327" endtime="20201030 11:53:17.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.839" endtime="20201030 11:53:17.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.837" endtime="20201030 11:53:17.358"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.381" endtime="20201030 11:53:17.399"></status>
</kw>
<msg timestamp="20201030 11:53:17.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.377" endtime="20201030 11:53:17.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.403" endtime="20201030 11:53:17.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.409" endtime="20201030 11:53:17.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.370" endtime="20201030 11:53:17.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.365" endtime="20201030 11:53:17.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.432" endtime="20201030 11:53:17.769"></status>
</kw>
<msg timestamp="20201030 11:53:17.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039173083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.429" endtime="20201030 11:53:17.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039173083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.778" endtime="20201030 11:53:17.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.797" endtime="20201030 11:53:17.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.422" endtime="20201030 11:53:17.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.417" endtime="20201030 11:53:17.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:17.814" level="INFO">${RESULT} = [{'diff': 9.226399999999468e-05}, {'diff': 9.270899999999638e-05}, {'diff': 9.170800000000284e-05}, {'diff': 9.24859999999958e-05}, {'diff': 9.155599999999958e-05}, {'diff': 9.190300000000429e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:17.805" endtime="20201030 11:53:17.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:17.825" level="INFO">${ACCURACY} = {'diff': [9.226399999999468e-05, 9.270899999999638e-05, 9.170800000000284e-05, 9.24859999999958e-05, 9.155599999999958e-05, 9.190300000000429e-05, 9.223599999999554e-05, 9.15000000000013e-05, 9.276399...</msg>
<status status="PASS" starttime="20201030 11:53:17.816" endtime="20201030 11:53:17.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.835" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:53:17.833" endtime="20201030 11:53:17.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.841" level="INFO">VALUE: [9.226399999999468e-05, 9.270899999999638e-05, 9.170800000000284e-05, 9.24859999999958e-05, 9.155599999999958e-05, 9.190300000000429e-05, 9.223599999999554e-05, 9.15000000000013e-05, 9.276399999999518e-05, 9.208299999999975e-05, 9.11800000000032e-05, 9.168100000000318e-05, 9.123600000000148e-05, 9.297199999999672e-05, 9.136099999999814e-05, 9.295799999999715e-05, 9.213899999999803e-05, 9.13199999999989e-05, 9.276400000000212e-05, 9.161199999999786e-05, 9.18329999999995e-05, 9.254200000000101e-05, 9.190199999999787e-05, 9.266700000000461e-05, 9.122300000000139e-05, 9.195900000000257e-05, 9.208299999999975e-05, 9.181899999999993e-05, 9.295800000000409e-05, 9.106899999999918e-05, 9.197200000000266e-05, 9.299999999999586e-05, 9.191699999999692e-05, 9.236099999999914e-05, 9.104199999999951e-05, 9.155500000000011e-05, 9.255500000000111e-05, 9.11659999999967e-05, 9.225000000000205e-05, 9.273600000000298e-05, 9.21659999999977e-05, 9.268100000000418e-05, 9.162499999999796e-05, 9.26659999999982e-05, 9.186100000000558e-05, 9.163899999999753e-05, 9.225000000000205e-05, 9.184699999999907e-05, 9.243100000000393e-05, 9.106999999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:53:17.838" endtime="20201030 11:53:17.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.826" endtime="20201030 11:53:17.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:17.854" endtime="20201030 11:53:17.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.849" endtime="20201030 11:53:17.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.846" endtime="20201030 11:53:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.361" endtime="20201030 11:53:17.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.359" endtime="20201030 11:53:17.879"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.901" endtime="20201030 11:53:17.920"></status>
</kw>
<msg timestamp="20201030 11:53:17.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.898" endtime="20201030 11:53:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.923" endtime="20201030 11:53:17.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.929" endtime="20201030 11:53:17.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.891" endtime="20201030 11:53:17.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.885" endtime="20201030 11:53:17.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.953" endtime="20201030 11:53:18.294"></status>
</kw>
<msg timestamp="20201030 11:53:18.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039520556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.949" endtime="20201030 11:53:18.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039427583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039520556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.304" endtime="20201030 11:53:18.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.322" endtime="20201030 11:53:18.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.942" endtime="20201030 11:53:18.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.937" endtime="20201030 11:53:18.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:18.339" level="INFO">${RESULT} = [{'diff': 9.29729999999962e-05}, {'diff': 9.363800000000005e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.341699999999842e-05}, {'diff': 9.394399999999858e-05}, {'diff': 9.380500000000236e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:18.330" endtime="20201030 11:53:18.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:18.348" level="INFO">${ACCURACY} = {'diff': [9.29729999999962e-05, 9.363800000000005e-05, 9.356900000000168e-05, 9.341699999999842e-05, 9.394399999999858e-05, 9.380500000000236e-05, 9.266699999999767e-05, 9.387500000000021e-05, 9.35420...</msg>
<status status="PASS" starttime="20201030 11:53:18.341" endtime="20201030 11:53:18.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.359" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:53:18.357" endtime="20201030 11:53:18.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.365" level="INFO">VALUE: [9.29729999999962e-05, 9.363800000000005e-05, 9.356900000000168e-05, 9.341699999999842e-05, 9.394399999999858e-05, 9.380500000000236e-05, 9.266699999999767e-05, 9.387500000000021e-05, 9.354200000000201e-05, 9.206999999999965e-05, 9.338899999999928e-05, 9.369399999999833e-05, 9.241699999999742e-05, 9.384800000000054e-05, 9.327800000000219e-05, 9.330500000000186e-05, 9.324999999999611e-05, 9.372199999999747e-05, 9.363900000000647e-05, 9.334700000000057e-05, 9.231900000000043e-05, 9.351399999999593e-05, 9.3027999999995e-05, 9.297199999999672e-05, 9.304100000000204e-05, 9.26529999999981e-05, 9.345799999999765e-05, 9.215300000000454e-05, 9.293099999999749e-05, 9.226399999999468e-05, 9.293100000000443e-05, 9.325000000000305e-05, 9.361100000000039e-05, 9.35000000000033e-05, 9.361100000000039e-05, 9.255600000000058e-05, 9.313899999999903e-05, 9.341699999999842e-05, 9.212499999999846e-05, 9.338899999999928e-05, 9.320900000000382e-05, 9.286099999999964e-05, 9.323700000000296e-05, 9.204200000000051e-05, 9.356900000000168e-05, 9.401400000000337e-05, 9.35279999999955e-05, 9.319400000000477e-05, 9.287499999999921e-05, 9.369399999999833e-05]</msg>
<status status="PASS" starttime="20201030 11:53:18.362" endtime="20201030 11:53:18.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.350" endtime="20201030 11:53:18.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:18.377" endtime="20201030 11:53:18.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.373" endtime="20201030 11:53:18.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.370" endtime="20201030 11:53:18.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.881" endtime="20201030 11:53:18.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.880" endtime="20201030 11:53:18.402"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.425" endtime="20201030 11:53:18.450"></status>
</kw>
<msg timestamp="20201030 11:53:18.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.421" endtime="20201030 11:53:18.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.454" endtime="20201030 11:53:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.460" endtime="20201030 11:53:18.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.414" endtime="20201030 11:53:18.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.409" endtime="20201030 11:53:18.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.484" endtime="20201030 11:53:18.821"></status>
</kw>
<msg timestamp="20201030 11:53:18.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045154111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.480" endtime="20201030 11:53:18.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045154111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045248389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.831" endtime="20201030 11:53:18.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.849" endtime="20201030 11:53:18.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.473" endtime="20201030 11:53:18.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.468" endtime="20201030 11:53:18.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:18.866" level="INFO">${RESULT} = [{'diff': 9.427800000000319e-05}, {'diff': 9.436100000000114e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.426399999999668e-05}, {'diff': 9.486100000000164e-05}, {'diff': 9.504100000000404e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:18.858" endtime="20201030 11:53:18.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:18.875" level="INFO">${ACCURACY} = {'diff': [9.427800000000319e-05, 9.436100000000114e-05, 9.461100000000139e-05, 9.426399999999668e-05, 9.486100000000164e-05, 9.504100000000404e-05, 9.430600000000233e-05, 9.441699999999942e-05, 9.4402...</msg>
<status status="PASS" starttime="20201030 11:53:18.868" endtime="20201030 11:53:18.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.886" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:53:18.884" endtime="20201030 11:53:18.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.892" level="INFO">VALUE: [9.427800000000319e-05, 9.436100000000114e-05, 9.461100000000139e-05, 9.426399999999668e-05, 9.486100000000164e-05, 9.504100000000404e-05, 9.430600000000233e-05, 9.441699999999942e-05, 9.440200000000037e-05, 9.462500000000096e-05, 9.467999999999976e-05, 9.468099999999924e-05, 9.484800000000154e-05, 9.429200000000276e-05, 9.43609999999942e-05, 9.477799999999675e-05, 9.494399999999958e-05, 9.495899999999863e-05, 9.431999999999496e-05, 9.462499999999402e-05, 9.449999999999736e-05, 9.472200000000541e-05, 9.451400000000387e-05, 9.4333000000002e-05, 9.451400000000387e-05, 9.501400000000437e-05, 9.455500000000311e-05, 9.452800000000344e-05, 9.458400000000172e-05, 9.406900000000218e-05, 9.5027999999997e-05, 9.491699999999992e-05, 9.436100000000114e-05, 9.409799999999385e-05, 9.444499999999856e-05, 9.452800000000344e-05, 9.455599999999564e-05, 9.340300000000579e-05, 9.447199999999822e-05, 9.412500000000046e-05, 9.45279999999965e-05, 9.411100000000089e-05, 9.437500000000071e-05, 9.462500000000096e-05, 9.46660000000002e-05, 9.468099999999924e-05, 9.444499999999856e-05, 9.484800000000154e-05, 9.433400000000147e-05, 9.445800000000559e-05]</msg>
<status status="PASS" starttime="20201030 11:53:18.888" endtime="20201030 11:53:18.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.877" endtime="20201030 11:53:18.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:18.910" endtime="20201030 11:53:18.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.905" endtime="20201030 11:53:18.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.902" endtime="20201030 11:53:18.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.404" endtime="20201030 11:53:18.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.403" endtime="20201030 11:53:18.935"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.958" endtime="20201030 11:53:18.977"></status>
</kw>
<msg timestamp="20201030 11:53:18.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.955" endtime="20201030 11:53:18.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.980" endtime="20201030 11:53:18.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.986" endtime="20201030 11:53:18.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.947" endtime="20201030 11:53:18.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.942" endtime="20201030 11:53:18.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.010" endtime="20201030 11:53:19.348"></status>
</kw>
<msg timestamp="20201030 11:53:19.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039428444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039524111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.006" endtime="20201030 11:53:19.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039428444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039524111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.358" endtime="20201030 11:53:19.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.376" endtime="20201030 11:53:19.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.999" endtime="20201030 11:53:19.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.994" endtime="20201030 11:53:19.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:19.393" level="INFO">${RESULT} = [{'diff': 9.566700000000067e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.559700000000282e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.581899999999699e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:19.385" endtime="20201030 11:53:19.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:19.404" level="INFO">${ACCURACY} = {'diff': [9.566700000000067e-05, 9.536100000000214e-05, 9.559700000000282e-05, 9.544400000000008e-05, 9.574999999999861e-05, 9.581899999999699e-05, 9.512500000000146e-05, 9.569400000000033e-05, 9.5610...</msg>
<status status="PASS" starttime="20201030 11:53:19.395" endtime="20201030 11:53:19.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.415" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:53:19.412" endtime="20201030 11:53:19.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.420" level="INFO">VALUE: [9.566700000000067e-05, 9.536100000000214e-05, 9.559700000000282e-05, 9.544400000000008e-05, 9.574999999999861e-05, 9.581899999999699e-05, 9.512500000000146e-05, 9.569400000000033e-05, 9.561099999999545e-05, 9.540200000000137e-05, 9.511100000000189e-05, 9.595800000000015e-05, 9.55279999999975e-05, 9.568100000000024e-05, 9.537499999999477e-05, 9.558400000000272e-05, 9.59729999999992e-05, 9.52079999999994e-05, 9.555500000000411e-05, 9.573599999999904e-05, 9.574999999999861e-05, 9.505499999999667e-05, 9.572199999999947e-05, 9.574999999999861e-05, 9.556900000000368e-05, 9.45279999999965e-05, 9.55279999999975e-05, 9.576399999999818e-05, 9.591600000000144e-05, 9.55409999999976e-05, 9.541600000000094e-05, 9.58479999999956e-05, 9.590299999999441e-05, 9.574999999999861e-05, 9.555500000000411e-05, 9.55279999999975e-05, 9.576399999999818e-05, 9.537500000000171e-05, 9.524999999999811e-05, 9.531999999999596e-05, 9.586199999999517e-05, 9.552800000000444e-05, 9.523599999999854e-05, 9.570899999999938e-05, 9.568100000000024e-05, 9.601299999999896e-05, 9.536100000000214e-05, 9.604200000000451e-05, 9.557000000000315e-05, 9.509700000000232e-05]</msg>
<status status="PASS" starttime="20201030 11:53:19.417" endtime="20201030 11:53:19.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.406" endtime="20201030 11:53:19.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:19.432" endtime="20201030 11:53:19.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.428" endtime="20201030 11:53:19.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.426" endtime="20201030 11:53:19.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.937" endtime="20201030 11:53:19.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.936" endtime="20201030 11:53:19.458"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.480" endtime="20201030 11:53:19.499"></status>
</kw>
<msg timestamp="20201030 11:53:19.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.477" endtime="20201030 11:53:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.502" endtime="20201030 11:53:19.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.509" endtime="20201030 11:53:19.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.470" endtime="20201030 11:53:19.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.464" endtime="20201030 11:53:19.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.532" endtime="20201030 11:53:19.870"></status>
</kw>
<msg timestamp="20201030 11:53:19.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039923931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.529" endtime="20201030 11:53:19.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039827181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039923931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.880" endtime="20201030 11:53:19.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.898" endtime="20201030 11:53:19.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.522" endtime="20201030 11:53:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.517" endtime="20201030 11:53:19.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:19.915" level="INFO">${RESULT} = [{'diff': 9.674999999999961e-05}, {'diff': 9.633299999999706e-05}, {'diff': 9.697199999999379e-05}, {'diff': 9.663900000000253e-05}, {'diff': 9.695800000000115e-05}, {'diff': 9.65279999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:19.907" endtime="20201030 11:53:19.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:19.926" level="INFO">${ACCURACY} = {'diff': [9.674999999999961e-05, 9.633299999999706e-05, 9.697199999999379e-05, 9.663900000000253e-05, 9.695800000000115e-05, 9.65279999999985e-05, 9.688900000000278e-05, 9.616700000000117e-05, 9.62919...</msg>
<status status="PASS" starttime="20201030 11:53:19.917" endtime="20201030 11:53:19.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.937" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:53:19.935" endtime="20201030 11:53:19.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.942" level="INFO">VALUE: [9.674999999999961e-05, 9.633299999999706e-05, 9.697199999999379e-05, 9.663900000000253e-05, 9.695800000000115e-05, 9.65279999999985e-05, 9.688900000000278e-05, 9.616700000000117e-05, 9.629199999999782e-05, 9.658300000000425e-05, 9.656900000000468e-05, 9.680600000000483e-05, 9.613900000000203e-05, 9.640200000000237e-05, 9.66530000000021e-05, 9.641600000000194e-05, 9.68880000000033e-05, 9.6333000000004e-05, 9.656999999999721e-05, 9.651400000000587e-05, 9.694399999999465e-05, 9.693100000000149e-05, 9.629099999999835e-05, 9.63479999999961e-05, 9.643100000000099e-05, 9.607000000000365e-05, 9.693100000000149e-05, 9.637499999999577e-05, 9.697200000000072e-05, 9.684699999999713e-05, 9.683399999999703e-05, 9.680499999999842e-05, 9.705499999999867e-05, 9.651400000000587e-05, 9.61530000000016e-05, 9.618100000000074e-05, 9.659699999999688e-05, 9.651399999999893e-05, 9.697200000000072e-05, 9.61530000000016e-05, 9.674999999999961e-05, 9.617999999999433e-05, 9.69860000000003e-05, 9.638899999999534e-05, 9.692999999999508e-05, 9.666700000000167e-05, 9.708400000000422e-05, 9.645799999999372e-05, 9.701399999999943e-05, 9.623699999999902e-05]</msg>
<status status="PASS" starttime="20201030 11:53:19.939" endtime="20201030 11:53:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.928" endtime="20201030 11:53:19.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:19.955" endtime="20201030 11:53:19.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.950" endtime="20201030 11:53:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.948" endtime="20201030 11:53:19.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.460" endtime="20201030 11:53:19.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.459" endtime="20201030 11:53:19.980"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.002" endtime="20201030 11:53:20.021"></status>
</kw>
<msg timestamp="20201030 11:53:20.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.999" endtime="20201030 11:53:20.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.025" endtime="20201030 11:53:20.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.031" endtime="20201030 11:53:20.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.992" endtime="20201030 11:53:20.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.986" endtime="20201030 11:53:20.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.054" endtime="20201030 11:53:20.397"></status>
</kw>
<msg timestamp="20201030 11:53:20.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039522417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.051" endtime="20201030 11:53:20.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039424944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039522417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.406" endtime="20201030 11:53:20.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.425" endtime="20201030 11:53:20.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.043" endtime="20201030 11:53:20.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.039" endtime="20201030 11:53:20.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:20.442" level="INFO">${RESULT} = [{'diff': 9.747299999999376e-05}, {'diff': 9.738899999999634e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.805500000000661e-05}, {'diff': 9.751399999999993e-05}, {'diff': 9.729099999999935e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:20.433" endtime="20201030 11:53:20.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:20.451" level="INFO">${ACCURACY} = {'diff': [9.747299999999376e-05, 9.738899999999634e-05, 9.726399999999968e-05, 9.805500000000661e-05, 9.751399999999993e-05, 9.729099999999935e-05, 9.804199999999957e-05, 9.706900000000518e-05, 9.7639...</msg>
<status status="PASS" starttime="20201030 11:53:20.444" endtime="20201030 11:53:20.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.462" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:53:20.460" endtime="20201030 11:53:20.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.468" level="INFO">VALUE: [9.747299999999376e-05, 9.738899999999634e-05, 9.726399999999968e-05, 9.805500000000661e-05, 9.751399999999993e-05, 9.729099999999935e-05, 9.804199999999957e-05, 9.706900000000518e-05, 9.763900000000353e-05, 9.769499999999487e-05, 9.725000000000011e-05, 9.72080000000014e-05, 9.777799999999975e-05, 9.745800000000165e-05, 9.711099999999695e-05, 9.754199999999907e-05, 9.794400000000258e-05, 9.775000000000061e-05, 9.737499999999677e-05, 9.76530000000031e-05, 9.787499999999727e-05, 9.794499999999512e-05, 9.776400000000018e-05, 9.733400000000447e-05, 9.708399999999728e-05, 9.806999999999871e-05, 9.765299999999616e-05, 9.725000000000011e-05, 9.790299999999641e-05, 9.719400000000183e-05, 9.725000000000011e-05, 9.758300000000525e-05, 9.719500000000131e-05, 9.783399999999803e-05, 9.745800000000165e-05, 9.779200000000626e-05, 9.723600000000054e-05, 9.751399999999993e-05, 9.712499999999652e-05, 9.736100000000414e-05, 9.775000000000061e-05, 9.709700000000432e-05, 9.755599999999864e-05, 9.727799999999925e-05, 9.741699999999548e-05, 9.784699999999813e-05, 9.766700000000267e-05, 9.73479999999971e-05, 9.731999999999796e-05, 9.740300000000285e-05]</msg>
<status status="PASS" starttime="20201030 11:53:20.465" endtime="20201030 11:53:20.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.453" endtime="20201030 11:53:20.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:20.480" endtime="20201030 11:53:20.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.476" endtime="20201030 11:53:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.473" endtime="20201030 11:53:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.982" endtime="20201030 11:53:20.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.981" endtime="20201030 11:53:20.505"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.528" endtime="20201030 11:53:20.548"></status>
</kw>
<msg timestamp="20201030 11:53:20.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.524" endtime="20201030 11:53:20.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.551" endtime="20201030 11:53:20.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.558" endtime="20201030 11:53:20.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.517" endtime="20201030 11:53:20.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.512" endtime="20201030 11:53:20.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.581" endtime="20201030 11:53:20.920"></status>
</kw>
<msg timestamp="20201030 11:53:20.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041011167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041110153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.578" endtime="20201030 11:53:20.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041011167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041110153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.929" endtime="20201030 11:53:20.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.948" endtime="20201030 11:53:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.571" endtime="20201030 11:53:20.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.566" endtime="20201030 11:53:20.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:20.965" level="INFO">${RESULT} = [{'diff': 9.89860000000023e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.81530000000036e-05}, {'diff': 9.829100000000035e-05}, {'diff': 9.88609999999987e-05}, {'diff': 9.893099999999655e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:53:20.956" endtime="20201030 11:53:20.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:20.974" level="INFO">${ACCURACY} = {'diff': [9.89860000000023e-05, 9.826400000000068e-05, 9.81530000000036e-05, 9.829100000000035e-05, 9.88609999999987e-05, 9.893099999999655e-05, 9.817999999999633e-05, 9.840300000000385e-05, 9.8791000...</msg>
<status status="PASS" starttime="20201030 11:53:20.967" endtime="20201030 11:53:20.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.985" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:53:20.983" endtime="20201030 11:53:20.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.990" level="INFO">VALUE: [9.89860000000023e-05, 9.826400000000068e-05, 9.81530000000036e-05, 9.829100000000035e-05, 9.88609999999987e-05, 9.893099999999655e-05, 9.817999999999633e-05, 9.840300000000385e-05, 9.879100000000085e-05, 9.815200000000412e-05, 9.811099999999795e-05, 9.845799999999572e-05, 9.884699999999913e-05, 9.84860000000018e-05, 9.833299999999906e-05, 9.875000000000161e-05, 9.866699999999673e-05, 9.869500000000281e-05, 9.88609999999987e-05, 9.874999999999468e-05, 9.817999999999633e-05, 9.89159999999975e-05, 9.89730000000022e-05, 9.847200000000222e-05, 9.841700000000342e-05, 9.811100000000489e-05, 9.86660000000042e-05, 9.884699999999913e-05, 9.879100000000085e-05, 9.859799999999835e-05, 9.816700000000317e-05, 9.829199999999982e-05, 9.862499999999802e-05, 9.866699999999673e-05, 9.887499999999827e-05, 9.902799999999407e-05, 9.859699999999888e-05, 9.811099999999795e-05, 9.808299999999881e-05, 9.891699999999698e-05, 9.827800000000025e-05, 9.891700000000392e-05, 9.870799999999597e-05, 9.827800000000025e-05, 9.8333000000006e-05, 9.825000000000111e-05, 9.854200000000007e-05, 9.858299999999931e-05, 9.854200000000007e-05, 9.876400000000118e-05]</msg>
<status status="PASS" starttime="20201030 11:53:20.987" endtime="20201030 11:53:20.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.976" endtime="20201030 11:53:20.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:21.004" endtime="20201030 11:53:21.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.998" endtime="20201030 11:53:21.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.996" endtime="20201030 11:53:21.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.507" endtime="20201030 11:53:21.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.506" endtime="20201030 11:53:21.029"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.051" endtime="20201030 11:53:21.070"></status>
</kw>
<msg timestamp="20201030 11:53:21.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.048" endtime="20201030 11:53:21.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.074" endtime="20201030 11:53:21.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.080" endtime="20201030 11:53:21.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.041" endtime="20201030 11:53:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.035" endtime="20201030 11:53:21.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.103" endtime="20201030 11:53:21.443"></status>
</kw>
<msg timestamp="20201030 11:53:21.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039181236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:21.100" endtime="20201030 11:53:21.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039082125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039181236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:21.452" endtime="20201030 11:53:21.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.471" endtime="20201030 11:53:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.093" endtime="20201030 11:53:21.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.088" endtime="20201030 11:53:21.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:21.488" level="INFO">${RESULT} = [{'diff': 9.911099999999895e-05}, {'diff': 9.962499999999902e-05}, {'diff': 9.919499999999637e-05}, {'diff': 9.925000000000211e-05}, {'diff': 9.936100000000614e-05}, {'diff': 9.923600000000254e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:21.479" endtime="20201030 11:53:21.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:21.498" level="INFO">${ACCURACY} = {'diff': [9.911099999999895e-05, 9.962499999999902e-05, 9.919499999999637e-05, 9.925000000000211e-05, 9.936100000000614e-05, 9.923600000000254e-05, 9.974999999999568e-05, 9.91939999999969e-05, 9.94169...</msg>
<status status="PASS" starttime="20201030 11:53:21.490" endtime="20201030 11:53:21.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.509" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:53:21.507" endtime="20201030 11:53:21.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.515" level="INFO">VALUE: [9.911099999999895e-05, 9.962499999999902e-05, 9.919499999999637e-05, 9.925000000000211e-05, 9.936100000000614e-05, 9.923600000000254e-05, 9.974999999999568e-05, 9.91939999999969e-05, 9.941699999999748e-05, 9.999999999999593e-05, 9.961099999999945e-05, 9.994399999999765e-05, 9.961099999999945e-05, 9.933300000000006e-05, 9.980599999999396e-05, 9.945900000000313e-05, 9.909699999999938e-05, 9.997199999999679e-05, 9.923700000000202e-05, 9.984700000000013e-05, 0.00010004199999999464, 9.909800000000579e-05, 9.992999999999808e-05, 9.91530000000046e-05, 9.987499999999927e-05, 9.908399999999928e-05, 9.983300000000056e-05, 9.956900000000074e-05, 9.977700000000228e-05, 9.979200000000132e-05, 9.93609999999992e-05, 0.00010006999999999378, 9.929100000000135e-05, 9.923600000000254e-05, 9.991700000000492e-05, 9.93880000000058e-05, 9.979199999999439e-05, 9.98609999999997e-05, 9.945800000000365e-05, 9.974999999999568e-05, 9.916700000000417e-05, 9.975000000000261e-05, 9.984700000000013e-05, 9.998599999999636e-05, 9.931999999999996e-05, 9.937499999999877e-05, 9.93609999999992e-05, 9.972199999999654e-05, 9.969400000000433e-05, 0.00010004199999999464]</msg>
<status status="PASS" starttime="20201030 11:53:21.512" endtime="20201030 11:53:21.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.500" endtime="20201030 11:53:21.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:21.527" endtime="20201030 11:53:21.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.523" endtime="20201030 11:53:21.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.520" endtime="20201030 11:53:21.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.031" endtime="20201030 11:53:21.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.030" endtime="20201030 11:53:21.552"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.575" endtime="20201030 11:53:21.594"></status>
</kw>
<msg timestamp="20201030 11:53:21.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.571" endtime="20201030 11:53:21.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.597" endtime="20201030 11:53:21.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.603" endtime="20201030 11:53:21.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.564" endtime="20201030 11:53:21.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.559" endtime="20201030 11:53:21.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.626" endtime="20201030 11:53:21.964"></status>
</kw>
<msg timestamp="20201030 11:53:21.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0393095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:21.623" endtime="20201030 11:53:21.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0393095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039409875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:21.973" endtime="20201030 11:53:21.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.991" endtime="20201030 11:53:21.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.616" endtime="20201030 11:53:21.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.611" endtime="20201030 11:53:21.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:22.007" level="INFO">${RESULT} = [{'diff': 0.00010037499999999977}, {'diff': 0.0001008610000000007}, {'diff': 0.00010084700000000113}, {'diff': 0.00010048599999999686}, {'diff': 0.00010015299999999866}, {'diff': 0.0001001660000000057...</msg>
<status status="PASS" starttime="20201030 11:53:21.999" endtime="20201030 11:53:22.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:22.019" level="INFO">${ACCURACY} = {'diff': [0.00010037499999999977, 0.0001008610000000007, 0.00010084700000000113, 0.00010048599999999686, 0.00010015299999999866, 0.0001001660000000057, 0.0001004860000000038, 0.00010102700000000353, 0...</msg>
<status status="PASS" starttime="20201030 11:53:22.010" endtime="20201030 11:53:22.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.030" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:53:22.027" endtime="20201030 11:53:22.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.035" level="INFO">VALUE: [0.00010037499999999977, 0.0001008610000000007, 0.00010084700000000113, 0.00010048599999999686, 0.00010015299999999866, 0.0001001660000000057, 0.0001004860000000038, 0.00010102700000000353, 0.00010104200000000257, 0.00010044499999999762, 0.00010062500000000002, 0.00010062500000000002, 0.0001008610000000007, 0.00010038899999999934, 0.00010090299999999941, 0.00010037499999999977, 0.00010069499999999787, 0.00010023699999999608, 0.00010058300000000131, 0.00010076400000000318, 0.00010037499999999977, 0.00010033300000000106, 0.00010016700000000517, 0.00010048599999999686, 0.00010015299999999866, 0.00010018000000000526, 0.00010018100000000474, 0.00010090200000000688, 0.00010065299999999916, 0.00010087500000000027, 0.00010007000000000071, 0.00010018000000000526, 0.00010083400000000103, 0.00010065299999999916, 0.00010083400000000103, 0.00010075000000000361, 0.00010087500000000027, 0.00010020899999999694, 0.00010087500000000027, 0.00010105499999999573, 0.00010012499999999952, 0.00010084700000000113, 0.00010004200000000157, 0.00010058300000000131, 0.00010038799999999987, 0.00010079100000000285, 0.00010059700000000088, 0.00010042999999999858, 0.00010031900000000149, 0.00010094399999999865]</msg>
<status status="PASS" starttime="20201030 11:53:22.032" endtime="20201030 11:53:22.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.020" endtime="20201030 11:53:22.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:22.047" endtime="20201030 11:53:22.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.043" endtime="20201030 11:53:22.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.040" endtime="20201030 11:53:22.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.554" endtime="20201030 11:53:22.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.553" endtime="20201030 11:53:22.072"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.094" endtime="20201030 11:53:22.114"></status>
</kw>
<msg timestamp="20201030 11:53:22.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.091" endtime="20201030 11:53:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.117" endtime="20201030 11:53:22.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.123" endtime="20201030 11:53:22.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.084" endtime="20201030 11:53:22.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.078" endtime="20201030 11:53:22.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.146" endtime="20201030 11:53:22.488"></status>
</kw>
<msg timestamp="20201030 11:53:22.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039092875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.143" endtime="20201030 11:53:22.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039092875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.497" endtime="20201030 11:53:22.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.516" endtime="20201030 11:53:22.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.136" endtime="20201030 11:53:22.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.131" endtime="20201030 11:53:22.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:22.532" level="INFO">${RESULT} = [{'diff': 0.00010195799999999922}, {'diff': 0.00010169499999999887}, {'diff': 0.00010184700000000213}, {'diff': 0.00010199999999999793}, {'diff': 0.00010127699999999684}, {'diff': 0.000101972999999998...</msg>
<status status="PASS" starttime="20201030 11:53:22.524" endtime="20201030 11:53:22.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:22.541" level="INFO">${ACCURACY} = {'diff': [0.00010195799999999922, 0.00010169499999999887, 0.00010184700000000213, 0.00010199999999999793, 0.00010127699999999684, 0.00010197299999999826, 0.00010124999999999718, 0.00010206999999999578...</msg>
<status status="PASS" starttime="20201030 11:53:22.534" endtime="20201030 11:53:22.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.552" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:53:22.550" endtime="20201030 11:53:22.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.557" level="INFO">VALUE: [0.00010195799999999922, 0.00010169499999999887, 0.00010184700000000213, 0.00010199999999999793, 0.00010127699999999684, 0.00010197299999999826, 0.00010124999999999718, 0.00010206999999999578, 0.00010186200000000117, 0.00010195799999999922, 0.00010183400000000203, 0.0001013339999999946, 0.00010132000000000196, 0.00010151400000000393, 0.0001015689999999958, 0.0001018060000000029, 0.00010188900000000084, 0.00010127799999999632, 0.00010179100000000385, 0.00010158400000000178, 0.00010150000000000436, 0.00010195799999999922, 0.00010144499999999862, 0.00010179199999999639, 0.00010150000000000436, 0.00010156999999999528, 0.00010151299999999752, 0.0001012359999999976, 0.00010116700000000617, 0.00010159700000000188, 0.00010145900000000513, 0.00010133300000000206, 0.00010166600000000026, 0.00010158300000000231, 0.00010140299999999991, 0.00010125000000000411, 0.00010174999999999768, 0.00010181899999999605, 0.00010140299999999991, 0.00010165200000000069, 0.000101513999999997, 0.0001014860000000048, 0.00010136099999999426, 0.00010179200000000332, 0.00010154199999999614, 0.00010105499999999573, 0.00010120900000000488, 0.0001011809999999988, 0.00010109800000000085, 0.00010193099999999955]</msg>
<status status="PASS" starttime="20201030 11:53:22.554" endtime="20201030 11:53:22.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.543" endtime="20201030 11:53:22.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:22.570" endtime="20201030 11:53:22.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.566" endtime="20201030 11:53:22.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.563" endtime="20201030 11:53:22.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.074" endtime="20201030 11:53:22.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.073" endtime="20201030 11:53:22.595"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.617" endtime="20201030 11:53:22.638"></status>
</kw>
<msg timestamp="20201030 11:53:22.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.614" endtime="20201030 11:53:22.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.641" endtime="20201030 11:53:22.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.648" endtime="20201030 11:53:22.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.607" endtime="20201030 11:53:22.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.601" endtime="20201030 11:53:22.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.671" endtime="20201030 11:53:23.009"></status>
</kw>
<msg timestamp="20201030 11:53:23.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041047292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.668" endtime="20201030 11:53:23.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041047292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041150097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.018" endtime="20201030 11:53:23.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.036" endtime="20201030 11:53:23.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.661" endtime="20201030 11:53:23.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.656" endtime="20201030 11:53:23.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:23.053" level="INFO">${RESULT} = [{'diff': 0.00010280499999999748}, {'diff': 0.00010277799999999782}, {'diff': 0.00010204099999999716}, {'diff': 0.00010265200000000169}, {'diff': 0.00010237500000000177}, {'diff': 0.000103027999999998...</msg>
<status status="PASS" starttime="20201030 11:53:23.044" endtime="20201030 11:53:23.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:23.062" level="INFO">${ACCURACY} = {'diff': [0.00010280499999999748, 0.00010277799999999782, 0.00010204099999999716, 0.00010265200000000169, 0.00010237500000000177, 0.00010302799999999807, 0.00010262500000000202, 0.00010277800000000475...</msg>
<status status="PASS" starttime="20201030 11:53:23.055" endtime="20201030 11:53:23.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.073" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:53:23.070" endtime="20201030 11:53:23.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.078" level="INFO">VALUE: [0.00010280499999999748, 0.00010277799999999782, 0.00010204099999999716, 0.00010265200000000169, 0.00010237500000000177, 0.00010302799999999807, 0.00010262500000000202, 0.00010277800000000475, 0.00010237500000000177, 0.00010257000000000321, 0.00010270899999999944, 0.00010277800000000475, 0.00010283299999999662, 0.00010240200000000144, 0.00010232000000000296, 0.00010205600000000314, 0.00010244400000000015, 0.00010258399999999585, 0.00010243100000000005, 0.00010227800000000425, 0.00010227800000000425, 0.00010279200000000432, 0.00010224999999999818, 0.00010238900000000134, 0.00010247199999999929, 0.00010290300000000141, 0.0001025689999999968, 0.00010299999999999893, 0.00010216599999999382, 0.00010288900000000184, 0.00010276400000000518, 0.00010231900000000349, 0.00010268000000000083, 0.00010266700000000073, 0.00010259700000000288, 0.00010263900000000159, 0.00010226299999999827, 0.00010238900000000134, 0.00010216700000000023, 0.00010237500000000177, 0.00010280499999999748, 0.00010226400000000468, 0.00010231899999999655, 0.00010254099999999766, 0.00010256900000000374, 0.00010222199999999904, 0.00010224999999999818, 0.00010281899999999705, 0.0001023060000000034, 0.00010277700000000528]</msg>
<status status="PASS" starttime="20201030 11:53:23.075" endtime="20201030 11:53:23.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.063" endtime="20201030 11:53:23.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:23.092" endtime="20201030 11:53:23.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.086" endtime="20201030 11:53:23.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.083" endtime="20201030 11:53:23.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.597" endtime="20201030 11:53:23.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.596" endtime="20201030 11:53:23.117"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.139" endtime="20201030 11:53:23.159"></status>
</kw>
<msg timestamp="20201030 11:53:23.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.136" endtime="20201030 11:53:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.162" endtime="20201030 11:53:23.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.169" endtime="20201030 11:53:23.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.129" endtime="20201030 11:53:23.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.123" endtime="20201030 11:53:23.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.191" endtime="20201030 11:53:23.531"></status>
</kw>
<msg timestamp="20201030 11:53:23.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039571431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039674611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.188" endtime="20201030 11:53:23.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039571431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039674611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.540" endtime="20201030 11:53:23.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.558" endtime="20201030 11:53:23.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.181" endtime="20201030 11:53:23.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.176" endtime="20201030 11:53:23.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:23.575" level="INFO">${RESULT} = [{'diff': 0.00010318000000000133}, {'diff': 0.00010408400000000428}, {'diff': 0.00010355499999999823}, {'diff': 0.00010347200000000029}, {'diff': 0.0001035689999999978}, {'diff': 0.0001036389999999956...</msg>
<status status="PASS" starttime="20201030 11:53:23.567" endtime="20201030 11:53:23.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:23.590" level="INFO">${ACCURACY} = {'diff': [0.00010318000000000133, 0.00010408400000000428, 0.00010355499999999823, 0.00010347200000000029, 0.0001035689999999978, 0.00010363899999999565, 0.0001033610000000032, 0.00010340300000000191, ...</msg>
<status status="PASS" starttime="20201030 11:53:23.577" endtime="20201030 11:53:23.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.601" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:53:23.598" endtime="20201030 11:53:23.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.606" level="INFO">VALUE: [0.00010318000000000133, 0.00010408400000000428, 0.00010355499999999823, 0.00010347200000000029, 0.0001035689999999978, 0.00010363899999999565, 0.0001033610000000032, 0.00010340300000000191, 0.00010358299999999737, 0.00010383300000000456, 0.00010399999999999993, 0.0001036810000000013, 0.00010380599999999796, 0.00010345800000000072, 0.0001033339999999966, 0.00010320800000000047, 0.00010369500000000087, 0.00010340300000000191, 0.0001033610000000032, 0.00010332000000000396, 0.0001038889999999959, 0.00010315300000000166, 0.00010366700000000173, 0.00010365299999999522, 0.00010326399999999875, 0.00010366700000000173, 0.00010344400000000115, 0.00010334700000000363, 0.00010351299999999952, 0.00010409699999999744, 0.00010377799999999882, 0.00010348599999999986, 0.00010376299999999977, 0.0001037360000000001, 0.00010348599999999986, 0.00010361100000000345, 0.00010316700000000123, 0.0001040139999999995, 0.00010354199999999814, 0.00010349999999999943, 0.00010338900000000234, 0.00010408299999999787, 0.00010340300000000191, 0.00010388900000000284, 0.00010333300000000406, 0.00010316700000000123, 0.00010354099999999866, 0.00010345800000000072, 0.00010305600000000414, 0.00010388799999999643]</msg>
<status status="PASS" starttime="20201030 11:53:23.603" endtime="20201030 11:53:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.592" endtime="20201030 11:53:23.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:23.618" endtime="20201030 11:53:23.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.614" endtime="20201030 11:53:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.611" endtime="20201030 11:53:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.119" endtime="20201030 11:53:23.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.118" endtime="20201030 11:53:23.643"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.666" endtime="20201030 11:53:23.685"></status>
</kw>
<msg timestamp="20201030 11:53:23.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.662" endtime="20201030 11:53:23.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.689" endtime="20201030 11:53:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.695" endtime="20201030 11:53:23.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.655" endtime="20201030 11:53:23.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.650" endtime="20201030 11:53:23.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.718" endtime="20201030 11:53:24.056"></status>
</kw>
<msg timestamp="20201030 11:53:24.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039503736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039607875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.714" endtime="20201030 11:53:24.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039503736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039607875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.065" endtime="20201030 11:53:24.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.084" endtime="20201030 11:53:24.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.707" endtime="20201030 11:53:24.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.703" endtime="20201030 11:53:24.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:24.100" level="INFO">${RESULT} = [{'diff': 0.00010413900000000309}, {'diff': 0.00010456999999999828}, {'diff': 0.000104514}, {'diff': 0.00010427799999999932}, {'diff': 0.00010488900000000384}, {'diff': 0.00010470799999999503}, {'diff...</msg>
<status status="PASS" starttime="20201030 11:53:24.092" endtime="20201030 11:53:24.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:24.185" level="INFO">${ACCURACY} = {'diff': [0.00010413900000000309, 0.00010456999999999828, 0.000104514, 0.00010427799999999932, 0.00010488900000000384, 0.00010470799999999503, 0.00010490300000000341, 0.00010470800000000197, 0.0001048...</msg>
<status status="PASS" starttime="20201030 11:53:24.102" endtime="20201030 11:53:24.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.196" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:53:24.193" endtime="20201030 11:53:24.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.201" level="INFO">VALUE: [0.00010413900000000309, 0.00010456999999999828, 0.000104514, 0.00010427799999999932, 0.00010488900000000384, 0.00010470799999999503, 0.00010490300000000341, 0.00010470800000000197, 0.00010480599999999896, 0.00010452799999999957, 0.00010470799999999503, 0.00010413900000000309, 0.00010512499999999758, 0.00010487499999999733, 0.00010508300000000581, 0.00010483299999999862, 0.00010495800000000222, 0.00010463900000000359, 0.00010468000000000283, 0.00010488900000000384, 0.00010411099999999701, 0.00010416700000000223, 0.00010408400000000428, 0.0001043889999999964, 0.00010418099999999486, 0.00010431900000000549, 0.00010477799999999982, 0.00010427799999999932, 0.00010441700000000248, 0.000104514, 0.00010431899999999855, 0.00010425000000000018, 0.00010429099999999941, 0.00010487499999999733, 0.00010486099999999776, 0.00010487500000000427, 0.00010413900000000309, 0.00010408400000000428, 0.000104514, 0.0001047360000000011, 0.00010417999999999539, 0.00010477800000000675, 0.00010494399999999571, 0.00010493100000000255, 0.00010486199999999724, 0.00010454099999999966, 0.00010481999999999853, 0.00010505499999999973, 0.0001050559999999992, 0.00010467999999999589]</msg>
<status status="PASS" starttime="20201030 11:53:24.198" endtime="20201030 11:53:24.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.187" endtime="20201030 11:53:24.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:24.223" endtime="20201030 11:53:24.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.219" endtime="20201030 11:53:24.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.216" endtime="20201030 11:53:24.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.645" endtime="20201030 11:53:24.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.644" endtime="20201030 11:53:24.248"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.272" endtime="20201030 11:53:24.291"></status>
</kw>
<msg timestamp="20201030 11:53:24.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.268" endtime="20201030 11:53:24.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.295" endtime="20201030 11:53:24.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.301" endtime="20201030 11:53:24.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.260" endtime="20201030 11:53:24.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.255" endtime="20201030 11:53:24.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.324" endtime="20201030 11:53:24.671"></status>
</kw>
<msg timestamp="20201030 11:53:24.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040826931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.321" endtime="20201030 11:53:24.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040826931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.681" endtime="20201030 11:53:24.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.698" endtime="20201030 11:53:24.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.313" endtime="20201030 11:53:24.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.309" endtime="20201030 11:53:24.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:24.715" level="INFO">${RESULT} = [{'diff': 0.00010602799999999413}, {'diff': 0.00010520799999999553}, {'diff': 0.00010575000000000168}, {'diff': 0.00010588900000000484}, {'diff': 0.00010565300000000416}, {'diff': 0.000105973000000002...</msg>
<status status="PASS" starttime="20201030 11:53:24.707" endtime="20201030 11:53:24.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:24.724" level="INFO">${ACCURACY} = {'diff': [0.00010602799999999413, 0.00010520799999999553, 0.00010575000000000168, 0.00010588900000000484, 0.00010565300000000416, 0.00010597300000000226, 0.00010512500000000452, 0.00010559799999999842...</msg>
<status status="PASS" starttime="20201030 11:53:24.717" endtime="20201030 11:53:24.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.735" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:53:24.733" endtime="20201030 11:53:24.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.741" level="INFO">VALUE: [0.00010602799999999413, 0.00010520799999999553, 0.00010575000000000168, 0.00010588900000000484, 0.00010565300000000416, 0.00010597300000000226, 0.00010512500000000452, 0.00010559799999999842, 0.00010516699999999629, 0.00010554200000000014, 0.00010563899999999765, 0.00010587499999999833, 0.00010522200000000204, 0.00010548600000000186, 0.00010559700000000588, 0.00010579100000000091, 0.00010527800000000032, 0.00010522200000000204, 0.00010563900000000459, 0.0001050689999999993, 0.00010588900000000484, 0.00010520799999999553, 0.0001053339999999986, 0.00010534700000000563, 0.00010611099999999901, 0.00010570800000000297, 0.0001054019999999975, 0.0001057360000000021, 0.00010593099999999661, 0.00010526400000000075, 0.00010580599999999996, 0.00010598700000000183, 0.00010568099999999636, 0.00010602800000000107, 0.00010566600000000426, 0.00010511099999999801, 0.00010584699999999919, 0.00010595799999999628, 0.0001055689999999998, 0.00010587499999999833, 0.00010583299999999962, 0.0001051810000000028, 0.00010544400000000315, 0.00010559699999999894, 0.0001053889999999974, 0.00010545800000000272, 0.00010561100000000545, 0.00010530499999999998, 0.00010520800000000247, 0.00010579100000000091]</msg>
<status status="PASS" starttime="20201030 11:53:24.737" endtime="20201030 11:53:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.726" endtime="20201030 11:53:24.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:24.754" endtime="20201030 11:53:24.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.749" endtime="20201030 11:53:24.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.747" endtime="20201030 11:53:24.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.250" endtime="20201030 11:53:24.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.249" endtime="20201030 11:53:24.779"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.801" endtime="20201030 11:53:24.822"></status>
</kw>
<msg timestamp="20201030 11:53:24.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.797" endtime="20201030 11:53:24.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.825" endtime="20201030 11:53:24.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.831" endtime="20201030 11:53:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.791" endtime="20201030 11:53:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.785" endtime="20201030 11:53:24.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.854" endtime="20201030 11:53:25.200"></status>
</kw>
<msg timestamp="20201030 11:53:25.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039062431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03916925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:24.851" endtime="20201030 11:53:25.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039062431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03916925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:25.209" endtime="20201030 11:53:25.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.227" endtime="20201030 11:53:25.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.844" endtime="20201030 11:53:25.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.839" endtime="20201030 11:53:25.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:25.244" level="INFO">${RESULT} = [{'diff': 0.00010681900000000105}, {'diff': 0.00010606999999999978}, {'diff': 0.00010702800000000207}, {'diff': 0.00010693100000000455}, {'diff': 0.0001065690000000008}, {'diff': 0.0001066659999999983...</msg>
<status status="PASS" starttime="20201030 11:53:25.235" endtime="20201030 11:53:25.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:25.254" level="INFO">${ACCURACY} = {'diff': [0.00010681900000000105, 0.00010606999999999978, 0.00010702800000000207, 0.00010693100000000455, 0.0001065690000000008, 0.00010666599999999832, 0.0001061940000000039, 0.00010712499999999958, ...</msg>
<status status="PASS" starttime="20201030 11:53:25.246" endtime="20201030 11:53:25.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.265" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:53:25.263" endtime="20201030 11:53:25.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.270" level="INFO">VALUE: [0.00010681900000000105, 0.00010606999999999978, 0.00010702800000000207, 0.00010693100000000455, 0.0001065690000000008, 0.00010666599999999832, 0.0001061940000000039, 0.00010712499999999958, 0.00010662499999999908, 0.00010611099999999901, 0.00010642999999999764, 0.0001069160000000055, 0.0001065690000000008, 0.00010630500000000098, 0.00010681900000000105, 0.00010674999999999574, 0.0001070140000000025, 0.00010700000000000293, 0.00010661099999999951, 0.00010661099999999951, 0.00010662499999999908, 0.00010687499999999933, 0.00010627800000000132, 0.000106416000000005, 0.00010658399999999985, 0.000106514000000002, 0.00010630499999999404, 0.00010627800000000132, 0.00010617999999999739, 0.00010645799999999678, 0.000106514000000002, 0.00010626400000000175, 0.00010702700000000259, 0.00010640299999999797, 0.00010712499999999958, 0.00010661100000000645, 0.00010615199999999825, 0.00010619399999999696, 0.0001062360000000026, 0.0001067360000000031, 0.00010662500000000602, 0.00010691700000000498, 0.00010692999999999814, 0.00010684799999999967, 0.00010682000000000053, 0.00010680499999999454, 0.00010686099999999976, 0.00010666599999999832, 0.00010697299999999632, 0.00010641699999999754]</msg>
<status status="PASS" starttime="20201030 11:53:25.267" endtime="20201030 11:53:25.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.256" endtime="20201030 11:53:25.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:25.282" endtime="20201030 11:53:25.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.278" endtime="20201030 11:53:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.276" endtime="20201030 11:53:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.781" endtime="20201030 11:53:25.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.780" endtime="20201030 11:53:25.307"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.330" endtime="20201030 11:53:25.349"></status>
</kw>
<msg timestamp="20201030 11:53:25.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.326" endtime="20201030 11:53:25.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.352" endtime="20201030 11:53:25.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.358" endtime="20201030 11:53:25.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.319" endtime="20201030 11:53:25.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.314" endtime="20201030 11:53:25.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.381" endtime="20201030 11:53:25.719"></status>
</kw>
<msg timestamp="20201030 11:53:25.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039038597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039145722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:25.378" endtime="20201030 11:53:25.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039038597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039145722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:25.729" endtime="20201030 11:53:25.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.746" endtime="20201030 11:53:25.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.371" endtime="20201030 11:53:25.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.366" endtime="20201030 11:53:25.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:25.763" level="INFO">${RESULT} = [{'diff': 0.00010712499999999958}, {'diff': 0.00010724999999999624}, {'diff': 0.00010711100000000001}, {'diff': 0.00010741599999999907}, {'diff': 0.00010769399999999846}, {'diff': 0.000107818999999995...</msg>
<status status="PASS" starttime="20201030 11:53:25.755" endtime="20201030 11:53:25.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:25.774" level="INFO">${ACCURACY} = {'diff': [0.00010712499999999958, 0.00010724999999999624, 0.00010711100000000001, 0.00010741599999999907, 0.00010769399999999846, 0.00010781899999999511, 0.00010727700000000284, 0.0001072219999999971,...</msg>
<status status="PASS" starttime="20201030 11:53:25.765" endtime="20201030 11:53:25.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.785" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:53:25.783" endtime="20201030 11:53:25.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.790" level="INFO">VALUE: [0.00010712499999999958, 0.00010724999999999624, 0.00010711100000000001, 0.00010741599999999907, 0.00010769399999999846, 0.00010781899999999511, 0.00010727700000000284, 0.0001072219999999971, 0.00010741599999999907, 0.00010734700000000069, 0.00010791700000000598, 0.00010733300000000112, 0.00010725000000000318, 0.00010723599999999667, 0.00010715300000000566, 0.00010713899999999915, 0.00010734700000000069, 0.00010783299999999468, 0.00010776400000000325, 0.0001078889999999999, 0.0001077769999999964, 0.00010783299999999468, 0.00010722299999999657, 0.00010729100000000241, 0.00010793099999999861, 0.00010770799999999803, 0.0001078889999999999, 0.0001070969999999935, 0.0001075560000000017, 0.00010786200000000024, 0.00010752799999999563, 0.00010751399999999606, 0.0001070560000000012, 0.00010777800000000282, 0.00010736100000000026, 0.00010744399999999821, 0.00010780600000000196, 0.00010729100000000241, 0.0001078889999999999, 0.00010790299999999947, 0.000107902, 0.00010790299999999947, 0.00010791699999999904, 0.00010792999999999914, 0.00010717999999999839, 0.00010749999999999649, 0.00010797200000000479, 0.00010802800000000307, 0.00010733300000000112, 0.00010793099999999861]</msg>
<status status="PASS" starttime="20201030 11:53:25.787" endtime="20201030 11:53:25.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.776" endtime="20201030 11:53:25.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:25.802" endtime="20201030 11:53:25.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.798" endtime="20201030 11:53:25.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.796" endtime="20201030 11:53:25.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.309" endtime="20201030 11:53:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.308" endtime="20201030 11:53:25.827"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.849" endtime="20201030 11:53:25.869"></status>
</kw>
<msg timestamp="20201030 11:53:25.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.846" endtime="20201030 11:53:25.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.872" endtime="20201030 11:53:25.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.878" endtime="20201030 11:53:25.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.839" endtime="20201030 11:53:25.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.833" endtime="20201030 11:53:25.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.903" endtime="20201030 11:53:26.243"></status>
</kw>
<msg timestamp="20201030 11:53:26.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039074667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:25.898" endtime="20201030 11:53:26.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039074667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039182958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:26.252" endtime="20201030 11:53:26.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.271" endtime="20201030 11:53:26.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.891" endtime="20201030 11:53:26.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.886" endtime="20201030 11:53:26.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:26.288" level="INFO">${RESULT} = [{'diff': 0.00010829099999999647}, {'diff': 0.00010886100000000176}, {'diff': 0.00010849999999999749}, {'diff': 0.00010894499999999918}, {'diff': 0.00010815299999999972}, {'diff': 0.000108249999999997...</msg>
<status status="PASS" starttime="20201030 11:53:26.279" endtime="20201030 11:53:26.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:26.296" level="INFO">${ACCURACY} = {'diff': [0.00010829099999999647, 0.00010886100000000176, 0.00010849999999999749, 0.00010894499999999918, 0.00010815299999999972, 0.00010824999999999724, 0.00010872200000000554, 0.00010856899999999586...</msg>
<status status="PASS" starttime="20201030 11:53:26.290" endtime="20201030 11:53:26.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.307" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:53:26.305" endtime="20201030 11:53:26.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.312" level="INFO">VALUE: [0.00010829099999999647, 0.00010886100000000176, 0.00010849999999999749, 0.00010894499999999918, 0.00010815299999999972, 0.00010824999999999724, 0.00010872200000000554, 0.00010856899999999586, 0.00010865300000000022, 0.00010832000000000203, 0.00010829200000000289, 0.00010813800000000068, 0.00010841699999999954, 0.00010898599999999842, 0.00010847199999999835, 0.00010841600000000007, 0.00010823599999999767, 0.00010837500000000083, 0.00010886100000000176, 0.0001090419999999967, 0.00010847299999999782, 0.00010834699999999475, 0.0001087219999999986, 0.00010868099999999936, 0.00010880599999999602, 0.00010865200000000075, 0.0001083890000000004, 0.00010895799999999928, 0.00010898600000000536, 0.00010823599999999767, 0.00010809799999999398, 0.00010883300000000262, 0.00010848600000000486, 0.00010887500000000133, 0.00010812499999999364, 0.00010823599999999767, 0.00010815200000000025, 0.00010837500000000083, 0.00010830599999999552, 0.00010869399999999946, 0.0001083890000000004, 0.00010819399999999896, 0.00010836100000000126, 0.00010836100000000126, 0.00010830599999999552, 0.00010880500000000348, 0.00010883299999999568, 0.00010841699999999954, 0.00010858300000000237, 0.00010894399999999971]</msg>
<status status="PASS" starttime="20201030 11:53:26.309" endtime="20201030 11:53:26.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.298" endtime="20201030 11:53:26.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:26.325" endtime="20201030 11:53:26.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.320" endtime="20201030 11:53:26.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.318" endtime="20201030 11:53:26.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.829" endtime="20201030 11:53:26.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.828" endtime="20201030 11:53:26.350"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.374" endtime="20201030 11:53:26.393"></status>
</kw>
<msg timestamp="20201030 11:53:26.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:26.369" endtime="20201030 11:53:26.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:26.396" endtime="20201030 11:53:26.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.402" endtime="20201030 11:53:26.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.362" endtime="20201030 11:53:26.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.356" endtime="20201030 11:53:26.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.425" endtime="20201030 11:53:26.764"></status>
</kw>
<msg timestamp="20201030 11:53:26.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040747667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:26.422" endtime="20201030 11:53:26.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040747667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:26.773" endtime="20201030 11:53:26.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.791" endtime="20201030 11:53:26.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.415" endtime="20201030 11:53:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.410" endtime="20201030 11:53:26.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:26.808" level="INFO">${RESULT} = [{'diff': 0.00010934800000000217}, {'diff': 0.00011002699999999865}, {'diff': 0.00010994400000000071}, {'diff': 0.00010943100000000011}, {'diff': 0.00010927800000000432}, {'diff': 0.000109235999999998...</msg>
<status status="PASS" starttime="20201030 11:53:26.800" endtime="20201030 11:53:26.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:26.817" level="INFO">${ACCURACY} = {'diff': [0.00010934800000000217, 0.00011002699999999865, 0.00010994400000000071, 0.00010943100000000011, 0.00010927800000000432, 0.00010923599999999867, 0.00010958300000000337, 0.00010944400000000021...</msg>
<status status="PASS" starttime="20201030 11:53:26.810" endtime="20201030 11:53:26.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.827" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:53:26.825" endtime="20201030 11:53:26.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.833" level="INFO">VALUE: [0.00010934800000000217, 0.00011002699999999865, 0.00010994400000000071, 0.00010943100000000011, 0.00010927800000000432, 0.00010923599999999867, 0.00010958300000000337, 0.00010944400000000021, 0.00010952799999999763, 0.00010970800000000003, 0.00010965300000000122, 0.00010966700000000079, 0.00010949999999999849, 0.00010948600000000586, 0.00010951399999999806, 0.0001097769999999984, 0.00010923599999999867, 0.00010934700000000269, 0.00010950000000000543, 0.00010949999999999849, 0.00010968000000000089, 0.0001097219999999996, 0.00010993100000000061, 0.00011011100000000301, 0.00010945900000000619, 0.00010943000000000064, 0.0001097089999999995, 0.00010963899999999471, 0.00010925000000000518, 0.00010944499999999968, 0.00010909700000000244, 0.00010912500000000158, 0.00010912500000000158, 0.00010940300000000097, 0.00010976299999999883, 0.00010993100000000061, 0.00010949999999999849, 0.00010944499999999968, 0.00010965300000000122, 0.00010991600000000157, 0.00010981999999999659, 0.00010984699999999625, 0.00010918000000000039, 0.0001092219999999991, 0.0001093890000000014, 0.00010933299999999618, 0.00010909700000000244, 0.00010991700000000104, 0.00010979099999999797, 0.00010930599999999652]</msg>
<status status="PASS" starttime="20201030 11:53:26.830" endtime="20201030 11:53:26.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.819" endtime="20201030 11:53:26.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:26.847" endtime="20201030 11:53:26.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.841" endtime="20201030 11:53:26.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.838" endtime="20201030 11:53:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.352" endtime="20201030 11:53:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.351" endtime="20201030 11:53:26.872"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.894" endtime="20201030 11:53:26.913"></status>
</kw>
<msg timestamp="20201030 11:53:26.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:26.891" endtime="20201030 11:53:26.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:26.917" endtime="20201030 11:53:26.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.923" endtime="20201030 11:53:26.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.884" endtime="20201030 11:53:26.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.878" endtime="20201030 11:53:26.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.946" endtime="20201030 11:53:27.284"></status>
</kw>
<msg timestamp="20201030 11:53:27.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039083875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:26.942" endtime="20201030 11:53:27.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039083875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039194042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:27.293" endtime="20201030 11:53:27.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.312" endtime="20201030 11:53:27.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.935" endtime="20201030 11:53:27.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.931" endtime="20201030 11:53:27.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:27.328" level="INFO">${RESULT} = [{'diff': 0.00011016700000000129}, {'diff': 0.00011029199999999795}, {'diff': 0.00011026399999999881}, {'diff': 0.00011009700000000344}, {'diff': 0.0001110419999999987}, {'diff': 0.0001102080000000005...</msg>
<status status="PASS" starttime="20201030 11:53:27.320" endtime="20201030 11:53:27.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:27.339" level="INFO">${ACCURACY} = {'diff': [0.00011016700000000129, 0.00011029199999999795, 0.00011026399999999881, 0.00011009700000000344, 0.0001110419999999987, 0.00011020800000000053, 0.00011015300000000172, 0.00011049999999999949,...</msg>
<status status="PASS" starttime="20201030 11:53:27.330" endtime="20201030 11:53:27.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.349" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:53:27.347" endtime="20201030 11:53:27.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.355" level="INFO">VALUE: [0.00011016700000000129, 0.00011029199999999795, 0.00011026399999999881, 0.00011009700000000344, 0.0001110419999999987, 0.00011020800000000053, 0.00011015300000000172, 0.00011049999999999949, 0.00011072199999999366, 0.00011047200000000035, 0.0001105419999999982, 0.00011052800000000557, 0.00011049999999999949, 0.00011038899999999546, 0.00011045900000000025, 0.00011019400000000096, 0.0001107769999999994, 0.00011047200000000035, 0.0001105419999999982, 0.000110596999999997, 0.00011102799999999913, 0.00011051399999999906, 0.00011079099999999897, 0.00011044500000000068, 0.00011029099999999847, 0.00011043100000000111, 0.00011016700000000129, 0.00011016700000000129, 0.00011043000000000164, 0.00011098600000000042, 0.00011076399999999931, 0.00011049999999999949, 0.00011044500000000068, 0.00011040300000000197, 0.00011012500000000258, 0.00011097200000000085, 0.00011098600000000042, 0.0001103890000000024, 0.00011036099999999632, 0.00011076399999999931, 0.00011058300000000437, 0.00011087500000000333, 0.00011111100000000401, 0.00011077799999999888, 0.00011031899999999761, 0.00011088800000000343, 0.00011016700000000129, 0.00011018000000000139, 0.00011040300000000197, 0.00011031899999999761]</msg>
<status status="PASS" starttime="20201030 11:53:27.352" endtime="20201030 11:53:27.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.340" endtime="20201030 11:53:27.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:27.367" endtime="20201030 11:53:27.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.363" endtime="20201030 11:53:27.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.360" endtime="20201030 11:53:27.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.874" endtime="20201030 11:53:27.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.873" endtime="20201030 11:53:27.392"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.414" endtime="20201030 11:53:27.434"></status>
</kw>
<msg timestamp="20201030 11:53:27.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:27.411" endtime="20201030 11:53:27.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:27.437" endtime="20201030 11:53:27.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.443" endtime="20201030 11:53:27.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.404" endtime="20201030 11:53:27.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.398" endtime="20201030 11:53:27.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.466" endtime="20201030 11:53:27.804"></status>
</kw>
<msg timestamp="20201030 11:53:27.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038904306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039015764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:27.463" endtime="20201030 11:53:27.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038904306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039015764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:27.814" endtime="20201030 11:53:27.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.832" endtime="20201030 11:53:27.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.456" endtime="20201030 11:53:27.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.451" endtime="20201030 11:53:27.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:27.849" level="INFO">${RESULT} = [{'diff': 0.00011145800000000178}, {'diff': 0.00011147200000000135}, {'diff': 0.00011181899999999911}, {'diff': 0.00011180499999999954}, {'diff': 0.00011143100000000211}, {'diff': 0.000112097999999997...</msg>
<status status="PASS" starttime="20201030 11:53:27.840" endtime="20201030 11:53:27.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:27.859" level="INFO">${ACCURACY} = {'diff': [0.00011145800000000178, 0.00011147200000000135, 0.00011181899999999911, 0.00011180499999999954, 0.00011143100000000211, 0.00011209799999999798, 0.00011198600000000142, 0.00011151400000000006...</msg>
<status status="PASS" starttime="20201030 11:53:27.851" endtime="20201030 11:53:27.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.870" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:53:27.868" endtime="20201030 11:53:27.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.875" level="INFO">VALUE: [0.00011145800000000178, 0.00011147200000000135, 0.00011181899999999911, 0.00011180499999999954, 0.00011143100000000211, 0.00011209799999999798, 0.00011198600000000142, 0.00011151400000000006, 0.00011134699999999775, 0.00011158299999999843, 0.00011177799999999988, 0.00011116700000000229, 0.00011129199999999895, 0.00011200000000000099, 0.00011158299999999843, 0.00011179099999999997, 0.00011172199999999466, 0.00011206899999999936, 0.00011140199999999656, 0.0001114169999999956, 0.00011166699999999585, 0.00011134699999999775, 0.00011119500000000143, 0.00011208299999999893, 0.00011120800000000153, 0.00011211099999999807, 0.00011116599999999588, 0.00011181899999999911, 0.00011201300000000108, 0.00011127799999999938, 0.00011127799999999938, 0.00011137499999999689, 0.00011129099999999947, 0.00011176400000000031, 0.0001112499999999933, 0.00011201400000000056, 0.00011184700000000519, 0.00011184800000000467, 0.00011181900000000605, 0.00011166600000000332, 0.00011204200000000664, 0.00011152799999999963, 0.0001119299999999962, 0.00011125000000000024, 0.00011119500000000143, 0.00011198600000000142, 0.00011165300000000322, 0.00011126300000000033, 0.00011134700000000469, 0.00011129199999999895]</msg>
<status status="PASS" starttime="20201030 11:53:27.872" endtime="20201030 11:53:27.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.861" endtime="20201030 11:53:27.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:27.887" endtime="20201030 11:53:27.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.883" endtime="20201030 11:53:27.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.881" endtime="20201030 11:53:27.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.394" endtime="20201030 11:53:27.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.393" endtime="20201030 11:53:27.913"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.935" endtime="20201030 11:53:27.955"></status>
</kw>
<msg timestamp="20201030 11:53:27.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:27.932" endtime="20201030 11:53:27.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:27.958" endtime="20201030 11:53:27.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.964" endtime="20201030 11:53:27.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.925" endtime="20201030 11:53:27.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.919" endtime="20201030 11:53:27.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.987" endtime="20201030 11:53:28.327"></status>
</kw>
<msg timestamp="20201030 11:53:28.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039240667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:27.984" endtime="20201030 11:53:28.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039240667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:28.337" endtime="20201030 11:53:28.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.355" endtime="20201030 11:53:28.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.977" endtime="20201030 11:53:28.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.972" endtime="20201030 11:53:28.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:28.371" level="INFO">${RESULT} = [{'diff': 0.00011280600000000002}, {'diff': 0.00011270800000000303}, {'diff': 0.00011277699999999447}, {'diff': 0.00011311099999999907}, {'diff': 0.00011229199999999995}, {'diff': 0.000112153000000003...</msg>
<status status="PASS" starttime="20201030 11:53:28.363" endtime="20201030 11:53:28.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:28.380" level="INFO">${ACCURACY} = {'diff': [0.00011280600000000002, 0.00011270800000000303, 0.00011277699999999447, 0.00011311099999999907, 0.00011229199999999995, 0.00011215300000000372, 0.00011272300000000207, 0.00011216699999999635...</msg>
<status status="PASS" starttime="20201030 11:53:28.373" endtime="20201030 11:53:28.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.391" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:53:28.389" endtime="20201030 11:53:28.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.396" level="INFO">VALUE: [0.00011280600000000002, 0.00011270800000000303, 0.00011277699999999447, 0.00011311099999999907, 0.00011229199999999995, 0.00011215300000000372, 0.00011272300000000207, 0.00011216699999999635, 0.00011295800000000328, 0.0001130550000000008, 0.00011213899999999721, 0.0001127770000000014, 0.00011272299999999513, 0.00011231999999999909, 0.00011281999999999959, 0.00011219400000000296, 0.00011284799999999873, 0.00011215299999999678, 0.00011238899999999746, 0.0001128890000000049, 0.00011283399999999916, 0.00011252800000000063, 0.00011247200000000235, 0.0001122770000000009, 0.00011231999999999909, 0.00011252800000000063, 0.00011280600000000002, 0.00011273600000000217, 0.00011287500000000533, 0.00011302800000000113, 0.00011229100000000047, 0.0001125550000000003, 0.00011218000000000339, 0.00011223600000000167, 0.00011300000000000199, 0.00011248600000000192, 0.00011248600000000192, 0.00011231899999999961, 0.0001122220000000021, 0.000112596999999999, 0.00011268000000000389, 0.00011213899999999721, 0.00011277799999999394, 0.000112209000000002, 0.00011297200000000285, 0.00011276400000000131, 0.00011301399999999462, 0.00011295800000000328, 0.00011234699999999875, 0.00011225000000000124]</msg>
<status status="PASS" starttime="20201030 11:53:28.393" endtime="20201030 11:53:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.382" endtime="20201030 11:53:28.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:28.408" endtime="20201030 11:53:28.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.404" endtime="20201030 11:53:28.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.402" endtime="20201030 11:53:28.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.915" endtime="20201030 11:53:28.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.914" endtime="20201030 11:53:28.433"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.457" endtime="20201030 11:53:28.477"></status>
</kw>
<msg timestamp="20201030 11:53:28.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.453" endtime="20201030 11:53:28.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.481" endtime="20201030 11:53:28.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.487" endtime="20201030 11:53:28.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.445" endtime="20201030 11:53:28.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.440" endtime="20201030 11:53:28.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.510" endtime="20201030 11:53:28.848"></status>
</kw>
<msg timestamp="20201030 11:53:28.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040953653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041067056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:28.506" endtime="20201030 11:53:28.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040953653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041067056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:28.857" endtime="20201030 11:53:28.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.876" endtime="20201030 11:53:28.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.499" endtime="20201030 11:53:28.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.495" endtime="20201030 11:53:28.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:28.892" level="INFO">${RESULT} = [{'diff': 0.00011340299999999803}, {'diff': 0.00011327800000000138}, {'diff': 0.00011366699999999785}, {'diff': 0.00011397299999999638}, {'diff': 0.00011358399999999991}, {'diff': 0.000113263999999994...</msg>
<status status="PASS" starttime="20201030 11:53:28.884" endtime="20201030 11:53:28.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:28.901" level="INFO">${ACCURACY} = {'diff': [0.00011340299999999803, 0.00011327800000000138, 0.00011366699999999785, 0.00011397299999999638, 0.00011358399999999991, 0.00011326399999999487, 0.0001135420000000012, 0.00011394400000000471,...</msg>
<status status="PASS" starttime="20201030 11:53:28.894" endtime="20201030 11:53:28.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.912" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:53:28.910" endtime="20201030 11:53:28.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.917" level="INFO">VALUE: [0.00011340299999999803, 0.00011327800000000138, 0.00011366699999999785, 0.00011397299999999638, 0.00011358399999999991, 0.00011326399999999487, 0.0001135420000000012, 0.00011394400000000471, 0.00011351400000000206, 0.0001135420000000012, 0.00011358300000000043, 0.00011400000000000299, 0.00011348600000000292, 0.00011323600000000267, 0.0001138749999999994, 0.00011313799999999874, 0.0001135420000000012, 0.00011393100000000461, 0.00011325000000000224, 0.0001133749999999989, 0.00011362499999999914, 0.00011400000000000299, 0.00011368099999999742, 0.00011338899999999846, 0.0001140420000000017, 0.00011383400000000016, 0.00011398599999999648, 0.00011379200000000145, 0.00011330600000000052, 0.00011345799999999684, 0.00011333300000000018, 0.00011394399999999777, 0.00011311099999999907, 0.00011325000000000224, 0.00011316700000000429, 0.00011323599999999573, 0.00011316699999999735, 0.00011408300000000093, 0.00011329200000000095, 0.0001138749999999994, 0.00011332000000000009, 0.00011382000000000059, 0.00011345799999999684, 0.00011408300000000093, 0.00011320899999999606, 0.00011402800000000213, 0.00011386100000000676, 0.00011336099999999932, 0.00011347199999999641, 0.00011325000000000224]</msg>
<status status="PASS" starttime="20201030 11:53:28.914" endtime="20201030 11:53:28.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.903" endtime="20201030 11:53:28.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:28.934" endtime="20201030 11:53:28.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.925" endtime="20201030 11:53:28.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.923" endtime="20201030 11:53:28.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.436" endtime="20201030 11:53:28.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.434" endtime="20201030 11:53:28.959"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.982" endtime="20201030 11:53:29.002"></status>
</kw>
<msg timestamp="20201030 11:53:29.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.978" endtime="20201030 11:53:29.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:29.005" endtime="20201030 11:53:29.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.011" endtime="20201030 11:53:29.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.971" endtime="20201030 11:53:29.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.966" endtime="20201030 11:53:29.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.034" endtime="20201030 11:53:29.371"></status>
</kw>
<msg timestamp="20201030 11:53:29.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039137875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039252347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:29.031" endtime="20201030 11:53:29.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039137875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039252347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:29.380" endtime="20201030 11:53:29.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.399" endtime="20201030 11:53:29.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.024" endtime="20201030 11:53:29.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.019" endtime="20201030 11:53:29.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:29.415" level="INFO">${RESULT} = [{'diff': 0.00011447199999999741}, {'diff': 0.00011491599999999963}, {'diff': 0.00011462500000000014}, {'diff': 0.00011467999999999895}, {'diff': 0.00011479100000000297}, {'diff': 0.000114471999999997...</msg>
<status status="PASS" starttime="20201030 11:53:29.407" endtime="20201030 11:53:29.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:29.425" level="INFO">${ACCURACY} = {'diff': [0.00011447199999999741, 0.00011491599999999963, 0.00011462500000000014, 0.00011467999999999895, 0.00011479100000000297, 0.00011447199999999741, 0.00011438899999999946, 0.0001143890000000064,...</msg>
<status status="PASS" starttime="20201030 11:53:29.417" endtime="20201030 11:53:29.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.436" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:53:29.434" endtime="20201030 11:53:29.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.442" level="INFO">VALUE: [0.00011447199999999741, 0.00011491599999999963, 0.00011462500000000014, 0.00011467999999999895, 0.00011479100000000297, 0.00011447199999999741, 0.00011438899999999946, 0.0001143890000000064, 0.00011495799999999834, 0.00011432000000000109, 0.00011494399999999877, 0.00011475000000000374, 0.00011416699999999835, 0.00011461100000000057, 0.00011422199999999716, 0.00011488899999999996, 0.00011480500000000254, 0.00011483400000000116, 0.00011452799999999569, 0.0001148750000000004, 0.00011441599999999913, 0.00011458300000000143, 0.00011493100000000561, 0.00011461100000000057, 0.00011490299999999953, 0.00011458300000000143, 0.00011445799999999784, 0.00011476400000000331, 0.00011509800000000098, 0.00011447199999999741, 0.00011497199999999791, 0.0001149169999999991, 0.00011465199999999981, 0.00011505599999999533, 0.00011461100000000057, 0.0001147090000000045, 0.00011486100000000082, 0.000114597000000001, 0.0001145420000000022, 0.00011430599999999458, 0.00011476399999999637, 0.00011470800000000503, 0.00011434699999999381, 0.00011472199999999766, 0.00011433299999999424, 0.00011458300000000143, 0.00011484700000000125, 0.00011429200000000195, 0.00011461100000000057, 0.00011497300000000432]</msg>
<status status="PASS" starttime="20201030 11:53:29.439" endtime="20201030 11:53:29.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.427" endtime="20201030 11:53:29.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:29.458" endtime="20201030 11:53:29.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.454" endtime="20201030 11:53:29.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.451" endtime="20201030 11:53:29.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.962" endtime="20201030 11:53:29.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.960" endtime="20201030 11:53:29.483"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.505" endtime="20201030 11:53:29.525"></status>
</kw>
<msg timestamp="20201030 11:53:29.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:29.502" endtime="20201030 11:53:29.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:29.528" endtime="20201030 11:53:29.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.535" endtime="20201030 11:53:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.495" endtime="20201030 11:53:29.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.489" endtime="20201030 11:53:29.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.557" endtime="20201030 11:53:29.896"></status>
</kw>
<msg timestamp="20201030 11:53:29.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039172167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:29.554" endtime="20201030 11:53:29.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039172167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:29.905" endtime="20201030 11:53:29.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:29.923" endtime="20201030 11:53:29.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.547" endtime="20201030 11:53:29.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.543" endtime="20201030 11:53:29.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:29.939" level="INFO">${RESULT} = [{'diff': 0.00011601399999999762}, {'diff': 0.00011547199999999841}, {'diff': 0.00011570799999999909}, {'diff': 0.0001152499999999973}, {'diff': 0.00011576399999999737}, {'diff': 0.0001160419999999967...</msg>
<status status="PASS" starttime="20201030 11:53:29.931" endtime="20201030 11:53:29.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:29.950" level="INFO">${ACCURACY} = {'diff': [0.00011601399999999762, 0.00011547199999999841, 0.00011570799999999909, 0.0001152499999999973, 0.00011576399999999737, 0.00011604199999999676, 0.00011552799999999669, 0.00011611100000000207,...</msg>
<status status="PASS" starttime="20201030 11:53:29.941" endtime="20201030 11:53:29.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.961" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:53:29.959" endtime="20201030 11:53:29.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:29.966" level="INFO">VALUE: [0.00011601399999999762, 0.00011547199999999841, 0.00011570799999999909, 0.0001152499999999973, 0.00011576399999999737, 0.00011604199999999676, 0.00011552799999999669, 0.00011611100000000207, 0.0001154299999999997, 0.00011562500000000114, 0.00011608300000000293, 0.00011523599999999773, 0.00011522199999999816, 0.00011580599999999608, 0.00011532000000000209, 0.00011519399999999902, 0.00011563900000000071, 0.00011590300000000053, 0.0001159300000000002, 0.00011568099999999942, 0.00011584700000000225, 0.00011512500000000064, 0.00011579100000000397, 0.00011598599999999848, 0.00011538900000000046, 0.00011536100000000132, 0.00011551400000000406, 0.0001160420000000037, 0.0001159300000000002, 0.0001154299999999997, 0.00011558400000000191, 0.00011584800000000173, 0.00011601399999999762, 0.00011599999999999805, 0.00011559800000000148, 0.00011576400000000431, 0.00011577799999999694, 0.0001154299999999997, 0.00011543099999999917, 0.00011580599999999608, 0.00011548699999999745, 0.0001154169999999996, 0.00011551399999999712, 0.0001158750000000014, 0.0001152220000000051, 0.00011565300000000028, 0.00011577799999999694, 0.00011580600000000302, 0.00011547199999999841, 0.00011567999999999995]</msg>
<status status="PASS" starttime="20201030 11:53:29.963" endtime="20201030 11:53:29.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.952" endtime="20201030 11:53:29.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:29.978" endtime="20201030 11:53:30.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.974" endtime="20201030 11:53:30.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.972" endtime="20201030 11:53:30.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.485" endtime="20201030 11:53:30.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:29.484" endtime="20201030 11:53:30.003"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.026" endtime="20201030 11:53:30.045"></status>
</kw>
<msg timestamp="20201030 11:53:30.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:30.022" endtime="20201030 11:53:30.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:30.049" endtime="20201030 11:53:30.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.055" endtime="20201030 11:53:30.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.015" endtime="20201030 11:53:30.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.010" endtime="20201030 11:53:30.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.078" endtime="20201030 11:53:30.422"></status>
</kw>
<msg timestamp="20201030 11:53:30.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039387444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:30.075" endtime="20201030 11:53:30.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039387444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:30.432" endtime="20201030 11:53:30.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.450" endtime="20201030 11:53:30.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.068" endtime="20201030 11:53:30.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.063" endtime="20201030 11:53:30.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:30.467" level="INFO">${RESULT} = [{'diff': 0.00011651299999999865}, {'diff': 0.00011638900000000146}, {'diff': 0.00011627799999999744}, {'diff': 0.00011681999999999665}, {'diff': 0.00011669400000000052}, {'diff': 0.000116846999999996...</msg>
<status status="PASS" starttime="20201030 11:53:30.458" endtime="20201030 11:53:30.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:30.476" level="INFO">${ACCURACY} = {'diff': [0.00011651299999999865, 0.00011638900000000146, 0.00011627799999999744, 0.00011681999999999665, 0.00011669400000000052, 0.00011684699999999631, 0.00011636099999999538, 0.00011659699999999606...</msg>
<status status="PASS" starttime="20201030 11:53:30.469" endtime="20201030 11:53:30.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.487" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:53:30.484" endtime="20201030 11:53:30.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.492" level="INFO">VALUE: [0.00011651299999999865, 0.00011638900000000146, 0.00011627799999999744, 0.00011681999999999665, 0.00011669400000000052, 0.00011684699999999631, 0.00011636099999999538, 0.00011659699999999606, 0.00011676399999999837, 0.00011643100000000017, 0.00011648599999999898, 0.00011638800000000199, 0.00011615300000000078, 0.00011668000000000095, 0.00011702699999999872, 0.00011695800000000034, 0.00011647199999999941, 0.00011638900000000146, 0.00011663899999999477, 0.00011661100000000257, 0.0001162499999999983, 0.00011704100000000522, 0.00011620799999999959, 0.00011616700000000035, 0.00011677800000000488, 0.00011647199999999941, 0.00011652800000000463, 0.00011626399999999787, 0.00011655600000000377, 0.00011623599999999873, 0.00011711099999999613, 0.0001162499999999983, 0.00011686100000000282, 0.00011654199999999726, 0.0001163049999999971, 0.00011637499999999495, 0.0001169170000000011, 0.00011670899999999956, 0.0001163049999999971, 0.00011623599999999873, 0.00011644400000000027, 0.00011704099999999829, 0.00011672199999999966, 0.00011655499999999736, 0.00011649999999999855, 0.00011686100000000282, 0.0001164300000000007, 0.00011616700000000035, 0.00011672199999999966, 0.00011693100000000067]</msg>
<status status="PASS" starttime="20201030 11:53:30.489" endtime="20201030 11:53:30.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.477" endtime="20201030 11:53:30.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:30.504" endtime="20201030 11:53:30.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.500" endtime="20201030 11:53:30.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.497" endtime="20201030 11:53:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.006" endtime="20201030 11:53:30.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.004" endtime="20201030 11:53:30.529"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.552" endtime="20201030 11:53:30.573"></status>
</kw>
<msg timestamp="20201030 11:53:30.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:30.548" endtime="20201030 11:53:30.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:30.576" endtime="20201030 11:53:30.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.583" endtime="20201030 11:53:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.541" endtime="20201030 11:53:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.536" endtime="20201030 11:53:30.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.615" endtime="20201030 11:53:30.961"></status>
</kw>
<msg timestamp="20201030 11:53:30.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040928653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041046236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:30.611" endtime="20201030 11:53:30.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:30.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040928653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041046236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:30.970" endtime="20201030 11:53:30.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:30.988" endtime="20201030 11:53:30.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.596" endtime="20201030 11:53:30.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.591" endtime="20201030 11:53:30.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:31.006" level="INFO">${RESULT} = [{'diff': 0.0001175829999999975}, {'diff': 0.00011800000000000005}, {'diff': 0.00011741699999999466}, {'diff': 0.000118082999999998}, {'diff': 0.00011726399999999887}, {'diff': 0.0001172369999999992},...</msg>
<status status="PASS" starttime="20201030 11:53:30.997" endtime="20201030 11:53:31.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:31.015" level="INFO">${ACCURACY} = {'diff': [0.0001175829999999975, 0.00011800000000000005, 0.00011741699999999466, 0.000118082999999998, 0.00011726399999999887, 0.0001172369999999992, 0.00011726399999999887, 0.0001178049999999986, 0.0...</msg>
<status status="PASS" starttime="20201030 11:53:31.008" endtime="20201030 11:53:31.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.025" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:53:31.023" endtime="20201030 11:53:31.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.031" level="INFO">VALUE: [0.0001175829999999975, 0.00011800000000000005, 0.00011741699999999466, 0.000118082999999998, 0.00011726399999999887, 0.0001172369999999992, 0.00011726399999999887, 0.0001178049999999986, 0.00011715200000000231, 0.00011718100000000092, 0.00011781999999999765, 0.0001172629999999994, 0.00011731999999999715, 0.00011722200000000016, 0.00011790300000000253, 0.00011758300000000443, 0.00011733300000000418, 0.00011715299999999484, 0.00011802799999999919, 0.00011773600000000023, 0.00011720800000000059, 0.00011786100000000382, 0.00011712500000000264, 0.00011815300000000278, 0.00011742999999999476, 0.00011722200000000016, 0.00011770800000000109, 0.00011722299999999963, 0.00011722200000000016, 0.00011732000000000409, 0.00011770900000000056, 0.00011731999999999715, 0.00011713900000000221, 0.00011745900000000031, 0.00011730599999999758, 0.00011811100000000407, 0.00011784699999999732, 0.00011731899999999768, 0.00011765199999999587, 0.00011720800000000059, 0.00011772200000000066, 0.00011740300000000203, 0.00011797200000000091, 0.00011747299999999988, 0.00011744500000000074, 0.0001177499999999998, 0.00011727799999999844, 0.00011815199999999637, 0.00011744500000000074, 0.00011807000000000484]</msg>
<status status="PASS" starttime="20201030 11:53:31.028" endtime="20201030 11:53:31.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.016" endtime="20201030 11:53:31.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:31.045" endtime="20201030 11:53:31.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.039" endtime="20201030 11:53:31.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.037" endtime="20201030 11:53:31.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.531" endtime="20201030 11:53:31.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:30.530" endtime="20201030 11:53:31.070"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.093" endtime="20201030 11:53:31.113"></status>
</kw>
<msg timestamp="20201030 11:53:31.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.089" endtime="20201030 11:53:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.116" endtime="20201030 11:53:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.122" endtime="20201030 11:53:31.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.082" endtime="20201030 11:53:31.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.076" endtime="20201030 11:53:31.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.146" endtime="20201030 11:53:31.488"></status>
</kw>
<msg timestamp="20201030 11:53:31.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039758264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:31.142" endtime="20201030 11:53:31.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039758264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:31.497" endtime="20201030 11:53:31.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.515" endtime="20201030 11:53:31.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.135" endtime="20201030 11:53:31.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.130" endtime="20201030 11:53:31.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:31.533" level="INFO">${RESULT} = [{'diff': 0.0001181950000000015}, {'diff': 0.00011883299999999875}, {'diff': 0.00011838899999999652}, {'diff': 0.00011815300000000278}, {'diff': 0.00011883299999999875}, {'diff': 0.0001182220000000011...</msg>
<status status="PASS" starttime="20201030 11:53:31.524" endtime="20201030 11:53:31.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:31.543" level="INFO">${ACCURACY} = {'diff': [0.0001181950000000015, 0.00011883299999999875, 0.00011838899999999652, 0.00011815300000000278, 0.00011883299999999875, 0.00011822200000000116, 0.00011905499999999986, 0.00011887499999999745,...</msg>
<status status="PASS" starttime="20201030 11:53:31.535" endtime="20201030 11:53:31.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.554" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:53:31.552" endtime="20201030 11:53:31.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.559" level="INFO">VALUE: [0.0001181950000000015, 0.00011883299999999875, 0.00011838899999999652, 0.00011815300000000278, 0.00011883299999999875, 0.00011822200000000116, 0.00011905499999999986, 0.00011887499999999745, 0.00011895800000000234, 0.0001185420000000062, 0.0001191249999999977, 0.0001185829999999985, 0.00011836100000000432, 0.00011892999999999626, 0.00011833299999999825, 0.000119082999999999, 0.00011900000000000105, 0.00011881899999999918, 0.00011859799999999754, 0.00011831999999999815, 0.0001189029999999966, 0.00011872300000000113, 0.0001181249999999967, 0.00011832000000000509, 0.00011906900000000636, 0.00011865300000000328, 0.0001183750000000039, 0.000118082999999998, 0.00011841699999999566, 0.00011823600000000073, 0.00011823600000000073, 0.00011844400000000227, 0.00011820800000000159, 0.00011894400000000277, 0.00011872200000000166, 0.00011902800000000019, 0.00011824999999999336, 0.0001189029999999966, 0.00011852700000000022, 0.00011836099999999738, 0.0001190699999999989, 0.00011869499999999505, 0.00011836100000000432, 0.00011865200000000381, 0.00011870799999999515, 0.00011886100000000482, 0.00011863900000000371, 0.00011906899999999943, 0.00011876400000000037, 0.00011831899999999868]</msg>
<status status="PASS" starttime="20201030 11:53:31.556" endtime="20201030 11:53:31.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.545" endtime="20201030 11:53:31.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:31.572" endtime="20201030 11:53:31.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.567" endtime="20201030 11:53:31.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.565" endtime="20201030 11:53:31.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.072" endtime="20201030 11:53:31.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.071" endtime="20201030 11:53:31.597"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.619" endtime="20201030 11:53:31.640"></status>
</kw>
<msg timestamp="20201030 11:53:31.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.616" endtime="20201030 11:53:31.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.643" endtime="20201030 11:53:31.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.650" endtime="20201030 11:53:31.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.609" endtime="20201030 11:53:31.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.603" endtime="20201030 11:53:31.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.674" endtime="20201030 11:53:32.015"></status>
</kw>
<msg timestamp="20201030 11:53:32.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039850361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:31.671" endtime="20201030 11:53:32.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039850361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:32.024" endtime="20201030 11:53:32.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.043" endtime="20201030 11:53:32.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.664" endtime="20201030 11:53:32.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.659" endtime="20201030 11:53:32.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:32.060" level="INFO">${RESULT} = [{'diff': 0.00011998600000000248}, {'diff': 0.00011926400000000087}, {'diff': 0.00011952799999999375}, {'diff': 0.0001196249999999982}, {'diff': 0.00011950000000000155}, {'diff': 0.0001192369999999942...</msg>
<status status="PASS" starttime="20201030 11:53:32.051" endtime="20201030 11:53:32.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:32.071" level="INFO">${ACCURACY} = {'diff': [0.00011998600000000248, 0.00011926400000000087, 0.00011952799999999375, 0.0001196249999999982, 0.00011950000000000155, 0.00011923699999999426, 0.00011979200000000051, 0.0001197500000000018, ...</msg>
<status status="PASS" starttime="20201030 11:53:32.062" endtime="20201030 11:53:32.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.082" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:53:32.079" endtime="20201030 11:53:32.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.087" level="INFO">VALUE: [0.00011998600000000248, 0.00011926400000000087, 0.00011952799999999375, 0.0001196249999999982, 0.00011950000000000155, 0.00011923699999999426, 0.00011979200000000051, 0.0001197500000000018, 0.0001194300000000037, 0.00011929200000000001, 0.00011941699999999666, 0.00012002700000000172, 0.00011930599999999958, 0.00011920900000000206, 0.00011972200000000266, 0.00011965299999999734, 0.00011934699999999882, 0.00011977800000000094, 0.00012002700000000172, 0.00012009699999999957, 0.00011927800000000044, 0.00011950000000000155, 0.00011973599999999529, 0.00012015300000000478, 0.00011987499999999846, 0.00011993099999999673, 0.00011913900000000421, 0.00012011099999999914, 0.00012009699999999957, 0.00011919399999999608, 0.00011950000000000155, 0.00012001400000000162, 0.00011988900000000496, 0.00011981900000000018, 0.00011970800000000309, 0.00011934699999999882, 0.00011998599999999554, 0.00011936099999999839, 0.00011976399999999443, 0.0001198750000000054, 0.00011917999999999651, 0.0001192779999999935, 0.00011998599999999554, 0.00012005500000000086, 0.00011941699999999666, 0.00012001400000000162, 0.00011966699999999691, 0.00011948600000000198, 0.00011986099999999889, 0.00011972200000000266]</msg>
<status status="PASS" starttime="20201030 11:53:32.084" endtime="20201030 11:53:32.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.072" endtime="20201030 11:53:32.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:32.099" endtime="20201030 11:53:32.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.095" endtime="20201030 11:53:32.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.093" endtime="20201030 11:53:32.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.599" endtime="20201030 11:53:32.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.598" endtime="20201030 11:53:32.125"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.147" endtime="20201030 11:53:32.167"></status>
</kw>
<msg timestamp="20201030 11:53:32.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:32.144" endtime="20201030 11:53:32.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:32.171" endtime="20201030 11:53:32.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.177" endtime="20201030 11:53:32.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.137" endtime="20201030 11:53:32.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.131" endtime="20201030 11:53:32.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.201" endtime="20201030 11:53:32.546"></status>
</kw>
<msg timestamp="20201030 11:53:32.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039767736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:32.197" endtime="20201030 11:53:32.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039767736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:32.555" endtime="20201030 11:53:32.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.573" endtime="20201030 11:53:32.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.190" endtime="20201030 11:53:32.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.185" endtime="20201030 11:53:32.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:32.590" level="INFO">${RESULT} = [{'diff': 0.00012070800000000409}, {'diff': 0.00012033300000000025}, {'diff': 0.00012006900000000043}, {'diff': 0.0001208329999999938}, {'diff': 0.00012052700000000222}, {'diff': 0.0001202230000000026...</msg>
<status status="PASS" starttime="20201030 11:53:32.582" endtime="20201030 11:53:32.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:32.600" level="INFO">${ACCURACY} = {'diff': [0.00012070800000000409, 0.00012033300000000025, 0.00012006900000000043, 0.0001208329999999938, 0.00012052700000000222, 0.00012022300000000263, 0.00012017999999999751, 0.00012087499999999946,...</msg>
<status status="PASS" starttime="20201030 11:53:32.593" endtime="20201030 11:53:32.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.610" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:53:32.608" endtime="20201030 11:53:32.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.616" level="INFO">VALUE: [0.00012070800000000409, 0.00012033300000000025, 0.00012006900000000043, 0.0001208329999999938, 0.00012052700000000222, 0.00012022300000000263, 0.00012017999999999751, 0.00012087499999999946, 0.0001204449999999968, 0.00012037499999999896, 0.00012102799999999525, 0.00012013900000000521, 0.00012029200000000101, 0.00012036099999999939, 0.00012022199999999622, 0.00012106899999999449, 0.00012058399999999997, 0.00012084700000000032, 0.00012077800000000194, 0.00012027800000000144, 0.00012013899999999827, 0.00012097200000000391, 0.00012038900000000546, 0.000120777999999995, 0.00012017999999999751, 0.00012091599999999869, 0.00012037499999999896, 0.00012104199999999482, 0.00012050000000000255, 0.00012115299999999884, 0.00012065299999999834, 0.0001209579999999974, 0.00012109700000000057, 0.00012063899999999877, 0.00012041699999999766, 0.0001209449999999973, 0.0001201249999999987, 0.00012058399999999997, 0.00012032000000000015, 0.00012056900000000093, 0.00012015199999999837, 0.00012029100000000154, 0.00012088899999999903, 0.00012018000000000445, 0.0001205700000000004, 0.00012045800000000384, 0.00012097199999999697, 0.00012094399999999783, 0.00012020900000000306, 0.00012040199999999862]</msg>
<status status="PASS" starttime="20201030 11:53:32.613" endtime="20201030 11:53:32.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.601" endtime="20201030 11:53:32.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:32.628" endtime="20201030 11:53:32.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.624" endtime="20201030 11:53:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.621" endtime="20201030 11:53:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.127" endtime="20201030 11:53:32.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.126" endtime="20201030 11:53:32.653"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.677" endtime="20201030 11:53:32.699"></status>
</kw>
<msg timestamp="20201030 11:53:32.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:32.674" endtime="20201030 11:53:32.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:32.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:32.703" endtime="20201030 11:53:32.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.709" endtime="20201030 11:53:32.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.666" endtime="20201030 11:53:32.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.660" endtime="20201030 11:53:32.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:32.732" endtime="20201030 11:53:33.073"></status>
</kw>
<msg timestamp="20201030 11:53:33.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042331097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042452958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:32.729" endtime="20201030 11:53:33.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042331097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042452958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:33.082" endtime="20201030 11:53:33.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.101" endtime="20201030 11:53:33.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.722" endtime="20201030 11:53:33.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.717" endtime="20201030 11:53:33.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:33.118" level="INFO">${RESULT} = [{'diff': 0.00012186100000000089}, {'diff': 0.00012124999999999636}, {'diff': 0.00012118099999999798}, {'diff': 0.00012141699999999866}, {'diff': 0.00012181900000000218}, {'diff': 0.000121236000000003...</msg>
<status status="PASS" starttime="20201030 11:53:33.109" endtime="20201030 11:53:33.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:33.127" level="INFO">${ACCURACY} = {'diff': [0.00012186100000000089, 0.00012124999999999636, 0.00012118099999999798, 0.00012141699999999866, 0.00012181900000000218, 0.00012123600000000373, 0.00012184700000000132, 0.0001215700000000014,...</msg>
<status status="PASS" starttime="20201030 11:53:33.120" endtime="20201030 11:53:33.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.138" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:53:33.135" endtime="20201030 11:53:33.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.143" level="INFO">VALUE: [0.00012186100000000089, 0.00012124999999999636, 0.00012118099999999798, 0.00012141699999999866, 0.00012181900000000218, 0.00012123600000000373, 0.00012184700000000132, 0.0001215700000000014, 0.0001218050000000026, 0.0001216250000000002, 0.0001214170000000056, 0.00012187500000000046, 0.0001219449999999983, 0.00012167999999999901, 0.00012204100000000329, 0.00012193099999999873, 0.00012194500000000524, 0.00012165299999999934, 0.00012147199999999747, 0.00012199999999999711, 0.00012176399999999643, 0.00012145899999999737, 0.00012172200000000466, 0.00012166599999999944, 0.00012159800000000054, 0.00012147199999999747, 0.00012202800000000319, 0.00012115300000000578, 0.00012163899999999978, 0.00012148599999999704, 0.00012193099999999873, 0.00012209800000000104, 0.00012120799999999765, 0.00012161100000000064, 0.00012154200000000226, 0.00012165300000000628, 0.0001214170000000056, 0.00012198600000000448, 0.00012126400000000287, 0.00012144500000000474, 0.00012165299999999934, 0.00012137499999999996, 0.00012130600000000158, 0.00012156999999999446, 0.00012188900000000003, 0.00012165299999999934, 0.00012168099999999848, 0.00012150000000000355, 0.000121777999999996, 0.0001216250000000002]</msg>
<status status="PASS" starttime="20201030 11:53:33.140" endtime="20201030 11:53:33.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.129" endtime="20201030 11:53:33.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:33.157" endtime="20201030 11:53:33.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.151" endtime="20201030 11:53:33.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.149" endtime="20201030 11:53:33.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.656" endtime="20201030 11:53:33.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:32.654" endtime="20201030 11:53:33.183"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.205" endtime="20201030 11:53:33.226"></status>
</kw>
<msg timestamp="20201030 11:53:33.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:33.202" endtime="20201030 11:53:33.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:33.229" endtime="20201030 11:53:33.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.235" endtime="20201030 11:53:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.195" endtime="20201030 11:53:33.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.189" endtime="20201030 11:53:33.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.259" endtime="20201030 11:53:33.601"></status>
</kw>
<msg timestamp="20201030 11:53:33.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039638528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:33.255" endtime="20201030 11:53:33.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039638528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039761444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:33.610" endtime="20201030 11:53:33.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.628" endtime="20201030 11:53:33.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.248" endtime="20201030 11:53:33.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.244" endtime="20201030 11:53:33.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:33.645" level="INFO">${RESULT} = [{'diff': 0.0001229160000000007}, {'diff': 0.00012233300000000225}, {'diff': 0.00012238900000000053}, {'diff': 0.00012254199999999632}, {'diff': 0.0001227229999999982}, {'diff': 0.00012229100000000354...</msg>
<status status="PASS" starttime="20201030 11:53:33.637" endtime="20201030 11:53:33.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:33.655" level="INFO">${ACCURACY} = {'diff': [0.0001229160000000007, 0.00012233300000000225, 0.00012238900000000053, 0.00012254199999999632, 0.0001227229999999982, 0.00012229100000000354, 0.00012268, 0.00012290199999999418, 0.0001223200...</msg>
<status status="PASS" starttime="20201030 11:53:33.647" endtime="20201030 11:53:33.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.666" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:53:33.664" endtime="20201030 11:53:33.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.672" level="INFO">VALUE: [0.0001229160000000007, 0.00012233300000000225, 0.00012238900000000053, 0.00012254199999999632, 0.0001227229999999982, 0.00012229100000000354, 0.00012268, 0.00012290199999999418, 0.00012232000000000215, 0.00012305499999999692, 0.0001222359999999978, 0.00012252799999999675, 0.00012234699999999488, 0.00012213899999999334, 0.00012300000000000505, 0.00012241699999999966, 0.00012237499999999402, 0.000122777999999997, 0.00012219399999999908, 0.0001225559999999959, 0.00012229199999999607, 0.0001222779999999965, 0.0001229449999999993, 0.00012238900000000053, 0.00012272200000000566, 0.00012304200000000376, 0.00012243100000000617, 0.00012215299999999985, 0.0001226250000000012, 0.0001226250000000012, 0.00012308399999999553, 0.00012266699999999991, 0.00012287500000000146, 0.00012272199999999872, 0.00012251399999999718, 0.00012226399999999693, 0.0001226109999999947, 0.00012234700000000182, 0.00012302799999999725, 0.0001229999999999981, 0.0001227500000000048, 0.00012254099999999685, 0.00012286099999999495, 0.00012247199999999847, 0.00012254099999999685, 0.00012269499999999905, 0.00012254200000000326, 0.00012288900000000103, 0.0001224579999999989, 0.0001224579999999989]</msg>
<status status="PASS" starttime="20201030 11:53:33.669" endtime="20201030 11:53:33.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.657" endtime="20201030 11:53:33.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:33.684" endtime="20201030 11:53:33.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.680" endtime="20201030 11:53:33.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.677" endtime="20201030 11:53:33.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.185" endtime="20201030 11:53:33.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.184" endtime="20201030 11:53:33.710"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.734" endtime="20201030 11:53:33.754"></status>
</kw>
<msg timestamp="20201030 11:53:33.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:33.730" endtime="20201030 11:53:33.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:33.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:33.757" endtime="20201030 11:53:33.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.764" endtime="20201030 11:53:33.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.723" endtime="20201030 11:53:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.717" endtime="20201030 11:53:33.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:33.787" endtime="20201030 11:53:34.137"></status>
</kw>
<msg timestamp="20201030 11:53:34.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041192819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:33.784" endtime="20201030 11:53:34.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041192819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:34.147" endtime="20201030 11:53:34.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.166" endtime="20201030 11:53:34.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.776" endtime="20201030 11:53:34.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.772" endtime="20201030 11:53:34.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:34.183" level="INFO">${RESULT} = [{'diff': 0.00012388900000000203}, {'diff': 0.00012336100000000239}, {'diff': 0.000123680000000001}, {'diff': 0.00012343100000000023}, {'diff': 0.0001237920000000045}, {'diff': 0.00012343000000000076}...</msg>
<status status="PASS" starttime="20201030 11:53:34.174" endtime="20201030 11:53:34.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:34.198" level="INFO">${ACCURACY} = {'diff': [0.00012388900000000203, 0.00012336100000000239, 0.000123680000000001, 0.00012343100000000023, 0.0001237920000000045, 0.00012343000000000076, 0.00012391700000000117, 0.0001239999999999991, 0....</msg>
<status status="PASS" starttime="20201030 11:53:34.185" endtime="20201030 11:53:34.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.209" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:53:34.207" endtime="20201030 11:53:34.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.215" level="INFO">VALUE: [0.00012388900000000203, 0.00012336100000000239, 0.000123680000000001, 0.00012343100000000023, 0.0001237920000000045, 0.00012343000000000076, 0.00012391700000000117, 0.0001239999999999991, 0.00012370899999999962, 0.00012322199999999922, 0.00012345899999999937, 0.00012348599999999904, 0.00012334700000000282, 0.00012354199999999732, 0.00012401399999999868, 0.00012398599999999954, 0.0001239580000000004, 0.0001232779999999975, 0.0001237359999999993, 0.00012355499999999742, 0.00012329199999999707, 0.00012338900000000153, 0.00012330499999999717, 0.00012362499999999527, 0.0001233480000000023, 0.0001235700000000034, 0.00012381900000000418, 0.00012380600000000408, 0.00012322199999999922, 0.00012316700000000042, 0.00012404099999999835, 0.00012337500000000196, 0.0001234999999999986, 0.0001232500000000053, 0.00012326400000000487, 0.0001239450000000003, 0.00012330499999999717, 0.00012388900000000203, 0.00012381900000000418, 0.0001238199999999967, 0.00012323600000000573, 0.0001238329999999968, 0.00012337500000000196, 0.000123568999999997, 0.0001233480000000023, 0.00012376400000000537, 0.00012391700000000117, 0.00012388900000000203, 0.00012319499999999955, 0.0001236250000000022]</msg>
<status status="PASS" starttime="20201030 11:53:34.212" endtime="20201030 11:53:34.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.200" endtime="20201030 11:53:34.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:34.228" endtime="20201030 11:53:34.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.223" endtime="20201030 11:53:34.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.221" endtime="20201030 11:53:34.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.712" endtime="20201030 11:53:34.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:33.711" endtime="20201030 11:53:34.253"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.278" endtime="20201030 11:53:34.301"></status>
</kw>
<msg timestamp="20201030 11:53:34.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.275" endtime="20201030 11:53:34.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.304" endtime="20201030 11:53:34.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.310" endtime="20201030 11:53:34.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.266" endtime="20201030 11:53:34.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.261" endtime="20201030 11:53:34.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.337" endtime="20201030 11:53:34.697"></status>
</kw>
<msg timestamp="20201030 11:53:34.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042362972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042487431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:34.333" endtime="20201030 11:53:34.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042362972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042487431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:34.706" endtime="20201030 11:53:34.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.724" endtime="20201030 11:53:34.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.325" endtime="20201030 11:53:34.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.320" endtime="20201030 11:53:34.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:34.742" level="INFO">${RESULT} = [{'diff': 0.00012445900000000037}, {'diff': 0.0001248889999999961}, {'diff': 0.0001244450000000008}, {'diff': 0.00012497300000000044}, {'diff': 0.0001244580000000009}, {'diff': 0.00012440199999999568}...</msg>
<status status="PASS" starttime="20201030 11:53:34.733" endtime="20201030 11:53:34.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:34.752" level="INFO">${ACCURACY} = {'diff': [0.00012445900000000037, 0.0001248889999999961, 0.0001244450000000008, 0.00012497300000000044, 0.0001244580000000009, 0.00012440199999999568, 0.0001248329999999978, 0.0001244580000000009, 0.0...</msg>
<status status="PASS" starttime="20201030 11:53:34.744" endtime="20201030 11:53:34.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.763" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:53:34.761" endtime="20201030 11:53:34.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.768" level="INFO">VALUE: [0.00012445900000000037, 0.0001248889999999961, 0.0001244450000000008, 0.00012497300000000044, 0.0001244580000000009, 0.00012440199999999568, 0.0001248329999999978, 0.0001244580000000009, 0.0001243329999999973, 0.00012483399999999728, 0.0001246250000000032, 0.00012476399999999943, 0.00012426399999999893, 0.00012479199999999857, 0.00012452799999999875, 0.0001244030000000021, 0.00012409699999999663, 0.0001244309999999943, 0.00012419500000000055, 0.0001245559999999979, 0.00012466700000000192, 0.00012461100000000364, 0.00012437500000000296, 0.000124568999999998, 0.0001242779999999985, 0.00012476399999999943, 0.00012448600000000004, 0.0001245280000000057, 0.00012479199999999857, 0.00012502799999999925, 0.00012422200000000022, 0.00012437500000000296, 0.00012509700000000457, 0.00012465200000000287, 0.00012504099999999935, 0.00012443100000000124, 0.00012462499999999627, 0.00012459699999999713, 0.0001248889999999961, 0.0001246529999999954, 0.0001244030000000021, 0.0001244999999999996, 0.0001247360000000003, 0.00012477699999999953, 0.00012494400000000183, 0.00012440299999999516, 0.00012469500000000105, 0.00012491700000000217, 0.0001244030000000021, 0.00012448600000000004]</msg>
<status status="PASS" starttime="20201030 11:53:34.765" endtime="20201030 11:53:34.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.753" endtime="20201030 11:53:34.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:34.785" endtime="20201030 11:53:34.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.781" endtime="20201030 11:53:34.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.778" endtime="20201030 11:53:34.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.255" endtime="20201030 11:53:34.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.254" endtime="20201030 11:53:34.810"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.833" endtime="20201030 11:53:34.855"></status>
</kw>
<msg timestamp="20201030 11:53:34.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.830" endtime="20201030 11:53:34.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.858" endtime="20201030 11:53:34.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.865" endtime="20201030 11:53:34.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.823" endtime="20201030 11:53:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.817" endtime="20201030 11:53:34.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.888" endtime="20201030 11:53:35.229"></status>
</kw>
<msg timestamp="20201030 11:53:35.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041269486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:34.885" endtime="20201030 11:53:35.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041269486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:35.238" endtime="20201030 11:53:35.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.256" endtime="20201030 11:53:35.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.877" endtime="20201030 11:53:35.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.873" endtime="20201030 11:53:35.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:35.274" level="INFO">${RESULT} = [{'diff': 0.00012616700000000342}, {'diff': 0.0001261250000000047}, {'diff': 0.0001252779999999995}, {'diff': 0.00012586099999999795}, {'diff': 0.00012551400000000018}, {'diff': 0.0001255979999999976}...</msg>
<status status="PASS" starttime="20201030 11:53:35.265" endtime="20201030 11:53:35.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:35.283" level="INFO">${ACCURACY} = {'diff': [0.00012616700000000342, 0.0001261250000000047, 0.0001252779999999995, 0.00012586099999999795, 0.00012551400000000018, 0.0001255979999999976, 0.00012513900000000328, 0.0001261250000000047, 0....</msg>
<status status="PASS" starttime="20201030 11:53:35.276" endtime="20201030 11:53:35.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.294" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:53:35.291" endtime="20201030 11:53:35.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.299" level="INFO">VALUE: [0.00012616700000000342, 0.0001261250000000047, 0.0001252779999999995, 0.00012586099999999795, 0.00012551400000000018, 0.0001255979999999976, 0.00012513900000000328, 0.0001261250000000047, 0.00012559699999999813, 0.00012591700000000317, 0.00012576400000000043, 0.00012551400000000018, 0.00012609699999999863, 0.00012601400000000068, 0.00012584799999999785, 0.0001253199999999982, 0.00012555499999999942, 0.00012555600000000583, 0.00012529199999999907, 0.00012525000000000036, 0.00012563900000000378, 0.00012544499999999487, 0.00012586099999999795, 0.00012584799999999785, 0.0001255000000000006, 0.0001254030000000031, 0.00012512499999999677, 0.00012570900000000162, 0.0001252360000000008, 0.0001257230000000012, 0.00012515300000000285, 0.00012602700000000078, 0.00012561100000000464, 0.0001251800000000025, 0.00012586100000000489, 0.00012599999999999417, 0.00012534699999999788, 0.0001252909999999996, 0.00012591700000000317, 0.0001258329999999988, 0.0001252779999999995, 0.00012519399999999514, 0.0001259309999999958, 0.00012599999999999417, 0.00012518099999999505, 0.0001255700000000054, 0.00012563900000000378, 0.00012604199999999982, 0.00012544400000000233, 0.0001252779999999995]</msg>
<status status="PASS" starttime="20201030 11:53:35.296" endtime="20201030 11:53:35.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.284" endtime="20201030 11:53:35.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:35.313" endtime="20201030 11:53:35.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.307" endtime="20201030 11:53:35.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.305" endtime="20201030 11:53:35.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.812" endtime="20201030 11:53:35.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.811" endtime="20201030 11:53:35.338"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.361" endtime="20201030 11:53:35.381"></status>
</kw>
<msg timestamp="20201030 11:53:35.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.357" endtime="20201030 11:53:35.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.385" endtime="20201030 11:53:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.391" endtime="20201030 11:53:35.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.350" endtime="20201030 11:53:35.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.345" endtime="20201030 11:53:35.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.414" endtime="20201030 11:53:35.756"></status>
</kw>
<msg timestamp="20201030 11:53:35.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039728792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03985575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:35.411" endtime="20201030 11:53:35.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039728792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03985575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:35.765" endtime="20201030 11:53:35.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.784" endtime="20201030 11:53:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.404" endtime="20201030 11:53:35.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.399" endtime="20201030 11:53:35.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:35.802" level="INFO">${RESULT} = [{'diff': 0.0001269580000000034}, {'diff': 0.00012626400000000093}, {'diff': 0.00012706999999999996}, {'diff': 0.0001267079999999962}, {'diff': 0.0001269450000000033}, {'diff': 0.00012672200000000272}...</msg>
<status status="PASS" starttime="20201030 11:53:35.793" endtime="20201030 11:53:35.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:35.812" level="INFO">${ACCURACY} = {'diff': [0.0001269580000000034, 0.00012626400000000093, 0.00012706999999999996, 0.0001267079999999962, 0.0001269450000000033, 0.00012672200000000272, 0.00012625000000000136, 0.00012708300000000006, 0...</msg>
<status status="PASS" starttime="20201030 11:53:35.804" endtime="20201030 11:53:35.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.823" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:53:35.821" endtime="20201030 11:53:35.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.828" level="INFO">VALUE: [0.0001269580000000034, 0.00012626400000000093, 0.00012706999999999996, 0.0001267079999999962, 0.0001269450000000033, 0.00012672200000000272, 0.00012625000000000136, 0.00012708300000000006, 0.00012670800000000315, 0.00012622200000000222, 0.00012609800000000504, 0.00012659699999999913, 0.00012684699999999938, 0.0001262360000000018, 0.00012684799999999885, 0.00012624999999999442, 0.0001265559999999999, 0.00012665300000000435, 0.0001262910000000006, 0.00012620800000000265, 0.00012675000000000186, 0.00012651400000000118, 0.0001269859999999956, 0.00012654200000000032, 0.00012647200000000247, 0.00012655500000000042, 0.0001263889999999976, 0.00012627700000000103, 0.00012651400000000118, 0.0001268199999999997, 0.00012679200000000057, 0.00012625000000000136, 0.00012626400000000093, 0.00012686099999999895, 0.00012705599999999345, 0.00012679200000000057, 0.0001263199999999992, 0.00012693100000000374, 0.00012687499999999852, 0.00012640199999999768, 0.00012695900000000288, 0.00012706999999999996, 0.00012690299999999766, 0.00012675000000000186, 0.00012625000000000136, 0.0001267230000000022, 0.0001268199999999997, 0.0001262360000000018, 0.00012674999999999492, 0.00012676400000000143]</msg>
<status status="PASS" starttime="20201030 11:53:35.825" endtime="20201030 11:53:35.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.814" endtime="20201030 11:53:35.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:35.841" endtime="20201030 11:53:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.836" endtime="20201030 11:53:35.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.834" endtime="20201030 11:53:35.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.340" endtime="20201030 11:53:35.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.339" endtime="20201030 11:53:35.866"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.889" endtime="20201030 11:53:35.910"></status>
</kw>
<msg timestamp="20201030 11:53:35.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.886" endtime="20201030 11:53:35.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.913" endtime="20201030 11:53:35.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.919" endtime="20201030 11:53:35.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.879" endtime="20201030 11:53:35.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.873" endtime="20201030 11:53:35.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.943" endtime="20201030 11:53:36.286"></status>
</kw>
<msg timestamp="20201030 11:53:36.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040285458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:35.939" endtime="20201030 11:53:36.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040285458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:36.295" endtime="20201030 11:53:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.313" endtime="20201030 11:53:36.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.932" endtime="20201030 11:53:36.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.927" endtime="20201030 11:53:36.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:36.331" level="INFO">${RESULT} = [{'diff': 0.0001276250000000062}, {'diff': 0.00012744499999999687}, {'diff': 0.0001281110000000002}, {'diff': 0.00012781900000000124}, {'diff': 0.00012775000000000286}, {'diff': 0.0001275130000000027}...</msg>
<status status="PASS" starttime="20201030 11:53:36.322" endtime="20201030 11:53:36.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:36.341" level="INFO">${ACCURACY} = {'diff': [0.0001276250000000062, 0.00012744499999999687, 0.0001281110000000002, 0.00012781900000000124, 0.00012775000000000286, 0.0001275130000000027, 0.00012742999999999782, 0.00012776300000000296, 0...</msg>
<status status="PASS" starttime="20201030 11:53:36.333" endtime="20201030 11:53:36.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.352" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:53:36.350" endtime="20201030 11:53:36.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.358" level="INFO">VALUE: [0.0001276250000000062, 0.00012744499999999687, 0.0001281110000000002, 0.00012781900000000124, 0.00012775000000000286, 0.0001275130000000027, 0.00012742999999999782, 0.00012776300000000296, 0.0001279859999999966, 0.00012738900000000553, 0.00012720800000000365, 0.00012741599999999825, 0.00012724999999999542, 0.0001280690000000015, 0.00012713899999999834, 0.00012751400000000218, 0.0001274859999999961, 0.00012781900000000124, 0.0001276529999999984, 0.00012766699999999798, 0.0001277360000000033, 0.000127165999999998, 0.0001275130000000027, 0.00012780600000000114, 0.00012754200000000132, 0.00012719499999999662, 0.00012763899999999884, 0.00012797300000000345, 0.0001276109999999997, 0.000127778000000002, 0.00012756899999999405, 0.00012784700000000038, 0.00012802699999999584, 0.00012790199999999918, 0.00012812499999999977, 0.00012812499999999977, 0.00012742999999999782, 0.0001277360000000033, 0.00012713799999999886, 0.00012758300000000056, 0.00012813899999999934, 0.00012794499999999737, 0.00012802800000000225, 0.00012740299999999816, 0.00012734799999999935, 0.00012747199999999653, 0.0001274030000000051, 0.0001280980000000001, 0.00012797199999999703, 0.00012740299999999816]</msg>
<status status="PASS" starttime="20201030 11:53:36.355" endtime="20201030 11:53:36.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.343" endtime="20201030 11:53:36.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:36.370" endtime="20201030 11:53:36.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.366" endtime="20201030 11:53:36.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.363" endtime="20201030 11:53:36.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.868" endtime="20201030 11:53:36.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.867" endtime="20201030 11:53:36.395"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.418" endtime="20201030 11:53:36.439"></status>
</kw>
<msg timestamp="20201030 11:53:36.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:36.415" endtime="20201030 11:53:36.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:36.442" endtime="20201030 11:53:36.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.448" endtime="20201030 11:53:36.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.407" endtime="20201030 11:53:36.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.402" endtime="20201030 11:53:36.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.472" endtime="20201030 11:53:36.816"></status>
</kw>
<msg timestamp="20201030 11:53:36.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039619819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039748083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:36.468" endtime="20201030 11:53:36.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039619819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039748083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:36.825" endtime="20201030 11:53:36.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.844" endtime="20201030 11:53:36.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.461" endtime="20201030 11:53:36.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.456" endtime="20201030 11:53:36.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:36.861" level="INFO">${RESULT} = [{'diff': 0.000128263999999996}, {'diff': 0.0001284859999999971}, {'diff': 0.00012819499999999762}, {'diff': 0.0001284439999999984}, {'diff': 0.00012881900000000224}, {'diff': 0.00012841700000000567},...</msg>
<status status="PASS" starttime="20201030 11:53:36.852" endtime="20201030 11:53:36.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:36.870" level="INFO">${ACCURACY} = {'diff': [0.000128263999999996, 0.0001284859999999971, 0.00012819499999999762, 0.0001284439999999984, 0.00012881900000000224, 0.00012841700000000567, 0.00012830600000000164, 0.00012854100000000285, 0....</msg>
<status status="PASS" starttime="20201030 11:53:36.863" endtime="20201030 11:53:36.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.881" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:53:36.879" endtime="20201030 11:53:36.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.886" level="INFO">VALUE: [0.000128263999999996, 0.0001284859999999971, 0.00012819499999999762, 0.0001284439999999984, 0.00012881900000000224, 0.00012841700000000567, 0.00012830600000000164, 0.00012854100000000285, 0.0001286529999999994, 0.00012874999999999692, 0.00012862500000000027, 0.0001285000000000036, 0.00012862500000000027, 0.00012867999999999907, 0.00012813899999999934, 0.00012895899999999794, 0.00012826400000000293, 0.00012813899999999934, 0.0001281110000000002, 0.0001285560000000019, 0.0001290000000000041, 0.00012886100000000095, 0.00012815300000000585, 0.00012847200000000447, 0.0001284859999999971, 0.00012816699999999848, 0.00012880499999999573, 0.00012829200000000207, 0.00012891699999999923, 0.00012854100000000285, 0.00012877799999999606, 0.00012887500000000052, 0.00012841700000000567, 0.00012905500000000292, 0.0001287639999999965, 0.00012854200000000232, 0.00012847199999999753, 0.00012890299999999966, 0.00012858400000000103, 0.00012847199999999753, 0.00012859700000000113, 0.0001289309999999988, 0.00012829200000000207, 0.00012823599999999685, 0.00012890299999999966, 0.00012879200000000257, 0.00012890200000000018, 0.0001284859999999971, 0.0001282780000000025, 0.00012834800000000035]</msg>
<status status="PASS" starttime="20201030 11:53:36.883" endtime="20201030 11:53:36.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.872" endtime="20201030 11:53:36.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:36.899" endtime="20201030 11:53:36.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.895" endtime="20201030 11:53:36.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.892" endtime="20201030 11:53:36.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.397" endtime="20201030 11:53:36.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.396" endtime="20201030 11:53:36.924"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.947" endtime="20201030 11:53:36.969"></status>
</kw>
<msg timestamp="20201030 11:53:36.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:36.943" endtime="20201030 11:53:36.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:36.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:36.972" endtime="20201030 11:53:36.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:36.979" endtime="20201030 11:53:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.936" endtime="20201030 11:53:36.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.930" endtime="20201030 11:53:36.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.002" endtime="20201030 11:53:37.342"></status>
</kw>
<msg timestamp="20201030 11:53:37.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:36.999" endtime="20201030 11:53:37.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041246319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:37.351" endtime="20201030 11:53:37.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.370" endtime="20201030 11:53:37.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.991" endtime="20201030 11:53:37.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.987" endtime="20201030 11:53:37.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:37.387" level="INFO">${RESULT} = [{'diff': 0.00012980600000000314}, {'diff': 0.00012931900000000274}, {'diff': 0.0001300279999999973}, {'diff': 0.0001301530000000009}, {'diff': 0.00012955499999999648}, {'diff': 0.00012913900000000034...</msg>
<status status="PASS" starttime="20201030 11:53:37.378" endtime="20201030 11:53:37.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:37.396" level="INFO">${ACCURACY} = {'diff': [0.00012980600000000314, 0.00012931900000000274, 0.0001300279999999973, 0.0001301530000000009, 0.00012955499999999648, 0.00012913900000000034, 0.00012984700000000238, 0.00012977700000000453, ...</msg>
<status status="PASS" starttime="20201030 11:53:37.389" endtime="20201030 11:53:37.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.407" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:53:37.404" endtime="20201030 11:53:37.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.412" level="INFO">VALUE: [0.00012980600000000314, 0.00012931900000000274, 0.0001300279999999973, 0.0001301530000000009, 0.00012955499999999648, 0.00012913900000000034, 0.00012984700000000238, 0.00012977700000000453, 0.00012947199999999853, 0.00012969500000000606, 0.00012974999999999792, 0.00012934700000000188, 0.00012929099999999666, 0.0001293189999999958, 0.0001295409999999969, 0.0001293200000000022, 0.00012941600000000025, 0.00013007000000000296, 0.00012969499999999912, 0.00013001400000000468, 0.00012990200000000118, 0.00013008299999999612, 0.00012929200000000307, 0.0001296660000000005, 0.00012934699999999494, 0.00012956899999999605, 0.0001295279999999968, 0.00012981999999999577, 0.0001294859999999981, 0.00012937500000000102, 0.00013009700000000263, 0.00012923599999999785, 0.0001298890000000011, 0.00012962499999999433, 0.00012955500000000342, 0.00012954200000000332, 0.0001301110000000022, 0.0001293330000000023, 0.00012930499999999623, 0.00012944499999999887, 0.00012934700000000188, 0.00013005499999999698, 0.00012970900000000563, 0.00012919499999999862, 0.00012922199999999828, 0.00012959700000000213, 0.000129569000000003, 0.0001294859999999981, 0.00012931900000000274, 0.0001300980000000021]</msg>
<status status="PASS" starttime="20201030 11:53:37.409" endtime="20201030 11:53:37.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.398" endtime="20201030 11:53:37.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:37.426" endtime="20201030 11:53:37.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.420" endtime="20201030 11:53:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.418" endtime="20201030 11:53:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.926" endtime="20201030 11:53:37.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:36.925" endtime="20201030 11:53:37.451"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.474" endtime="20201030 11:53:37.495"></status>
</kw>
<msg timestamp="20201030 11:53:37.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:37.471" endtime="20201030 11:53:37.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:37.498" endtime="20201030 11:53:37.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.504" endtime="20201030 11:53:37.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.463" endtime="20201030 11:53:37.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.458" endtime="20201030 11:53:37.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.528" endtime="20201030 11:53:37.869"></status>
</kw>
<msg timestamp="20201030 11:53:37.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:37.524" endtime="20201030 11:53:37.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039815611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039946528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:37.878" endtime="20201030 11:53:37.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.896" endtime="20201030 11:53:37.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.517" endtime="20201030 11:53:37.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.513" endtime="20201030 11:53:37.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:37.913" level="INFO">${RESULT} = [{'diff': 0.00013091700000000123}, {'diff': 0.0001311110000000032}, {'diff': 0.0001303200000000032}, {'diff': 0.0001308890000000021}, {'diff': 0.00013087500000000252}, {'diff': 0.0001311389999999954},...</msg>
<status status="PASS" starttime="20201030 11:53:37.905" endtime="20201030 11:53:37.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:37.924" level="INFO">${ACCURACY} = {'diff': [0.00013091700000000123, 0.0001311110000000032, 0.0001303200000000032, 0.0001308890000000021, 0.00013087500000000252, 0.0001311389999999954, 0.00013056999999999652, 0.00013022199999999928, 0....</msg>
<status status="PASS" starttime="20201030 11:53:37.916" endtime="20201030 11:53:37.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.935" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:53:37.932" endtime="20201030 11:53:37.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.940" level="INFO">VALUE: [0.00013091700000000123, 0.0001311110000000032, 0.0001303200000000032, 0.0001308890000000021, 0.00013087500000000252, 0.0001311389999999954, 0.00013056999999999652, 0.00013022199999999928, 0.0001309310000000008, 0.00013025000000000536, 0.00013081999999999677, 0.00013019499999999962, 0.00013019400000000014, 0.00013037500000000202, 0.00013041700000000073, 0.00013069400000000064, 0.00013099999999999917, 0.00013026400000000493, 0.00013042999999999388, 0.00013081900000000424, 0.0001303189999999968, 0.00013024999999999842, 0.00013086199999999548, 0.00013112499999999583, 0.00013074999999999892, 0.00013041700000000073, 0.0001303200000000032, 0.00013109700000000363, 0.0001308890000000021, 0.0001306389999999949, 0.00013084700000000338, 0.000130860999999996, 0.00013037499999999508, 0.00013090300000000166, 0.00013074999999999892, 0.00013063900000000184, 0.00013037499999999508, 0.00013066700000000098, 0.0001308189999999973, 0.000130166000000001, 0.00013058299999999662, 0.00013038899999999465, 0.00013054199999999738, 0.00013025000000000536, 0.00013026400000000493, 0.00013074999999999892, 0.00013034699999999594, 0.00013027799999999756, 0.00013109700000000363, 0.00013097200000000003]</msg>
<status status="PASS" starttime="20201030 11:53:37.937" endtime="20201030 11:53:37.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.926" endtime="20201030 11:53:37.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:37.953" endtime="20201030 11:53:37.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.948" endtime="20201030 11:53:37.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.946" endtime="20201030 11:53:37.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.453" endtime="20201030 11:53:37.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.452" endtime="20201030 11:53:37.978"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.000" endtime="20201030 11:53:38.021"></status>
</kw>
<msg timestamp="20201030 11:53:38.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:37.997" endtime="20201030 11:53:38.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:38.025" endtime="20201030 11:53:38.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.031" endtime="20201030 11:53:38.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.990" endtime="20201030 11:53:38.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.984" endtime="20201030 11:53:38.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.054" endtime="20201030 11:53:38.396"></status>
</kw>
<msg timestamp="20201030 11:53:38.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039816486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:38.051" endtime="20201030 11:53:38.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039816486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:38.405" endtime="20201030 11:53:38.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.423" endtime="20201030 11:53:38.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.044" endtime="20201030 11:53:38.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.039" endtime="20201030 11:53:38.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:38.440" level="INFO">${RESULT} = [{'diff': 0.00013200000000000017}, {'diff': 0.00013177799999999906}, {'diff': 0.00013193000000000232}, {'diff': 0.00013138899999999565}, {'diff': 0.00013197200000000103}, {'diff': 0.000131875000000003...</msg>
<status status="PASS" starttime="20201030 11:53:38.432" endtime="20201030 11:53:38.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:38.451" level="INFO">${ACCURACY} = {'diff': [0.00013200000000000017, 0.00013177799999999906, 0.00013193000000000232, 0.00013138899999999565, 0.00013197200000000103, 0.00013187500000000352, 0.0001313609999999965, 0.00013119400000000114,...</msg>
<status status="PASS" starttime="20201030 11:53:38.442" endtime="20201030 11:53:38.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.462" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:53:38.460" endtime="20201030 11:53:38.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.467" level="INFO">VALUE: [0.00013200000000000017, 0.00013177799999999906, 0.00013193000000000232, 0.00013138899999999565, 0.00013197200000000103, 0.00013187500000000352, 0.0001313609999999965, 0.00013119400000000114, 0.00013191599999999581, 0.00013172300000000026, 0.00013209799999999716, 0.0001313330000000043, 0.00013133399999999684, 0.0001316530000000024, 0.0001315279999999988, 0.00013129199999999813, 0.00013205499999999898, 0.00013201300000000027, 0.00013215299999999597, 0.00013136100000000345, 0.000131263999999999, 0.0001315969999999972, 0.00013188899999999615, 0.00013136200000000292, 0.00013192999999999538, 0.00013152699999999934, 0.00013169500000000112, 0.00013162499999999633, 0.00013119500000000062, 0.0001315279999999988, 0.00013166700000000198, 0.00013204200000000582, 0.00013201399999999974, 0.00013211099999999726, 0.00013177799999999906, 0.0001319440000000019, 0.00013130499999999823, 0.00013134699999999694, 0.00013156899999999805, 0.00013137499999999608, 0.0001314860000000001, 0.00013122200000000028, 0.00013197200000000103, 0.0001317910000000061, 0.0001314440000000014, 0.00013149999999999967, 0.0001313890000000026, 0.00013145900000000044, 0.00013173600000000035, 0.00013188799999999667]</msg>
<status status="PASS" starttime="20201030 11:53:38.464" endtime="20201030 11:53:38.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.453" endtime="20201030 11:53:38.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:38.480" endtime="20201030 11:53:38.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.476" endtime="20201030 11:53:38.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.473" endtime="20201030 11:53:38.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.980" endtime="20201030 11:53:38.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.979" endtime="20201030 11:53:38.505"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.529" endtime="20201030 11:53:38.549"></status>
</kw>
<msg timestamp="20201030 11:53:38.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:38.525" endtime="20201030 11:53:38.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:38.553" endtime="20201030 11:53:38.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.559" endtime="20201030 11:53:38.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.518" endtime="20201030 11:53:38.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.512" endtime="20201030 11:53:38.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.582" endtime="20201030 11:53:38.928"></status>
</kw>
<msg timestamp="20201030 11:53:38.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040428903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:38.579" endtime="20201030 11:53:38.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040428903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:38.938" endtime="20201030 11:53:38.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:38.956" endtime="20201030 11:53:38.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.572" endtime="20201030 11:53:38.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.567" endtime="20201030 11:53:38.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:38.973" level="INFO">${RESULT} = [{'diff': 0.00013227799999999956}, {'diff': 0.00013238899999999665}, {'diff': 0.00013288899999999715}, {'diff': 0.00013301400000000074}, {'diff': 0.0001331110000000052}, {'diff': 0.0001324580000000019...</msg>
<status status="PASS" starttime="20201030 11:53:38.964" endtime="20201030 11:53:38.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:38.982" level="INFO">${ACCURACY} = {'diff': [0.00013227799999999956, 0.00013238899999999665, 0.00013288899999999715, 0.00013301400000000074, 0.0001331110000000052, 0.00013245800000000196, 0.0001325279999999998, 0.00013269400000000264, ...</msg>
<status status="PASS" starttime="20201030 11:53:38.975" endtime="20201030 11:53:38.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.993" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:53:38.991" endtime="20201030 11:53:38.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:38.998" level="INFO">VALUE: [0.00013227799999999956, 0.00013238899999999665, 0.00013288899999999715, 0.00013301400000000074, 0.0001331110000000052, 0.00013245800000000196, 0.0001325279999999998, 0.00013269400000000264, 0.00013263900000000384, 0.00013263900000000384, 0.00013256899999999905, 0.00013288799999999767, 0.00013251400000000024, 0.0001327640000000005, 0.000132860999999998, 0.00013300000000000117, 0.0001330969999999987, 0.00013222200000000128, 0.00013234699999999794, 0.00013291700000000323, 0.00013269499999999518, 0.00013223600000000085, 0.00013252700000000034, 0.0001323890000000036, 0.00013275000000000092, 0.0001322080000000017, 0.00013295800000000246, 0.00013286100000000495, 0.0001322770000000001, 0.00013309700000000563, 0.00013265200000000393, 0.000132264, 0.0001329730000000015, 0.00013255500000000642, 0.00013229199999999913, 0.0001323059999999987, 0.0001323059999999987, 0.00013261099999999776, 0.00013227799999999956, 0.00013237499999999708, 0.00013259700000000513, 0.00013277800000000006, 0.00013275000000000092, 0.00013258299999999862, 0.00013304199999999988, 0.000132264, 0.00013255599999999895, 0.00013281999999999877, 0.00013229199999999913, 0.00013254199999999938]</msg>
<status status="PASS" starttime="20201030 11:53:38.995" endtime="20201030 11:53:39.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.984" endtime="20201030 11:53:39.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:39.011" endtime="20201030 11:53:39.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.007" endtime="20201030 11:53:39.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.004" endtime="20201030 11:53:39.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.508" endtime="20201030 11:53:39.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:38.506" endtime="20201030 11:53:39.036"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.059" endtime="20201030 11:53:39.085"></status>
</kw>
<msg timestamp="20201030 11:53:39.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:39.056" endtime="20201030 11:53:39.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:39.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:39.089" endtime="20201030 11:53:39.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.095" endtime="20201030 11:53:39.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.049" endtime="20201030 11:53:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.043" endtime="20201030 11:53:39.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.119" endtime="20201030 11:53:39.459"></status>
</kw>
<msg timestamp="20201030 11:53:39.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045332056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:39.115" endtime="20201030 11:53:39.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:39.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045332056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045465528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:39.469" endtime="20201030 11:53:39.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.487" endtime="20201030 11:53:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.108" endtime="20201030 11:53:39.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.104" endtime="20201030 11:53:39.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:39.504" level="INFO">${RESULT} = [{'diff': 0.0001334719999999956}, {'diff': 0.0001336530000000044}, {'diff': 0.00013347200000000253}, {'diff': 0.0001333609999999985}, {'diff': 0.00013362499999999833}, {'diff': 0.00013327800000000056}...</msg>
<status status="PASS" starttime="20201030 11:53:39.495" endtime="20201030 11:53:39.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:39.513" level="INFO">${ACCURACY} = {'diff': [0.0001334719999999956, 0.0001336530000000044, 0.00013347200000000253, 0.0001333609999999985, 0.00013362499999999833, 0.00013327800000000056, 0.00013337500000000502, 0.0001332080000000027, 0....</msg>
<status status="PASS" starttime="20201030 11:53:39.506" endtime="20201030 11:53:39.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:39.524" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:53:39.522" endtime="20201030 11:53:39.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:39.529" level="INFO">VALUE: [0.0001334719999999956, 0.0001336530000000044, 0.00013347200000000253, 0.0001333609999999985, 0.00013362499999999833, 0.00013327800000000056, 0.00013337500000000502, 0.0001332080000000027, 0.00013387499999999858, 0.00013333299999999937, 0.00013383299999999987, 0.00013323600000000185, 0.0001340280000000013, 0.00013400000000000217, 0.00013333299999999937, 0.00013412499999999883, 0.0001333479999999984, 0.00013340300000000416, 0.00013391700000000423, 0.0001334440000000034, 0.0001333609999999985, 0.0001334310000000033, 0.00013362499999999833, 0.00013372199999999584, 0.00013400000000000217, 0.0001338049999999938, 0.00013384700000000638, 0.00013294500000000237, 0.00013327800000000056, 0.00013330500000000023, 0.00013318000000000357, 0.0001335969999999992, 0.000133264000000001, 0.00013386100000000595, 0.00013369499999999618, 0.00013323600000000185, 0.00013384699999999944, 0.0001338190000000003, 0.00013412499999999883, 0.00013340199999999774, 0.00013395900000000294, 0.00013405600000000045, 0.00013404200000000088, 0.0001336110000000057, 0.00013319500000000262, 0.00013412499999999883, 0.00013404099999999447, 0.00013381899999999336, 0.0001333609999999985, 0.00013373600000000235]</msg>
<status status="PASS" starttime="20201030 11:53:39.526" endtime="20201030 11:53:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.515" endtime="20201030 11:53:39.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:39.543" endtime="20201030 11:53:39.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.538" endtime="20201030 11:53:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.535" endtime="20201030 11:53:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.038" endtime="20201030 11:53:39.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.037" endtime="20201030 11:53:39.569"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.591" endtime="20201030 11:53:39.613"></status>
</kw>
<msg timestamp="20201030 11:53:39.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:39.588" endtime="20201030 11:53:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:39.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:39.616" endtime="20201030 11:53:39.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.622" endtime="20201030 11:53:39.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.581" endtime="20201030 11:53:39.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.575" endtime="20201030 11:53:39.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:39.646" endtime="20201030 11:53:40.000"></status>
</kw>
<msg timestamp="20201030 11:53:40.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039838694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:39.642" endtime="20201030 11:53:40.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039838694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:40.009" endtime="20201030 11:53:40.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.027" endtime="20201030 11:53:40.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.635" endtime="20201030 11:53:40.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.630" endtime="20201030 11:53:40.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:40.044" level="INFO">${RESULT} = [{'diff': 0.0001350970000000007}, {'diff': 0.00013425000000000242}, {'diff': 0.0001346939999999977}, {'diff': 0.00013490299999999872}, {'diff': 0.0001343060000000007}, {'diff': 0.00013433300000000037}...</msg>
<status status="PASS" starttime="20201030 11:53:40.036" endtime="20201030 11:53:40.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:40.055" level="INFO">${ACCURACY} = {'diff': [0.0001350970000000007, 0.00013425000000000242, 0.0001346939999999977, 0.00013490299999999872, 0.0001343060000000007, 0.00013433300000000037, 0.00013418000000000457, 0.00013427799999999462, 0...</msg>
<status status="PASS" starttime="20201030 11:53:40.046" endtime="20201030 11:53:40.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.066" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:53:40.063" endtime="20201030 11:53:40.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.071" level="INFO">VALUE: [0.0001350970000000007, 0.00013425000000000242, 0.0001346939999999977, 0.00013490299999999872, 0.0001343060000000007, 0.00013433300000000037, 0.00013418000000000457, 0.00013427799999999462, 0.00013434699999999994, 0.00013472200000000378, 0.000134264000000002, 0.00013438799999999917, 0.0001348890000000061, 0.00013419500000000362, 0.00013466700000000498, 0.00013507000000000102, 0.00013436100000000645, 0.00013441599999999831, 0.00013437499999999908, 0.0001345840000000001, 0.00013450000000000267, 0.00013423599999999591, 0.0001343609999999995, 0.00013447200000000353, 0.00013483300000000087, 0.00013454199999999444, 0.00013490299999999872, 0.0001350840000000006, 0.00013491700000000523, 0.00013473600000000335, 0.00013444399999999745, 0.00013490299999999872, 0.0001348060000000012, 0.00013456900000000105, 0.00013469499999999718, 0.0001346939999999977, 0.00013422200000000328, 0.00013490199999999924, 0.00013508399999999365, 0.0001346389999999989, 0.0001347640000000025, 0.0001344860000000031, 0.0001349169999999983, 0.00013470799999999727, 0.00013433300000000037, 0.00013505600000000145, 0.0001348190000000013, 0.00013475000000000292, 0.00013501299999999633, 0.00013491700000000523]</msg>
<status status="PASS" starttime="20201030 11:53:40.068" endtime="20201030 11:53:40.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.056" endtime="20201030 11:53:40.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:40.088" endtime="20201030 11:53:40.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.083" endtime="20201030 11:53:40.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.081" endtime="20201030 11:53:40.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.571" endtime="20201030 11:53:40.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:39.569" endtime="20201030 11:53:40.113"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.135" endtime="20201030 11:53:40.158"></status>
</kw>
<msg timestamp="20201030 11:53:40.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.132" endtime="20201030 11:53:40.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.161" endtime="20201030 11:53:40.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.167" endtime="20201030 11:53:40.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.125" endtime="20201030 11:53:40.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.119" endtime="20201030 11:53:40.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.191" endtime="20201030 11:53:40.544"></status>
</kw>
<msg timestamp="20201030 11:53:40.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:40.187" endtime="20201030 11:53:40.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039738708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039874111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:40.553" endtime="20201030 11:53:40.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.571" endtime="20201030 11:53:40.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.180" endtime="20201030 11:53:40.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.175" endtime="20201030 11:53:40.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:40.588" level="INFO">${RESULT} = [{'diff': 0.00013540299999999922}, {'diff': 0.0001355139999999963}, {'diff': 0.00013550000000000367}, {'diff': 0.0001354719999999976}, {'diff': 0.00013573600000000435}, {'diff': 0.00013609800000000116...</msg>
<status status="PASS" starttime="20201030 11:53:40.579" endtime="20201030 11:53:40.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:40.599" level="INFO">${ACCURACY} = {'diff': [0.00013540299999999922, 0.0001355139999999963, 0.00013550000000000367, 0.0001354719999999976, 0.00013573600000000435, 0.00013609800000000116, 0.00013576399999999655, 0.00013533400000000084, ...</msg>
<status status="PASS" starttime="20201030 11:53:40.590" endtime="20201030 11:53:40.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.610" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:53:40.607" endtime="20201030 11:53:40.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.615" level="INFO">VALUE: [0.00013540299999999922, 0.0001355139999999963, 0.00013550000000000367, 0.0001354719999999976, 0.00013573600000000435, 0.00013609800000000116, 0.00013576399999999655, 0.00013533400000000084, 0.00013527800000000256, 0.00013532000000000127, 0.00013543099999999836, 0.00013557000000000152, 0.000135861000000001, 0.00013555600000000195, 0.0001360970000000017, 0.00013590299999999972, 0.00013544399999999845, 0.00013527800000000256, 0.0001353060000000017, 0.00013522299999999682, 0.00013570799999999827, 0.0001360139999999968, 0.00013615299999999997, 0.00013529099999999572, 0.000135264000000003, 0.00013566599999999956, 0.00013572200000000478, 0.00013551400000000324, 0.00013584700000000144, 0.00013590299999999972, 0.00013582000000000177, 0.00013548599999999716, 0.00013534700000000094, 0.000135264000000003, 0.0001356389999999999, 0.0001354860000000041, 0.00013562500000000033, 0.00013594399999999895, 0.0001360970000000017, 0.00013566699999999904, 0.00013538899999999965, 0.0001355970000000012, 0.00013566699999999904, 0.00013583300000000187, 0.0001356939999999987, 0.0001357919999999957, 0.0001354310000000053, 0.000135958999999998, 0.00013566699999999904, 0.00013566699999999904]</msg>
<status status="PASS" starttime="20201030 11:53:40.612" endtime="20201030 11:53:40.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.601" endtime="20201030 11:53:40.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:40.627" endtime="20201030 11:53:40.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.623" endtime="20201030 11:53:40.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.621" endtime="20201030 11:53:40.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.115" endtime="20201030 11:53:40.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.114" endtime="20201030 11:53:40.653"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.676" endtime="20201030 11:53:40.697"></status>
</kw>
<msg timestamp="20201030 11:53:40.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.672" endtime="20201030 11:53:40.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.700" endtime="20201030 11:53:40.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.706" endtime="20201030 11:53:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.665" endtime="20201030 11:53:40.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.659" endtime="20201030 11:53:40.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.730" endtime="20201030 11:53:41.074"></status>
</kw>
<msg timestamp="20201030 11:53:41.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040095389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:40.726" endtime="20201030 11:53:41.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040095389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040232528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:41.083" endtime="20201030 11:53:41.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.102" endtime="20201030 11:53:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.719" endtime="20201030 11:53:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.714" endtime="20201030 11:53:41.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:41.119" level="INFO">${RESULT} = [{'diff': 0.00013713899999999446}, {'diff': 0.0001369170000000003}, {'diff': 0.0001366939999999997}, {'diff': 0.00013622200000000528}, {'diff': 0.00013636099999999457}, {'diff': 0.00013704199999999694...</msg>
<status status="PASS" starttime="20201030 11:53:41.110" endtime="20201030 11:53:41.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:41.128" level="INFO">${ACCURACY} = {'diff': [0.00013713899999999446, 0.0001369170000000003, 0.0001366939999999997, 0.00013622200000000528, 0.00013636099999999457, 0.00013704199999999694, 0.0001370280000000043, 0.00013626399999999705, 0...</msg>
<status status="PASS" starttime="20201030 11:53:41.121" endtime="20201030 11:53:41.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.139" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:53:41.136" endtime="20201030 11:53:41.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.144" level="INFO">VALUE: [0.00013713899999999446, 0.0001369170000000003, 0.0001366939999999997, 0.00013622200000000528, 0.00013636099999999457, 0.00013704199999999694, 0.0001370280000000043, 0.00013626399999999705, 0.00013615299999999997, 0.00013693099999999986, 0.00013633300000000237, 0.0001361939999999992, 0.00013704099999999747, 0.0001362080000000057, 0.00013687500000000158, 0.00013634799999999447, 0.00013662500000000133, 0.00013658300000000262, 0.00013640200000000074, 0.00013709800000000216, 0.00013687500000000158, 0.00013687499999999464, 0.00013623599999999791, 0.00013637499999999414, 0.00013656999999999558, 0.00013705499999999704, 0.0001365139999999973, 0.0001366809999999996, 0.00013692999999999345, 0.00013665300000000047, 0.00013690300000000072, 0.00013622199999999834, 0.00013694499999999943, 0.0001363190000000028, 0.0001366939999999997, 0.00013712500000000183, 0.0001364719999999986, 0.0001364860000000051, 0.00013658300000000262, 0.00013709799999999522, 0.00013698699999999814, 0.00013623600000000485, 0.00013620899999999825, 0.0001371810000000001, 0.00013711099999999532, 0.00013694499999999943, 0.00013654199999999644, 0.00013665300000000047, 0.00013648599999999816, 0.0001371390000000014]</msg>
<status status="PASS" starttime="20201030 11:53:41.141" endtime="20201030 11:53:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.130" endtime="20201030 11:53:41.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:41.157" endtime="20201030 11:53:41.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.152" endtime="20201030 11:53:41.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.150" endtime="20201030 11:53:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.655" endtime="20201030 11:53:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.654" endtime="20201030 11:53:41.182"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.204" endtime="20201030 11:53:41.227"></status>
</kw>
<msg timestamp="20201030 11:53:41.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:41.201" endtime="20201030 11:53:41.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:41.231" endtime="20201030 11:53:41.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.237" endtime="20201030 11:53:41.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.194" endtime="20201030 11:53:41.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.188" endtime="20201030 11:53:41.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.260" endtime="20201030 11:53:41.601"></status>
</kw>
<msg timestamp="20201030 11:53:41.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:41.257" endtime="20201030 11:53:41.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041269792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:41.610" endtime="20201030 11:53:41.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.629" endtime="20201030 11:53:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.250" endtime="20201030 11:53:41.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.245" endtime="20201030 11:53:41.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:41.646" level="INFO">${RESULT} = [{'diff': 0.0001375689999999971}, {'diff': 0.00013806900000000455}, {'diff': 0.0001379720000000001}, {'diff': 0.00013816700000000154}, {'diff': 0.00013815300000000197}, {'diff': 0.0001379720000000001}...</msg>
<status status="PASS" starttime="20201030 11:53:41.637" endtime="20201030 11:53:41.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:41.655" level="INFO">${ACCURACY} = {'diff': [0.0001375689999999971, 0.00013806900000000455, 0.0001379720000000001, 0.00013816700000000154, 0.00013815300000000197, 0.0001379720000000001, 0.00013794500000000043, 0.00013759699999999625, 0...</msg>
<status status="PASS" starttime="20201030 11:53:41.648" endtime="20201030 11:53:41.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.666" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:53:41.663" endtime="20201030 11:53:41.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.671" level="INFO">VALUE: [0.0001375689999999971, 0.00013806900000000455, 0.0001379720000000001, 0.00013816700000000154, 0.00013815300000000197, 0.0001379720000000001, 0.00013794500000000043, 0.00013759699999999625, 0.00013794400000000095, 0.00013749999999999873, 0.00013749999999999873, 0.00013795800000000052, 0.0001371810000000001, 0.00013804199999999794, 0.00013715300000000097, 0.0001375840000000031, 0.00013758299999999668, 0.0001371940000000002, 0.00013763800000000243, 0.00013788900000000215, 0.00013727799999999762, 0.00013805499999999804, 0.00013722199999999934, 0.00013755599999999701, 0.00013799999999999923, 0.00013788900000000215, 0.00013777799999999812, 0.00013772199999999984, 0.0001377640000000055, 0.0001380139999999988, 0.0001375269999999984, 0.00013740300000000122, 0.0001371810000000001, 0.00013766700000000104, 0.00013723600000000585, 0.00013815199999999556, 0.0001374719999999996, 0.00013809699999999675, 0.00013776399999999855, 0.00013790200000000225, 0.00013722199999999934, 0.00013776399999999855, 0.00013775000000000592, 0.0001375280000000048, 0.0001378060000000042, 0.000137346999999996, 0.00013761100000000276, 0.00013730500000000423, 0.00013776399999999855, 0.0001376810000000006]</msg>
<status status="PASS" starttime="20201030 11:53:41.668" endtime="20201030 11:53:41.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.657" endtime="20201030 11:53:41.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:41.685" endtime="20201030 11:53:41.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.679" endtime="20201030 11:53:41.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.677" endtime="20201030 11:53:41.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.184" endtime="20201030 11:53:41.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.183" endtime="20201030 11:53:41.710"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.733" endtime="20201030 11:53:41.754"></status>
</kw>
<msg timestamp="20201030 11:53:41.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:41.730" endtime="20201030 11:53:41.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:41.758" endtime="20201030 11:53:41.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.764" endtime="20201030 11:53:41.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.723" endtime="20201030 11:53:41.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.717" endtime="20201030 11:53:41.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.787" endtime="20201030 11:53:42.130"></status>
</kw>
<msg timestamp="20201030 11:53:42.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040044458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:41.784" endtime="20201030 11:53:42.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040044458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:42.140" endtime="20201030 11:53:42.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.158" endtime="20201030 11:53:42.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.777" endtime="20201030 11:53:42.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.772" endtime="20201030 11:53:42.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:42.175" level="INFO">${RESULT} = [{'diff': 0.00013894399999999502}, {'diff': 0.00013915300000000297}, {'diff': 0.00013872200000000084}, {'diff': 0.00013874999999999998}, {'diff': 0.00013883299999999793}, {'diff': 0.000138694000000001...</msg>
<status status="PASS" starttime="20201030 11:53:42.166" endtime="20201030 11:53:42.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:42.185" level="INFO">${ACCURACY} = {'diff': [0.00013894399999999502, 0.00013915300000000297, 0.00013872200000000084, 0.00013874999999999998, 0.00013883299999999793, 0.0001386940000000017, 0.00013837499999999614, 0.00013849999999999973,...</msg>
<status status="PASS" starttime="20201030 11:53:42.177" endtime="20201030 11:53:42.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.196" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:53:42.194" endtime="20201030 11:53:42.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.202" level="INFO">VALUE: [0.00013894399999999502, 0.00013915300000000297, 0.00013872200000000084, 0.00013874999999999998, 0.00013883299999999793, 0.0001386940000000017, 0.00013837499999999614, 0.00013849999999999973, 0.00013895899999999406, 0.00013913899999999646, 0.0001386940000000017, 0.0001386390000000029, 0.00013890300000000272, 0.00013824999999999948, 0.0001386810000000016, 0.00013827800000000556, 0.00013844400000000145, 0.00013858299999999768, 0.00013852799999999887, 0.00013888799999999674, 0.0001386940000000017, 0.0001387919999999987, 0.0001385840000000041, 0.00013902799999999937, 0.00013847300000000007, 0.0001383049999999983, 0.00013826399999999905, 0.00013859699999999725, 0.0001381810000000011, 0.00013831999999999733, 0.00013904199999999894, 0.00013822200000000034, 0.0001391799999999957, 0.00013866700000000204, 0.00013827799999999862, 0.00013829100000000566, 0.0001391249999999969, 0.0001386249999999964, 0.00013865300000000247, 0.00013851400000000624, 0.00013900000000000023, 0.00013827799999999862, 0.00013824999999999948, 0.000138861000000004, 0.00013819500000000068, 0.00013907000000000502, 0.00013877799999999912, 0.000138346999999997, 0.00013895800000000152, 0.0001388469999999975]</msg>
<status status="PASS" starttime="20201030 11:53:42.198" endtime="20201030 11:53:42.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.187" endtime="20201030 11:53:42.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:42.214" endtime="20201030 11:53:42.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.210" endtime="20201030 11:53:42.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.207" endtime="20201030 11:53:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.712" endtime="20201030 11:53:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.711" endtime="20201030 11:53:42.239"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.262" endtime="20201030 11:53:42.283"></status>
</kw>
<msg timestamp="20201030 11:53:42.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.259" endtime="20201030 11:53:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.287" endtime="20201030 11:53:42.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.293" endtime="20201030 11:53:42.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.251" endtime="20201030 11:53:42.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.246" endtime="20201030 11:53:42.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.316" endtime="20201030 11:53:42.658"></status>
</kw>
<msg timestamp="20201030 11:53:42.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03988325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040022917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:42.313" endtime="20201030 11:53:42.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03988325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040022917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:42.667" endtime="20201030 11:53:42.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.686" endtime="20201030 11:53:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.306" endtime="20201030 11:53:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.301" endtime="20201030 11:53:42.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:42.703" level="INFO">${RESULT} = [{'diff': 0.0001396669999999961}, {'diff': 0.00013955599999999901}, {'diff': 0.00013936099999999757}, {'diff': 0.00013916600000000307}, {'diff': 0.00013916700000000254}, {'diff': 0.0001395980000000046...</msg>
<status status="PASS" starttime="20201030 11:53:42.694" endtime="20201030 11:53:42.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:42.714" level="INFO">${ACCURACY} = {'diff': [0.0001396669999999961, 0.00013955599999999901, 0.00013936099999999757, 0.00013916600000000307, 0.00013916700000000254, 0.00013959800000000466, 0.00013994400000000295, 0.00013981999999999883,...</msg>
<status status="PASS" starttime="20201030 11:53:42.705" endtime="20201030 11:53:42.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.725" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:53:42.722" endtime="20201030 11:53:42.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.730" level="INFO">VALUE: [0.0001396669999999961, 0.00013955599999999901, 0.00013936099999999757, 0.00013916600000000307, 0.00013916700000000254, 0.00013959800000000466, 0.00013994400000000295, 0.00013981999999999883, 0.00013973600000000141, 0.0001391940000000022, 0.0001392919999999992, 0.00013956999999999858, 0.00013920800000000177, 0.00013934700000000494, 0.00013948600000000116, 0.0001399720000000021, 0.00013920900000000125, 0.00013952799999999987, 0.00013980599999999926, 0.0001400140000000008, 0.0001393610000000045, 0.00013998600000000166, 0.00013947199999999466, 0.00013945799999999509, 0.00013954200000000638, 0.00013916700000000254, 0.00013955499999999954, 0.00013952799999999987, 0.00013944500000000193, 0.00013936099999999757, 0.0001395140000000003, 0.00013979100000000022, 0.00014005500000000004, 0.00013943099999999542, 0.0001393190000000058, 0.00013940299999999628, 0.00013965299999999653, 0.00013962500000000433, 0.0001399720000000021, 0.00013915299999999603, 0.00013994400000000295, 0.00013938900000000365, 0.00014015299999999703, 0.0001396249999999974, 0.0001400689999999996, 0.00013990200000000425, 0.00014005599999999951, 0.0001392370000000004, 0.00013986099999999807, 0.00013948700000000064]</msg>
<status status="PASS" starttime="20201030 11:53:42.727" endtime="20201030 11:53:42.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.716" endtime="20201030 11:53:42.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:42.743" endtime="20201030 11:53:42.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.738" endtime="20201030 11:53:42.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.736" endtime="20201030 11:53:42.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.241" endtime="20201030 11:53:42.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.240" endtime="20201030 11:53:42.768"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.790" endtime="20201030 11:53:42.812"></status>
</kw>
<msg timestamp="20201030 11:53:42.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.787" endtime="20201030 11:53:42.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.815" endtime="20201030 11:53:42.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.821" endtime="20201030 11:53:42.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.780" endtime="20201030 11:53:42.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.774" endtime="20201030 11:53:42.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.845" endtime="20201030 11:53:43.190"></status>
</kw>
<msg timestamp="20201030 11:53:43.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039829944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:42.841" endtime="20201030 11:53:43.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039829944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:43.200" endtime="20201030 11:53:43.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.218" endtime="20201030 11:53:43.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.834" endtime="20201030 11:53:43.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.830" endtime="20201030 11:53:43.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:43.235" level="INFO">${RESULT} = [{'diff': 0.00014061099999999882}, {'diff': 0.00014111099999999932}, {'diff': 0.0001408050000000008}, {'diff': 0.00014109699999999975}, {'diff': 0.00014050000000000173}, {'diff': 0.0001405280000000008...</msg>
<status status="PASS" starttime="20201030 11:53:43.226" endtime="20201030 11:53:43.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:43.244" level="INFO">${ACCURACY} = {'diff': [0.00014061099999999882, 0.00014111099999999932, 0.0001408050000000008, 0.00014109699999999975, 0.00014050000000000173, 0.00014052800000000087, 0.00014026399999999412, 0.00014054200000000044,...</msg>
<status status="PASS" starttime="20201030 11:53:43.237" endtime="20201030 11:53:43.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.255" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:53:43.253" endtime="20201030 11:53:43.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.260" level="INFO">VALUE: [0.00014061099999999882, 0.00014111099999999932, 0.0001408050000000008, 0.00014109699999999975, 0.00014050000000000173, 0.00014052800000000087, 0.00014026399999999412, 0.00014054200000000044, 0.00014076400000000155, 0.0001407920000000007, 0.00014031999999999933, 0.00014077700000000165, 0.0001406799999999972, 0.00014113899999999846, 0.0001406799999999972, 0.00014075000000000198, 0.00014033300000000637, 0.00014056999999999958, 0.00014074999999999505, 0.00014020800000000277, 0.00014044400000000345, 0.00014041599999999738, 0.00014098600000000266, 0.00014065300000000447, 0.00014065199999999806, 0.00014076400000000155, 0.00014063899999999796, 0.0001410270000000019, 0.00014027800000000062, 0.0001406249999999984, 0.00014062500000000533, 0.00014111099999999932, 0.00014066700000000404, 0.00014022300000000182, 0.00014120800000000377, 0.00014023600000000191, 0.00014115299999999803, 0.00014108399999999965, 0.00014075000000000198, 0.00014111099999999932, 0.0001406249999999984, 0.00014031899999999986, 0.00014070799999999634, 0.00014015300000000397, 0.00014026400000000105, 0.00014070799999999634, 0.0001406390000000049, 0.00014093100000000386, 0.0001405690000000001, 0.00014052800000000087]</msg>
<status status="PASS" starttime="20201030 11:53:43.257" endtime="20201030 11:53:43.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.246" endtime="20201030 11:53:43.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:43.273" endtime="20201030 11:53:43.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.269" endtime="20201030 11:53:43.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.266" endtime="20201030 11:53:43.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.770" endtime="20201030 11:53:43.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.769" endtime="20201030 11:53:43.298"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.321" endtime="20201030 11:53:43.344"></status>
</kw>
<msg timestamp="20201030 11:53:43.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:43.318" endtime="20201030 11:53:43.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:43.347" endtime="20201030 11:53:43.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.353" endtime="20201030 11:53:43.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.310" endtime="20201030 11:53:43.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.305" endtime="20201030 11:53:43.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.377" endtime="20201030 11:53:43.718"></status>
</kw>
<msg timestamp="20201030 11:53:43.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041557514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:43.373" endtime="20201030 11:53:43.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041557514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:43.728" endtime="20201030 11:53:43.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.746" endtime="20201030 11:53:43.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.366" endtime="20201030 11:53:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.361" endtime="20201030 11:53:43.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:43.763" level="INFO">${RESULT} = [{'diff': 0.00014159700000000025}, {'diff': 0.0001418889999999992}, {'diff': 0.00014137500000000608}, {'diff': 0.00014129099999999478}, {'diff': 0.0001417219999999969}, {'diff': 0.00014197299999999663...</msg>
<status status="PASS" starttime="20201030 11:53:43.755" endtime="20201030 11:53:43.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:43.772" level="INFO">${ACCURACY} = {'diff': [0.00014159700000000025, 0.0001418889999999992, 0.00014137500000000608, 0.00014129099999999478, 0.0001417219999999969, 0.00014197299999999663, 0.00014195799999999759, 0.0001416940000000047, 0...</msg>
<status status="PASS" starttime="20201030 11:53:43.765" endtime="20201030 11:53:43.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.783" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:53:43.781" endtime="20201030 11:53:43.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.788" level="INFO">VALUE: [0.00014159700000000025, 0.0001418889999999992, 0.00014137500000000608, 0.00014129099999999478, 0.0001417219999999969, 0.00014197299999999663, 0.00014195799999999759, 0.0001416940000000047, 0.00014191699999999835, 0.00014129100000000172, 0.00014123599999999598, 0.0001418889999999992, 0.00014137499999999914, 0.00014170800000000427, 0.0001421249999999999, 0.00014141699999999785, 0.00014147199999999666, 0.00014145799999999709, 0.00014147199999999666, 0.00014205500000000204, 0.00014186100000000007, 0.00014122200000000334, 0.0001420140000000028, 0.00014204100000000247, 0.00014163899999999896, 0.00014127799999999469, 0.00014190299999999878, 0.00014148600000000316, 0.0001415690000000011, 0.00014215299999999903, 0.00014193099999999792, 0.00014118000000000464, 0.00014131900000000086, 0.00014163899999999896, 0.00014208300000000118, 0.00014172200000000384, 0.00014163899999999896, 0.00014145800000000402, 0.00014170799999999734, 0.00014136099999999957, 0.00014208300000000118, 0.0001419999999999963, 0.00014195899999999706, 0.00014119399999999727, 0.0001411940000000042, 0.00014187499999999964, 0.00014206899999999467, 0.00014208399999999372, 0.0001414999999999958, 0.0001416390000000059]</msg>
<status status="PASS" starttime="20201030 11:53:43.785" endtime="20201030 11:53:43.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.774" endtime="20201030 11:53:43.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:43.802" endtime="20201030 11:53:43.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.797" endtime="20201030 11:53:43.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.794" endtime="20201030 11:53:43.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.300" endtime="20201030 11:53:43.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.299" endtime="20201030 11:53:43.828"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.851" endtime="20201030 11:53:43.872"></status>
</kw>
<msg timestamp="20201030 11:53:43.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:43.847" endtime="20201030 11:53:43.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:43.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:43.875" endtime="20201030 11:53:43.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.882" endtime="20201030 11:53:43.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.840" endtime="20201030 11:53:43.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.834" endtime="20201030 11:53:43.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:43.905" endtime="20201030 11:53:44.248"></status>
</kw>
<msg timestamp="20201030 11:53:44.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040014694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:43.902" endtime="20201030 11:53:44.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039871611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040014694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:44.257" endtime="20201030 11:53:44.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.275" endtime="20201030 11:53:44.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.894" endtime="20201030 11:53:44.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.890" endtime="20201030 11:53:44.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:44.293" level="INFO">${RESULT} = [{'diff': 0.00014308300000000218}, {'diff': 0.00014273599999999748}, {'diff': 0.0001423329999999945}, {'diff': 0.00014270799999999834}, {'diff': 0.0001427219999999979}, {'diff': 0.0001425969999999943}...</msg>
<status status="PASS" starttime="20201030 11:53:44.284" endtime="20201030 11:53:44.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:44.307" level="INFO">${ACCURACY} = {'diff': [0.00014308300000000218, 0.00014273599999999748, 0.0001423329999999945, 0.00014270799999999834, 0.0001427219999999979, 0.0001425969999999943, 0.00014291699999999935, 0.0001426669999999991, 0....</msg>
<status status="PASS" starttime="20201030 11:53:44.295" endtime="20201030 11:53:44.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.318" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:53:44.316" endtime="20201030 11:53:44.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.323" level="INFO">VALUE: [0.00014308300000000218, 0.00014273599999999748, 0.0001423329999999945, 0.00014270799999999834, 0.0001427219999999979, 0.0001425969999999943, 0.00014291699999999935, 0.0001426669999999991, 0.00014297299999999763, 0.00014248599999999723, 0.0001424720000000046, 0.0001424019999999998, 0.0001429720000000051, 0.0001428050000000028, 0.0001425690000000021, 0.0001423340000000009, 0.0001422769999999962, 0.00014273599999999748, 0.00014275000000000398, 0.00014316600000000013, 0.00014231899999999492, 0.00014313899999999352, 0.00014274999999999705, 0.00014311100000000132, 0.00014298600000000466, 0.0001430140000000038, 0.0001422089999999973, 0.00014274999999999705, 0.00014232000000000133, 0.00014276399999999662, 0.00014305600000000251, 0.0001426799999999992, 0.0001427920000000027, 0.00014280600000000226, 0.0001424170000000058, 0.00014308300000000218, 0.00014270799999999834, 0.00014294399999999902, 0.00014281900000000236, 0.00014227800000000262, 0.00014220799999999784, 0.00014305599999999558, 0.00014298599999999773, 0.00014294400000000596, 0.00014263899999999996, 0.00014276400000000355, 0.00014305600000000251, 0.00014313900000000046, 0.00014248599999999723, 0.0001428890000000002]</msg>
<status status="PASS" starttime="20201030 11:53:44.320" endtime="20201030 11:53:44.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.309" endtime="20201030 11:53:44.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:44.336" endtime="20201030 11:53:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.331" endtime="20201030 11:53:44.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.329" endtime="20201030 11:53:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.830" endtime="20201030 11:53:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:43.829" endtime="20201030 11:53:44.361"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.383" endtime="20201030 11:53:44.405"></status>
</kw>
<msg timestamp="20201030 11:53:44.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:44.380" endtime="20201030 11:53:44.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:44.408" endtime="20201030 11:53:44.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.414" endtime="20201030 11:53:44.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.373" endtime="20201030 11:53:44.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.367" endtime="20201030 11:53:44.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.438" endtime="20201030 11:53:44.780"></status>
</kw>
<msg timestamp="20201030 11:53:44.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039545625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039689431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:44.434" endtime="20201030 11:53:44.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039545625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039689431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:44.790" endtime="20201030 11:53:44.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.808" endtime="20201030 11:53:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.427" endtime="20201030 11:53:44.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.423" endtime="20201030 11:53:44.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:44.825" level="INFO">${RESULT} = [{'diff': 0.00014380599999999633}, {'diff': 0.00014327799999999669}, {'diff': 0.00014341600000000038}, {'diff': 0.00014390299999999384}, {'diff': 0.00014354200000000344}, {'diff': 0.000143249999999997...</msg>
<status status="PASS" starttime="20201030 11:53:44.816" endtime="20201030 11:53:44.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:44.835" level="INFO">${ACCURACY} = {'diff': [0.00014380599999999633, 0.00014327799999999669, 0.00014341600000000038, 0.00014390299999999384, 0.00014354200000000344, 0.00014324999999999755, 0.0001434999999999978, 0.00014380600000000326,...</msg>
<status status="PASS" starttime="20201030 11:53:44.827" endtime="20201030 11:53:44.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.846" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:53:44.844" endtime="20201030 11:53:44.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.852" level="INFO">VALUE: [0.00014380599999999633, 0.00014327799999999669, 0.00014341600000000038, 0.00014390299999999384, 0.00014354200000000344, 0.00014324999999999755, 0.0001434999999999978, 0.00014380600000000326, 0.00014325000000000448, 0.00014352799999999694, 0.00014401399999999787, 0.00014361100000000182, 0.00014407000000000308, 0.00014409700000000275, 0.0001438749999999947, 0.00014359700000000225, 0.00014327800000000362, 0.00014372200000000585, 0.00014324999999999755, 0.00014411100000000232, 0.00014391600000000088, 0.00014330600000000276, 0.00014354200000000344, 0.0001434999999999978, 0.00014418100000000017, 0.00014340300000000028, 0.00014415300000000103, 0.00014387500000000164, 0.00014315200000000056, 0.00014369499999999924, 0.00014344399999999952, 0.00014390300000000078, 0.00014365300000000053, 0.00014406899999999667, 0.00014316600000000013, 0.00014383399999999547, 0.00014326399999999712, 0.00014332000000000233, 0.0001440969999999958, 0.00014375000000000498, 0.00014387500000000164, 0.00014357000000000258, 0.00014362499999999445, 0.00014369499999999924, 0.0001435969999999953, 0.0001436670000000001, 0.00014381900000000336, 0.0001439449999999995, 0.00014354100000000397, 0.00014380600000000326]</msg>
<status status="PASS" starttime="20201030 11:53:44.849" endtime="20201030 11:53:44.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.837" endtime="20201030 11:53:44.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:44.864" endtime="20201030 11:53:44.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.860" endtime="20201030 11:53:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.857" endtime="20201030 11:53:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.363" endtime="20201030 11:53:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.362" endtime="20201030 11:53:44.889"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.912" endtime="20201030 11:53:44.933"></status>
</kw>
<msg timestamp="20201030 11:53:44.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:44.909" endtime="20201030 11:53:44.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:44.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:44.937" endtime="20201030 11:53:44.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.943" endtime="20201030 11:53:44.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.902" endtime="20201030 11:53:44.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.896" endtime="20201030 11:53:44.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:44.966" endtime="20201030 11:53:45.313"></status>
</kw>
<msg timestamp="20201030 11:53:45.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:44.963" endtime="20201030 11:53:45.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039550569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039694986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:45.322" endtime="20201030 11:53:45.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.341" endtime="20201030 11:53:45.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.956" endtime="20201030 11:53:45.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.951" endtime="20201030 11:53:45.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:45.358" level="INFO">${RESULT} = [{'diff': 0.00014441700000000085}, {'diff': 0.00014440299999999434}, {'diff': 0.00014495800000000059}, {'diff': 0.0001451529999999951}, {'diff': 0.00014454200000000444}, {'diff': 0.0001448330000000039...</msg>
<status status="PASS" starttime="20201030 11:53:45.349" endtime="20201030 11:53:45.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:45.367" level="INFO">${ACCURACY} = {'diff': [0.00014441700000000085, 0.00014440299999999434, 0.00014495800000000059, 0.0001451529999999951, 0.00014454200000000444, 0.00014483300000000393, 0.0001445690000000041, 0.00014445800000000009, ...</msg>
<status status="PASS" starttime="20201030 11:53:45.360" endtime="20201030 11:53:45.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.378" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:53:45.375" endtime="20201030 11:53:45.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.383" level="INFO">VALUE: [0.00014441700000000085, 0.00014440299999999434, 0.00014495800000000059, 0.0001451529999999951, 0.00014454200000000444, 0.00014483300000000393, 0.0001445690000000041, 0.00014445800000000009, 0.00014424999999999855, 0.00014424999999999855, 0.00014500000000000624, 0.00014469400000000077, 0.0001441800000000007, 0.00014424999999999855, 0.00014463899999999502, 0.00014501399999999887, 0.00014480499999999785, 0.00014493000000000145, 0.0001443329999999965, 0.00014459800000000272, 0.00014500000000000624, 0.0001448890000000022, 0.00014515199999999562, 0.0001444999999999988, 0.00014458300000000368, 0.0001449999999999993, 0.00014463900000000196, 0.00014519400000000127, 0.00014501399999999887, 0.0001442769999999982, 0.00014483300000000393, 0.00014470800000000034, 0.00014440300000000128, 0.00014501399999999887, 0.0001443329999999965, 0.00014429100000000472, 0.00014419400000000027, 0.000144445, 0.0001443749999999952, 0.00014424999999999855, 0.00014497299999999963, 0.00014459700000000325, 0.00014473599999999948, 0.00014429199999999726, 0.00014474999999999905, 0.00014484699999999656, 0.0001448199999999969, 0.00014511099999999638, 0.00014422200000000635, 0.0001449169999999944]</msg>
<status status="PASS" starttime="20201030 11:53:45.380" endtime="20201030 11:53:45.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.369" endtime="20201030 11:53:45.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:45.399" endtime="20201030 11:53:45.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.395" endtime="20201030 11:53:45.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.393" endtime="20201030 11:53:45.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.892" endtime="20201030 11:53:45.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:44.890" endtime="20201030 11:53:45.425"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.447" endtime="20201030 11:53:45.470"></status>
</kw>
<msg timestamp="20201030 11:53:45.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:45.444" endtime="20201030 11:53:45.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:45.474" endtime="20201030 11:53:45.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.480" endtime="20201030 11:53:45.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.437" endtime="20201030 11:53:45.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.431" endtime="20201030 11:53:45.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.503" endtime="20201030 11:53:45.844"></status>
</kw>
<msg timestamp="20201030 11:53:45.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0413555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:45.500" endtime="20201030 11:53:45.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0413555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:45.853" endtime="20201030 11:53:45.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.872" endtime="20201030 11:53:45.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.493" endtime="20201030 11:53:45.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.488" endtime="20201030 11:53:45.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:45.889" level="INFO">${RESULT} = [{'diff': 0.00014561099999999688}, {'diff': 0.00014538899999999577}, {'diff': 0.00014586099999999713}, {'diff': 0.00014591700000000235}, {'diff': 0.0001456529999999956}, {'diff': 0.0001458059999999983...</msg>
<status status="PASS" starttime="20201030 11:53:45.881" endtime="20201030 11:53:45.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:45.898" level="INFO">${ACCURACY} = {'diff': [0.00014561099999999688, 0.00014538899999999577, 0.00014586099999999713, 0.00014591700000000235, 0.0001456529999999956, 0.00014580599999999833, 0.00014540300000000228, 0.0001458470000000045, ...</msg>
<status status="PASS" starttime="20201030 11:53:45.891" endtime="20201030 11:53:45.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.909" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:53:45.907" endtime="20201030 11:53:45.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:45.914" level="INFO">VALUE: [0.00014561099999999688, 0.00014538899999999577, 0.00014586099999999713, 0.00014591700000000235, 0.0001456529999999956, 0.00014580599999999833, 0.00014540300000000228, 0.0001458470000000045, 0.0001456800000000022, 0.00014577800000000612, 0.0001458199999999979, 0.0001454869999999997, 0.0001455419999999985, 0.00014609700000000475, 0.0001458470000000045, 0.0001453329999999975, 0.0001455969999999973, 0.00014601399999999987, 0.00014575000000000005, 0.0001457220000000009, 0.00014597200000000116, 0.00014527799999999869, 0.0001455969999999973, 0.00014576400000000655, 0.00014572300000000038, 0.00014569399999999483, 0.00014594400000000202, 0.00014547200000000066, 0.00014544400000000152, 0.0001458199999999979, 0.00014569400000000177, 0.00014597200000000116, 0.00014529100000000572, 0.00014548600000000023, 0.00014584800000000397, 0.00014580600000000526, 0.00014608299999999824, 0.0001452079999999939, 0.00014541600000000238, 0.0001461529999999961, 0.0001452920000000052, 0.00014594400000000202, 0.00014547200000000066, 0.00014573600000000048, 0.00014543100000000142, 0.00014611100000000432, 0.0001458470000000045, 0.00014575000000000005, 0.00014519500000000074, 0.00014543100000000142]</msg>
<status status="PASS" starttime="20201030 11:53:45.911" endtime="20201030 11:53:45.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.900" endtime="20201030 11:53:45.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:45.928" endtime="20201030 11:53:45.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.923" endtime="20201030 11:53:45.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.920" endtime="20201030 11:53:45.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.427" endtime="20201030 11:53:45.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.426" endtime="20201030 11:53:45.954"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:45.976" endtime="20201030 11:53:45.998"></status>
</kw>
<msg timestamp="20201030 11:53:45.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:45.973" endtime="20201030 11:53:46.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:46.002" endtime="20201030 11:53:46.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.008" endtime="20201030 11:53:46.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.966" endtime="20201030 11:53:46.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.960" endtime="20201030 11:53:46.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.031" endtime="20201030 11:53:46.373"></status>
</kw>
<msg timestamp="20201030 11:53:46.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04010025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:46.028" endtime="20201030 11:53:46.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04010025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:46.382" endtime="20201030 11:53:46.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.400" endtime="20201030 11:53:46.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.021" endtime="20201030 11:53:46.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.016" endtime="20201030 11:53:46.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:46.417" level="INFO">${RESULT} = [{'diff': 0.00014647199999999472}, {'diff': 0.0001464859999999943}, {'diff': 0.00014680599999999933}, {'diff': 0.00014629099999999978}, {'diff': 0.0001466670000000031}, {'diff': 0.00014694400000000302...</msg>
<status status="PASS" starttime="20201030 11:53:46.409" endtime="20201030 11:53:46.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:46.428" level="INFO">${ACCURACY} = {'diff': [0.00014647199999999472, 0.0001464859999999943, 0.00014680599999999933, 0.00014629099999999978, 0.0001466670000000031, 0.00014694400000000302, 0.00014676300000000114, 0.00014690299999999684, ...</msg>
<status status="PASS" starttime="20201030 11:53:46.419" endtime="20201030 11:53:46.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.439" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:53:46.436" endtime="20201030 11:53:46.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.444" level="INFO">VALUE: [0.00014647199999999472, 0.0001464859999999943, 0.00014680599999999933, 0.00014629099999999978, 0.0001466670000000031, 0.00014694400000000302, 0.00014676300000000114, 0.00014690299999999684, 0.00014629199999999926, 0.00014636099999999763, 0.00014687500000000464, 0.00014658300000000568, 0.000146832999999999, 0.0001465690000000061, 0.0001465000000000008, 0.00014683399999999847, 0.00014673600000000148, 0.0001465549999999996, 0.0001472220000000024, 0.00014656899999999917, 0.000147042, 0.0001471800000000037, 0.0001467220000000019, 0.00014651399999999343, 0.0001470969999999988, 0.00014690299999999684, 0.00014615300000000303, 0.00014626400000000012, 0.00014641599999999644, 0.0001466250000000044, 0.00014651400000000037, 0.00014641700000000285, 0.00014623600000000098, 0.0001467079999999954, 0.00014629199999999926, 0.00014719399999999633, 0.0001465419999999995, 0.00014697200000000216, 0.00014629199999999926, 0.00014683399999999847, 0.00014629199999999926, 0.0001466670000000031, 0.00014701400000000087, 0.0001466659999999967, 0.0001466250000000044, 0.00014719399999999633, 0.00014647200000000166, 0.00014688899999999727, 0.00014648600000000123, 0.00014713899999999752]</msg>
<status status="PASS" starttime="20201030 11:53:46.441" endtime="20201030 11:53:46.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.430" endtime="20201030 11:53:46.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:46.456" endtime="20201030 11:53:46.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.452" endtime="20201030 11:53:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.450" endtime="20201030 11:53:46.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.956" endtime="20201030 11:53:46.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:45.955" endtime="20201030 11:53:46.482"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.504" endtime="20201030 11:53:46.526"></status>
</kw>
<msg timestamp="20201030 11:53:46.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:46.501" endtime="20201030 11:53:46.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:46.529" endtime="20201030 11:53:46.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.536" endtime="20201030 11:53:46.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.494" endtime="20201030 11:53:46.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.488" endtime="20201030 11:53:46.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.559" endtime="20201030 11:53:46.900"></status>
</kw>
<msg timestamp="20201030 11:53:46.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039730722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:46.556" endtime="20201030 11:53:46.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039730722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:46.910" endtime="20201030 11:53:46.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.928" endtime="20201030 11:53:46.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.548" endtime="20201030 11:53:46.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.544" endtime="20201030 11:53:46.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:46.945" level="INFO">${RESULT} = [{'diff': 0.0001477220000000029}, {'diff': 0.00014791599999999794}, {'diff': 0.00014776300000000214}, {'diff': 0.00014738899999999777}, {'diff': 0.0001475969999999993}, {'diff': 0.000148042000000001},...</msg>
<status status="PASS" starttime="20201030 11:53:46.936" endtime="20201030 11:53:46.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:46.956" level="INFO">${ACCURACY} = {'diff': [0.0001477220000000029, 0.00014791599999999794, 0.00014776300000000214, 0.00014738899999999777, 0.0001475969999999993, 0.000148042000000001, 0.00014768099999999673, 0.00014729200000000026, 0....</msg>
<status status="PASS" starttime="20201030 11:53:46.947" endtime="20201030 11:53:46.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.967" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:53:46.965" endtime="20201030 11:53:46.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.972" level="INFO">VALUE: [0.0001477220000000029, 0.00014791599999999794, 0.00014776300000000214, 0.00014738899999999777, 0.0001475969999999993, 0.000148042000000001, 0.00014768099999999673, 0.00014729200000000026, 0.00014784699999999956, 0.00014752700000000146, 0.00014758299999999974, 0.00014731899999999992, 0.00014808300000000024, 0.00014811099999999938, 0.000147445000000003, 0.0001476250000000054, 0.00014727800000000069, 0.00014726400000000112, 0.0001478199999999999, 0.0001473199999999994, 0.00014711099999999838, 0.0001477090000000028, 0.00014770899999999587, 0.00014731899999999992, 0.00014756900000000017, 0.00014725000000000155, 0.00014775000000000205, 0.0001472220000000024, 0.00014770800000000334, 0.00014713899999999752, 0.0001478749999999987, 0.00014754100000000103, 0.00014780600000000033, 0.00014740299999999734, 0.00014762499999999845, 0.0001479169999999974, 0.00014777800000000119, 0.00014743099999999648, 0.0001476529999999976, 0.00014808300000000024, 0.00014734699999999906, 0.0001479169999999974, 0.00014780600000000033, 0.00014761099999999888, 0.0001475000000000018, 0.0001476250000000054, 0.00014766699999999716, 0.00014784799999999904, 0.00014798600000000273, 0.0001473329999999995]</msg>
<status status="PASS" starttime="20201030 11:53:46.969" endtime="20201030 11:53:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.958" endtime="20201030 11:53:46.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:46.985" endtime="20201030 11:53:47.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.980" endtime="20201030 11:53:47.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.978" endtime="20201030 11:53:47.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.484" endtime="20201030 11:53:47.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.483" endtime="20201030 11:53:47.010"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.033" endtime="20201030 11:53:47.054"></status>
</kw>
<msg timestamp="20201030 11:53:47.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:47.029" endtime="20201030 11:53:47.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:47.058" endtime="20201030 11:53:47.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.064" endtime="20201030 11:53:47.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.022" endtime="20201030 11:53:47.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.016" endtime="20201030 11:53:47.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.087" endtime="20201030 11:53:47.432"></status>
</kw>
<msg timestamp="20201030 11:53:47.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.084" endtime="20201030 11:53:47.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.441" endtime="20201030 11:53:47.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.460" endtime="20201030 11:53:47.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.077" endtime="20201030 11:53:47.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.072" endtime="20201030 11:53:47.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:47.477" level="INFO">${RESULT} = [{'diff': 0.00014829100000000178}, {'diff': 0.00014829200000000126}, {'diff': 0.0001485970000000003}, {'diff': 0.00014901399999999593}, {'diff': 0.00014822199999999647}, {'diff': 0.0001485130000000029...</msg>
<status status="PASS" starttime="20201030 11:53:47.468" endtime="20201030 11:53:47.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:47.486" level="INFO">${ACCURACY} = {'diff': [0.00014829100000000178, 0.00014829200000000126, 0.0001485970000000003, 0.00014901399999999593, 0.00014822199999999647, 0.0001485130000000029, 0.00014894399999999808, 0.00014829200000000126, ...</msg>
<status status="PASS" starttime="20201030 11:53:47.479" endtime="20201030 11:53:47.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.497" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:53:47.495" endtime="20201030 11:53:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.502" level="INFO">VALUE: [0.00014829100000000178, 0.00014829200000000126, 0.0001485970000000003, 0.00014901399999999593, 0.00014822199999999647, 0.0001485130000000029, 0.00014894399999999808, 0.00014829200000000126, 0.000149042000000002, 0.00014907000000000115, 0.00014891700000000535, 0.00014901400000000287, 0.00014875000000000305, 0.00014848600000000323, 0.0001486529999999986, 0.00014830500000000135, 0.0001487499999999961, 0.00014830600000000083, 0.00014825000000000255, 0.0001486659999999987, 0.0001487079999999974, 0.00014880500000000185, 0.00014859799999999979, 0.0001485550000000016, 0.00014872299999999644, 0.0001481949999999968, 0.0001485970000000003, 0.00014826399999999518, 0.00014823600000000298, 0.0001488200000000009, 0.00014863899999999902, 0.0001485000000000028, 0.00014856900000000117, 0.00014891599999999894, 0.00014884700000000056, 0.00014823599999999604, 0.00014888899999999927, 0.00014823599999999604, 0.00014870800000000434, 0.00014862499999999945, 0.000148445000000004, 0.0001489859999999968, 0.00014838899999999877, 0.00014841700000000485, 0.00014868099999999773, 0.0001482499999999956, 0.00014849999999999586, 0.00014886100000000013, 0.00014862499999999945, 0.00014858300000000074]</msg>
<status status="PASS" starttime="20201030 11:53:47.499" endtime="20201030 11:53:47.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.488" endtime="20201030 11:53:47.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:47.515" endtime="20201030 11:53:47.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.510" endtime="20201030 11:53:47.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.508" endtime="20201030 11:53:47.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.012" endtime="20201030 11:53:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.011" endtime="20201030 11:53:47.540"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.562" endtime="20201030 11:53:47.586"></status>
</kw>
<msg timestamp="20201030 11:53:47.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:47.559" endtime="20201030 11:53:47.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:47.589" endtime="20201030 11:53:47.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.595" endtime="20201030 11:53:47.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.552" endtime="20201030 11:53:47.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.546" endtime="20201030 11:53:47.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.619" endtime="20201030 11:53:47.960"></status>
</kw>
<msg timestamp="20201030 11:53:47.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041194167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041343819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.615" endtime="20201030 11:53:47.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041194167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041343819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.969" endtime="20201030 11:53:47.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.988" endtime="20201030 11:53:47.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.608" endtime="20201030 11:53:47.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.604" endtime="20201030 11:53:47.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:48.005" level="INFO">${RESULT} = [{'diff': 0.00014965200000000012}, {'diff': 0.0001497770000000037}, {'diff': 0.00015012500000000095}, {'diff': 0.00014956899999999523}, {'diff': 0.00014988900000000027}, {'diff': 0.0001502359999999980...</msg>
<status status="PASS" starttime="20201030 11:53:47.996" endtime="20201030 11:53:48.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:48.014" level="INFO">${ACCURACY} = {'diff': [0.00014965200000000012, 0.0001497770000000037, 0.00015012500000000095, 0.00014956899999999523, 0.00014988900000000027, 0.00015023599999999804, 0.0001497499999999971, 0.0001495550000000026, 0...</msg>
<status status="PASS" starttime="20201030 11:53:48.007" endtime="20201030 11:53:48.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.025" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:53:48.023" endtime="20201030 11:53:48.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.030" level="INFO">VALUE: [0.00014965200000000012, 0.0001497770000000037, 0.00015012500000000095, 0.00014956899999999523, 0.00014988900000000027, 0.00015023599999999804, 0.0001497499999999971, 0.0001495550000000026, 0.00015008300000000224, 0.00014926399999999618, 0.00014940299999999934, 0.00014952800000000294, 0.00014947199999999772, 0.00014961100000000088, 0.00014998600000000473, 0.00014959800000000079, 0.0001495970000000013, 0.00014945799999999815, 0.00014931900000000192, 0.00014988900000000027, 0.00014965200000000012, 0.00014963900000000002, 0.00014951400000000337, 0.0001499299999999995, 0.00014973600000000448, 0.00014925000000000355, 0.00015004100000000353, 0.0001495550000000026, 0.0001496529999999996, 0.00014947199999999772, 0.0001492770000000032, 0.00014949999999999686, 0.0001501530000000001, 0.00014995799999999865, 0.00014994499999999855, 0.0001495550000000026, 0.00014972199999999797, 0.00014930600000000183, 0.00014993099999999898, 0.0001499859999999978, 0.00014977800000000319, 0.00014923599999999704, 0.00015008300000000224, 0.00014943100000000542, 0.00014941599999999944, 0.00014975000000000405, 0.0001498750000000007, 0.0001494859999999973, 0.00014945799999999815, 0.000149833000000002]</msg>
<status status="PASS" starttime="20201030 11:53:48.027" endtime="20201030 11:53:48.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.016" endtime="20201030 11:53:48.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:48.044" endtime="20201030 11:53:48.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.038" endtime="20201030 11:53:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.036" endtime="20201030 11:53:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.542" endtime="20201030 11:53:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.541" endtime="20201030 11:53:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.131" endtime="20201030 11:53:48.070"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:54.993" endtime="20201030 11:53:48.072" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:58.830" endtime="20201030 11:53:48.082"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.221" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:53:48.237" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:53:50.162" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:53:48.217" endtime="20201030 11:53:50.164"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:53:50.169" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:53:50.166" endtime="20201030 11:53:50.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.214" endtime="20201030 11:53:50.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:50.176" endtime="20201030 11:53:50.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.173" endtime="20201030 11:53:50.513"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.542" endtime="20201030 11:53:50.565"></status>
</kw>
<msg timestamp="20201030 11:53:50.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:50.539" endtime="20201030 11:53:50.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:50.572" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:50.568" endtime="20201030 11:53:50.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:50.579" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:50.575" endtime="20201030 11:53:50.581"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:50.533" endtime="20201030 11:53:50.583"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:50.527" endtime="20201030 11:53:50.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.525" endtime="20201030 11:53:50.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:50.593" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:50.592" endtime="20201030 11:53:50.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.587" endtime="20201030 11:53:50.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.523" endtime="20201030 11:53:50.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.521" endtime="20201030 11:53:50.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.597" endtime="20201030 11:53:50.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.518" endtime="20201030 11:53:50.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.604" endtime="20201030 11:53:50.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.514" endtime="20201030 11:53:50.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.211" endtime="20201030 11:53:50.610"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:50.631" endtime="20201030 11:53:50.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.627" endtime="20201030 11:53:50.654"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.688" endtime="20201030 11:53:50.710"></status>
</kw>
<msg timestamp="20201030 11:53:50.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:50.684" endtime="20201030 11:53:50.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:50.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:50.713" endtime="20201030 11:53:50.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:50.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:50.719" endtime="20201030 11:53:50.724"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:50.677" endtime="20201030 11:53:50.726"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:50.671" endtime="20201030 11:53:50.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.668" endtime="20201030 11:53:50.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:50.736" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:50.735" endtime="20201030 11:53:50.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.730" endtime="20201030 11:53:50.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.666" endtime="20201030 11:53:50.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.665" endtime="20201030 11:53:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.740" endtime="20201030 11:53:50.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.661" endtime="20201030 11:53:50.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.656" endtime="20201030 11:53:50.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.624" endtime="20201030 11:53:50.747"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:50.771" endtime="20201030 11:53:56.905"></status>
</kw>
<msg timestamp="20201030 11:53:56.906" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:50.768" endtime="20201030 11:53:56.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:56.908" endtime="20201030 11:53:56.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:56.915" endtime="20201030 11:53:56.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.761" endtime="20201030 11:53:56.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.753" endtime="20201030 11:53:56.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:56.927" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 11:53:56.923" endtime="20201030 11:53:56.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.938" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:56.936" endtime="20201030 11:53:56.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.942" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:56.940" endtime="20201030 11:53:56.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.929" endtime="20201030 11:53:56.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.954" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:56.952" endtime="20201030 11:53:56.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.959" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:56.956" endtime="20201030 11:53:56.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.946" endtime="20201030 11:53:56.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.970" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:56.968" endtime="20201030 11:53:56.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:56.975" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:53:56.973" endtime="20201030 11:53:56.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.962" endtime="20201030 11:53:56.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:56.994" endtime="20201030 11:53:57.353"></status>
</kw>
<msg timestamp="20201030 11:53:57.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.231445194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.231445667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:53:56.990" endtime="20201030 11:53:57.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:57.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.231445194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.231445667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:53:57.362" endtime="20201030 11:53:57.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:57.380" endtime="20201030 11:53:57.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.983" endtime="20201030 11:53:57.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.978" endtime="20201030 11:53:57.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:57.397" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10019606900000003}, {'diff': 0.10020011099999998}, {'diff': 0.10019316600000006}, {'diff': 0.10020212500000003}, {'diff': 0.10020568000000007}, {'diff': 0.10020966600000003}, ...</msg>
<status status="PASS" starttime="20201030 11:53:57.388" endtime="20201030 11:53:57.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:57.407" level="INFO">${RESULT} = {'diff': [0, 0.10019606900000003, 0.10020011099999998, 0.10019316600000006, 0.10020212500000003, 0.10020568000000007, 0.10020966600000003, 0.10021098699999997, 0.10021034699999998, 0.10021009700000016...</msg>
<status status="PASS" starttime="20201030 11:53:57.399" endtime="20201030 11:53:57.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:57.417" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:57.415" endtime="20201030 11:53:57.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:57.423" level="INFO">VALUE: [0, 0.10019606900000003, 0.10020011099999998, 0.10019316600000006, 0.10020212500000003, 0.10020568000000007, 0.10020966600000003, 0.10021098699999997, 0.10021034699999998, 0.10021009700000016, 0.10020695800000001, 0.10020920899999997, 0.10020263899999993, 0.10020969400000013, 0.10020741600000016, 0.10020904199999991, 0.10020430599999997, 0.10020229199999986, 0.10020269400000026, 0.10020823600000028, 0.1002031109999999, 0.10018862499999992, 0.10020881900000012, 0.1001967640000001, 0.10019473599999973, 0.10020750000000023, 0.10020666700000014, 0.10019077799999998, 0.10020386099999978, 0.10019990300000003, 0.10020486099999992, 0.10021126400000036, 0.10020136099999988, 0.1001941249999998, 0.100200611, 0.10019798700000004, 0.10019475, 0.10021327800000002, 0.10019458299999995, 0.10019247199999981, 0.10020995799999977, 0.10021030500000006, 0.10021208399999981, 0.10021234700000026, 0.10021330600000056, 0.10019008299999932, 0.10018788899999986, 0.10020147200000018, 0.1001945700000002, 0.10018815300000039, 0.10020056900000007]</msg>
<status status="PASS" starttime="20201030 11:53:57.420" endtime="20201030 11:53:57.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.409" endtime="20201030 11:53:57.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:50.749" endtime="20201030 11:53:57.428"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:50.618" endtime="20201030 11:53:57.430" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:57.448" endtime="20201030 11:53:57.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.444" endtime="20201030 11:53:57.472"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:57.505" endtime="20201030 11:53:57.528"></status>
</kw>
<msg timestamp="20201030 11:53:57.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:57.501" endtime="20201030 11:53:57.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:57.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:57.532" endtime="20201030 11:53:57.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:57.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:57.538" endtime="20201030 11:53:57.543"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:57.494" endtime="20201030 11:53:57.545"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:57.488" endtime="20201030 11:53:57.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.485" endtime="20201030 11:53:57.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:57.555" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:57.554" endtime="20201030 11:53:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.549" endtime="20201030 11:53:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.484" endtime="20201030 11:53:57.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.482" endtime="20201030 11:53:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:57.559" endtime="20201030 11:53:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.478" endtime="20201030 11:53:57.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.473" endtime="20201030 11:53:57.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.441" endtime="20201030 11:53:57.566"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:57.588" endtime="20201030 11:54:03.721"></status>
</kw>
<msg timestamp="20201030 11:54:03.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:57.584" endtime="20201030 11:54:03.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:03.724" endtime="20201030 11:54:03.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:03.730" endtime="20201030 11:54:03.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.577" endtime="20201030 11:54:03.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.572" endtime="20201030 11:54:03.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:03.743" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 11:54:03.739" endtime="20201030 11:54:03.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.754" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:03.751" endtime="20201030 11:54:03.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.758" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:54:03.756" endtime="20201030 11:54:03.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:03.745" endtime="20201030 11:54:03.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.770" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:03.768" endtime="20201030 11:54:03.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.775" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:54:03.772" endtime="20201030 11:54:03.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:03.762" endtime="20201030 11:54:03.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.786" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:54:03.784" endtime="20201030 11:54:03.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:03.791" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:54:03.789" endtime="20201030 11:54:03.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:03.778" endtime="20201030 11:54:03.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:03.810" endtime="20201030 11:54:04.168"></status>
</kw>
<msg timestamp="20201030 11:54:04.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130541333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230790889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:03.806" endtime="20201030 11:54:04.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:04.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130541333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230790889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:04.177" endtime="20201030 11:54:04.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:04.195" endtime="20201030 11:54:04.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:03.799" endtime="20201030 11:54:04.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:03.794" endtime="20201030 11:54:04.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:54:04.212" level="INFO">${FILTERED} = [{'diff': 0.10024955599999999}, {'diff': 0.10019098600000001}, {'diff': 0.10019538900000002}, {'diff': 0.10018852700000003}, {'diff': 0.10018980499999997}, {'diff': 0.10018525}, {'diff': 0.10018890199...</msg>
<status status="PASS" starttime="20201030 11:54:04.204" endtime="20201030 11:54:04.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:04.221" level="INFO">${RESULT} = {'diff': [0.10024955599999999, 0.10019098600000001, 0.10019538900000002, 0.10018852700000003, 0.10018980499999997, 0.10018525, 0.10018890199999997, 0.10018850000000001, 0.10018477800000003, 0.10019366...</msg>
<status status="PASS" starttime="20201030 11:54:04.214" endtime="20201030 11:54:04.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:04.231" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:54:04.229" endtime="20201030 11:54:04.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:04.236" level="INFO">VALUE: [0.10024955599999999, 0.10019098600000001, 0.10019538900000002, 0.10018852700000003, 0.10018980499999997, 0.10018525, 0.10018890199999997, 0.10018850000000001, 0.10018477800000003, 0.10019366600000001, 0.10019256899999984, 0.100191959, 0.100197694, 0.10018375000000002, 0.10018248600000002, 0.1002092360000002, 0.100191806, 0.10020480600000004, 0.10020024999999988, 0.10020176399999992, 0.10019501400000008, 0.10019816700000028, 0.10019326400000006, 0.10020311199999998, 0.10019384699999989, 0.10018490300000016, 0.10018723600000001, 0.10018498599999992, 0.10018093000000006, 0.10018740199999998, 0.10018023599999992, 0.10017095800000009, 0.1001735410000002, 0.10018386200000018, 0.10018783299999967, 0.10018808400000001, 0.1001966529999998, 0.10018516700000024, 0.10018305500000002, 0.10018484699999952, 0.10018125000000033, 0.10018413899999956, 0.10017190300000056, 0.10017425000000024, 0.1001830409999993, 0.10018538899999996, 0.10021312500000068, 0.10019169399999939, 0.10019040300000004, 0.10020074999999995, 0.10019456900000012]</msg>
<status status="PASS" starttime="20201030 11:54:04.233" endtime="20201030 11:54:04.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.223" endtime="20201030 11:54:04.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:57.567" endtime="20201030 11:54:04.241"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:57.435" endtime="20201030 11:54:04.243" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:04.260" endtime="20201030 11:54:04.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.256" endtime="20201030 11:54:04.284"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:04.318" endtime="20201030 11:54:04.340"></status>
</kw>
<msg timestamp="20201030 11:54:04.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:04.315" endtime="20201030 11:54:04.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:04.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:04.344" endtime="20201030 11:54:04.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:04.354" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:54:04.350" endtime="20201030 11:54:04.355"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:04.308" endtime="20201030 11:54:04.357"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:04.301" endtime="20201030 11:54:04.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.297" endtime="20201030 11:54:04.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:54:04.367" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:54:04.366" endtime="20201030 11:54:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.361" endtime="20201030 11:54:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.295" endtime="20201030 11:54:04.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.294" endtime="20201030 11:54:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:04.371" endtime="20201030 11:54:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.290" endtime="20201030 11:54:04.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.285" endtime="20201030 11:54:04.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.254" endtime="20201030 11:54:04.378"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:04.400" endtime="20201030 11:54:10.533"></status>
</kw>
<msg timestamp="20201030 11:54:10.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:04.397" endtime="20201030 11:54:10.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.541" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:10.537" endtime="20201030 11:54:10.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:10.543" endtime="20201030 11:54:10.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.389" endtime="20201030 11:54:10.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.384" endtime="20201030 11:54:10.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:10.556" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 11:54:10.552" endtime="20201030 11:54:10.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.566" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:10.564" endtime="20201030 11:54:10.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.571" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:54:10.569" endtime="20201030 11:54:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:10.558" endtime="20201030 11:54:10.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.583" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:10.581" endtime="20201030 11:54:10.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.587" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:54:10.585" endtime="20201030 11:54:10.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:10.575" endtime="20201030 11:54:10.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.601" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:54:10.597" endtime="20201030 11:54:10.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:10.606" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:54:10.603" endtime="20201030 11:54:10.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:10.591" endtime="20201030 11:54:10.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:10.624" endtime="20201030 11:54:10.978"></status>
</kw>
<msg timestamp="20201030 11:54:10.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131117597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231655569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:10.621" endtime="20201030 11:54:10.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:11.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131117597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231655569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:10.987" endtime="20201030 11:54:11.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:11.005" endtime="20201030 11:54:11.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:10.614" endtime="20201030 11:54:11.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:10.609" endtime="20201030 11:54:11.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:54:11.022" level="INFO">${FILTERED} = [{'diff': 0.100537972}, {'diff': 0.09990020799999999}, {'diff': 0.10019520899999995}, {'diff': 0.10019255499999996}, {'diff': 0.10019958299999998}, {'diff': 0.10019397200000002}, {'diff': 0.1001926249...</msg>
<status status="PASS" starttime="20201030 11:54:11.014" endtime="20201030 11:54:11.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:11.031" level="INFO">${RESULT} = {'diff': [0.100537972, 0.09990020799999999, 0.10019520899999995, 0.10019255499999996, 0.10019958299999998, 0.10019397200000002, 0.10019262499999992, 0.1001902360000001, 0.10019611100000003, 0.10017673...</msg>
<status status="PASS" starttime="20201030 11:54:11.024" endtime="20201030 11:54:11.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:11.041" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:54:11.039" endtime="20201030 11:54:11.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:11.046" level="INFO">VALUE: [0.100537972, 0.09990020799999999, 0.10019520899999995, 0.10019255499999996, 0.10019958299999998, 0.10019397200000002, 0.10019262499999992, 0.1001902360000001, 0.10019611100000003, 0.10017673699999996, 0.10017801399999993, 0.10018252799999994, 0.10017811099999996, 0.10018086100000012, 0.10017383299999993, 0.1001917779999999, 0.10019124999999995, 0.10019091699999993, 0.10019472200000012, 0.10019651399999985, 0.10019184700000006, 0.10019718099999997, 0.1001992920000001, 0.10019066700000012, 0.1001831799999997, 0.10019366600000001, 0.10019051400000034, 0.10018836100000028, 0.10018492999999973, 0.1001861660000003, 0.10018948599999966, 0.10018991700000024, 0.10018106900000001, 0.10018876399999987, 0.10018229099999987, 0.10018648700000021, 0.10018988900000014, 0.10019336100000009, 0.10017968100000019, 0.10018230599999978, 0.10019050000000007, 0.10018266699999945, 0.1001924169999997, 0.1001917360000002, 0.10019249999999946, 0.10018259799999996, 0.10017834699999995, 0.1001716530000003, 0.10018073600000044, 0.10018049999999956, 0.10018745799999973]</msg>
<status status="PASS" starttime="20201030 11:54:11.044" endtime="20201030 11:54:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.033" endtime="20201030 11:54:11.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:04.379" endtime="20201030 11:54:11.051"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 11:54:04.248" endtime="20201030 11:54:11.053" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:11.072" endtime="20201030 11:54:11.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.067" endtime="20201030 11:54:11.095"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:11.128" endtime="20201030 11:54:11.150"></status>
</kw>
<msg timestamp="20201030 11:54:11.152" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:11.125" endtime="20201030 11:54:11.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:11.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:11.154" endtime="20201030 11:54:11.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:11.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:54:11.160" endtime="20201030 11:54:11.165"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:11.118" endtime="20201030 11:54:11.167"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:11.112" endtime="20201030 11:54:11.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.109" endtime="20201030 11:54:11.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:54:11.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:54:11.176" endtime="20201030 11:54:11.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.171" endtime="20201030 11:54:11.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.107" endtime="20201030 11:54:11.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.105" endtime="20201030 11:54:11.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:11.181" endtime="20201030 11:54:11.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.101" endtime="20201030 11:54:11.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.097" endtime="20201030 11:54:11.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:11.064" endtime="20201030 11:54:11.188"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:11.210" endtime="20201030 11:54:26.233"></status>
</kw>
<msg timestamp="20201030 11:54:26.234" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:11.206" endtime="20201030 11:54:26.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:26.240" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:26.236" endtime="20201030 11:54:26.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:26.247" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:54:26.243" endtime="20201030 11:54:26.248"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:11.199" endtime="20201030 11:54:26.250"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:11.194" endtime="20201030 11:54:26.251"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:11.190" endtime="20201030 11:54:26.253"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:54:11.058" endtime="20201030 11:54:26.256" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:26.276" endtime="20201030 11:54:26.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.272" endtime="20201030 11:54:26.299"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:26.333" endtime="20201030 11:54:27.341"></status>
</kw>
<msg timestamp="20201030 11:54:27.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:26.330" endtime="20201030 11:54:27.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:27.349" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:27.344" endtime="20201030 11:54:27.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:27.352" endtime="20201030 11:54:27.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.322" endtime="20201030 11:54:27.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.315" endtime="20201030 11:54:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.313" endtime="20201030 11:54:27.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:27.361" endtime="20201030 11:54:27.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.311" endtime="20201030 11:54:27.365"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:27.388" endtime="20201030 11:54:28.395"></status>
</kw>
<msg timestamp="20201030 11:54:28.396" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:27.385" endtime="20201030 11:54:28.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:28.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:28.398" endtime="20201030 11:54:28.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:28.405" endtime="20201030 11:54:28.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:27.378" endtime="20201030 11:54:28.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:27.371" endtime="20201030 11:54:28.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:27.368" endtime="20201030 11:54:28.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:28.415" endtime="20201030 11:54:28.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:27.366" endtime="20201030 11:54:28.419"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:28.441" endtime="20201030 11:54:29.450"></status>
</kw>
<msg timestamp="20201030 11:54:29.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:28.438" endtime="20201030 11:54:29.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:29.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:29.453" endtime="20201030 11:54:29.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:29.459" endtime="20201030 11:54:29.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:28.430" endtime="20201030 11:54:29.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:28.424" endtime="20201030 11:54:29.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:28.421" endtime="20201030 11:54:29.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:29.469" endtime="20201030 11:54:29.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:28.420" endtime="20201030 11:54:29.473"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:29.495" endtime="20201030 11:54:30.501"></status>
</kw>
<msg timestamp="20201030 11:54:30.502" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:29.492" endtime="20201030 11:54:30.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:30.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:30.504" endtime="20201030 11:54:30.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:30.511" endtime="20201030 11:54:30.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:29.484" endtime="20201030 11:54:30.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:29.478" endtime="20201030 11:54:30.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:29.475" endtime="20201030 11:54:30.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:30.521" endtime="20201030 11:54:30.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:29.474" endtime="20201030 11:54:30.524"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:30.546" endtime="20201030 11:54:31.553"></status>
</kw>
<msg timestamp="20201030 11:54:31.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:30.543" endtime="20201030 11:54:31.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:31.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:31.556" endtime="20201030 11:54:31.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:31.563" endtime="20201030 11:54:31.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:30.536" endtime="20201030 11:54:31.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:30.530" endtime="20201030 11:54:31.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:30.527" endtime="20201030 11:54:31.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:31.572" endtime="20201030 11:54:31.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:30.525" endtime="20201030 11:54:31.576"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:31.599" endtime="20201030 11:54:32.605"></status>
</kw>
<msg timestamp="20201030 11:54:32.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:31.596" endtime="20201030 11:54:32.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:32.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:32.609" endtime="20201030 11:54:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:32.615" endtime="20201030 11:54:32.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:31.588" endtime="20201030 11:54:32.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:31.581" endtime="20201030 11:54:32.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:31.579" endtime="20201030 11:54:32.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:32.624" endtime="20201030 11:54:32.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:31.577" endtime="20201030 11:54:32.628"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:32.650" endtime="20201030 11:54:33.657"></status>
</kw>
<msg timestamp="20201030 11:54:33.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:32.647" endtime="20201030 11:54:33.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:33.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:33.660" endtime="20201030 11:54:33.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:33.667" endtime="20201030 11:54:33.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:32.640" endtime="20201030 11:54:33.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:32.633" endtime="20201030 11:54:33.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:32.631" endtime="20201030 11:54:33.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:33.678" endtime="20201030 11:54:33.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:32.629" endtime="20201030 11:54:33.682"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:33.704" endtime="20201030 11:54:34.710"></status>
</kw>
<msg timestamp="20201030 11:54:34.712" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:33.701" endtime="20201030 11:54:34.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:34.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:34.714" endtime="20201030 11:54:34.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:34.720" endtime="20201030 11:54:34.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:33.694" endtime="20201030 11:54:34.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:33.687" endtime="20201030 11:54:34.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:33.685" endtime="20201030 11:54:34.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:34.730" endtime="20201030 11:54:34.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:33.683" endtime="20201030 11:54:34.734"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:34.757" endtime="20201030 11:54:35.763"></status>
</kw>
<msg timestamp="20201030 11:54:35.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:34.753" endtime="20201030 11:54:35.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:35.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:35.767" endtime="20201030 11:54:35.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:35.773" endtime="20201030 11:54:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:34.746" endtime="20201030 11:54:35.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:34.740" endtime="20201030 11:54:35.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:34.737" endtime="20201030 11:54:35.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:35.783" endtime="20201030 11:54:35.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:34.735" endtime="20201030 11:54:35.786"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:35.808" endtime="20201030 11:54:36.815"></status>
</kw>
<msg timestamp="20201030 11:54:36.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:35.805" endtime="20201030 11:54:36.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:36.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:36.818" endtime="20201030 11:54:36.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:36.825" endtime="20201030 11:54:36.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:35.798" endtime="20201030 11:54:36.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:35.792" endtime="20201030 11:54:36.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:35.789" endtime="20201030 11:54:36.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:36.834" endtime="20201030 11:54:36.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:35.787" endtime="20201030 11:54:36.838"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:36.860" endtime="20201030 11:54:37.867"></status>
</kw>
<msg timestamp="20201030 11:54:37.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:36.857" endtime="20201030 11:54:37.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:37.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:37.870" endtime="20201030 11:54:37.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:37.877" endtime="20201030 11:54:37.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:36.850" endtime="20201030 11:54:37.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:36.843" endtime="20201030 11:54:37.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:36.841" endtime="20201030 11:54:37.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:37.887" endtime="20201030 11:54:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:36.839" endtime="20201030 11:54:37.891"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:37.914" endtime="20201030 11:54:38.921"></status>
</kw>
<msg timestamp="20201030 11:54:38.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:37.911" endtime="20201030 11:54:38.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:38.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:38.924" endtime="20201030 11:54:38.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:38.931" endtime="20201030 11:54:38.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:37.904" endtime="20201030 11:54:38.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:37.896" endtime="20201030 11:54:38.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:37.893" endtime="20201030 11:54:38.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:38.940" endtime="20201030 11:54:38.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:37.892" endtime="20201030 11:54:38.944"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:38.966" endtime="20201030 11:54:39.972"></status>
</kw>
<msg timestamp="20201030 11:54:39.973" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:38.962" endtime="20201030 11:54:39.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:39.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:39.975" endtime="20201030 11:54:39.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:39.982" endtime="20201030 11:54:39.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:38.955" endtime="20201030 11:54:39.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:38.949" endtime="20201030 11:54:39.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:38.946" endtime="20201030 11:54:39.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:39.991" endtime="20201030 11:54:39.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:38.944" endtime="20201030 11:54:39.995"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:40.017" endtime="20201030 11:54:41.024"></status>
</kw>
<msg timestamp="20201030 11:54:41.025" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:40.014" endtime="20201030 11:54:41.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:41.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:41.027" endtime="20201030 11:54:41.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:41.035" endtime="20201030 11:54:41.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:40.007" endtime="20201030 11:54:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:40.000" endtime="20201030 11:54:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:39.997" endtime="20201030 11:54:41.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:41.044" endtime="20201030 11:54:41.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:39.996" endtime="20201030 11:54:41.047"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:41.070" endtime="20201030 11:54:42.076"></status>
</kw>
<msg timestamp="20201030 11:54:42.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:41.066" endtime="20201030 11:54:42.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:42.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:42.080" endtime="20201030 11:54:42.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:42.086" endtime="20201030 11:54:42.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:41.059" endtime="20201030 11:54:42.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:41.053" endtime="20201030 11:54:42.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:41.050" endtime="20201030 11:54:42.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:42.095" endtime="20201030 11:54:42.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:41.048" endtime="20201030 11:54:42.099"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:42.128" endtime="20201030 11:54:43.134"></status>
</kw>
<msg timestamp="20201030 11:54:43.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:42.118" endtime="20201030 11:54:43.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:43.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:43.137" endtime="20201030 11:54:43.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:43.144" endtime="20201030 11:54:43.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:42.111" endtime="20201030 11:54:43.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:42.105" endtime="20201030 11:54:43.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:42.102" endtime="20201030 11:54:43.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:43.153" endtime="20201030 11:54:43.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:42.100" endtime="20201030 11:54:43.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:26.309" endtime="20201030 11:54:43.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:54:43.163" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:54:43.159" endtime="20201030 11:54:43.164"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:26.305" endtime="20201030 11:54:43.165"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:26.301" endtime="20201030 11:54:43.167"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:26.267" endtime="20201030 11:54:43.168"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:54:26.261" endtime="20201030 11:54:43.170" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:43.198" endtime="20201030 11:54:43.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.195" endtime="20201030 11:54:43.222"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:43.255" endtime="20201030 11:54:44.262"></status>
</kw>
<msg timestamp="20201030 11:54:44.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:43.251" endtime="20201030 11:54:44.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:44.270" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:44.266" endtime="20201030 11:54:44.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:44.272" endtime="20201030 11:54:44.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.244" endtime="20201030 11:54:44.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.238" endtime="20201030 11:54:44.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.235" endtime="20201030 11:54:44.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:44.281" endtime="20201030 11:54:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.233" endtime="20201030 11:54:44.285"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:44.307" endtime="20201030 11:54:45.314"></status>
</kw>
<msg timestamp="20201030 11:54:45.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:44.304" endtime="20201030 11:54:45.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:45.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:45.317" endtime="20201030 11:54:45.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:45.324" endtime="20201030 11:54:45.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:44.297" endtime="20201030 11:54:45.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:44.290" endtime="20201030 11:54:45.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:44.288" endtime="20201030 11:54:45.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:45.333" endtime="20201030 11:54:45.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:44.286" endtime="20201030 11:54:45.336"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:45.361" endtime="20201030 11:54:46.367"></status>
</kw>
<msg timestamp="20201030 11:54:46.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:45.357" endtime="20201030 11:54:46.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:46.375" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:46.371" endtime="20201030 11:54:46.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:46.377" endtime="20201030 11:54:46.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:45.350" endtime="20201030 11:54:46.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:45.342" endtime="20201030 11:54:46.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:45.339" endtime="20201030 11:54:46.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:46.387" endtime="20201030 11:54:46.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:45.337" endtime="20201030 11:54:46.391"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:46.413" endtime="20201030 11:54:47.419"></status>
</kw>
<msg timestamp="20201030 11:54:47.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:46.409" endtime="20201030 11:54:47.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:47.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:47.422" endtime="20201030 11:54:47.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:47.429" endtime="20201030 11:54:47.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:46.402" endtime="20201030 11:54:47.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:46.396" endtime="20201030 11:54:47.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:46.393" endtime="20201030 11:54:47.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:47.438" endtime="20201030 11:54:47.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:46.391" endtime="20201030 11:54:47.442"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:47.464" endtime="20201030 11:54:48.470"></status>
</kw>
<msg timestamp="20201030 11:54:48.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:47.461" endtime="20201030 11:54:48.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:48.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:48.473" endtime="20201030 11:54:48.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:48.480" endtime="20201030 11:54:48.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:47.453" endtime="20201030 11:54:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:47.447" endtime="20201030 11:54:48.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:47.444" endtime="20201030 11:54:48.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:48.489" endtime="20201030 11:54:48.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:47.443" endtime="20201030 11:54:48.493"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:48.516" endtime="20201030 11:54:49.522"></status>
</kw>
<msg timestamp="20201030 11:54:49.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:48.513" endtime="20201030 11:54:49.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:49.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:49.526" endtime="20201030 11:54:49.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:49.532" endtime="20201030 11:54:49.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:48.505" endtime="20201030 11:54:49.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:48.498" endtime="20201030 11:54:49.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:48.496" endtime="20201030 11:54:49.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:49.541" endtime="20201030 11:54:49.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:48.494" endtime="20201030 11:54:49.545"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:49.567" endtime="20201030 11:54:50.575"></status>
</kw>
<msg timestamp="20201030 11:54:50.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:49.564" endtime="20201030 11:54:50.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:50.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:50.579" endtime="20201030 11:54:50.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:50.585" endtime="20201030 11:54:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:49.557" endtime="20201030 11:54:50.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:49.550" endtime="20201030 11:54:50.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:49.548" endtime="20201030 11:54:50.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:50.595" endtime="20201030 11:54:50.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:49.546" endtime="20201030 11:54:50.598"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:50.621" endtime="20201030 11:54:51.627"></status>
</kw>
<msg timestamp="20201030 11:54:51.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:50.617" endtime="20201030 11:54:51.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:51.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:51.630" endtime="20201030 11:54:51.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:51.637" endtime="20201030 11:54:51.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:50.610" endtime="20201030 11:54:51.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:50.604" endtime="20201030 11:54:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:50.601" endtime="20201030 11:54:51.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:51.646" endtime="20201030 11:54:51.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:50.599" endtime="20201030 11:54:51.650"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:51.673" endtime="20201030 11:54:52.679"></status>
</kw>
<msg timestamp="20201030 11:54:52.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:51.670" endtime="20201030 11:54:52.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:52.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:52.683" endtime="20201030 11:54:52.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:52.689" endtime="20201030 11:54:52.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:51.662" endtime="20201030 11:54:52.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:51.656" endtime="20201030 11:54:52.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:51.652" endtime="20201030 11:54:52.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:52.698" endtime="20201030 11:54:52.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:51.651" endtime="20201030 11:54:52.702"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:52.724" endtime="20201030 11:54:53.730"></status>
</kw>
<msg timestamp="20201030 11:54:53.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:52.721" endtime="20201030 11:54:53.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:53.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:53.734" endtime="20201030 11:54:53.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:53.740" endtime="20201030 11:54:53.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:52.714" endtime="20201030 11:54:53.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:52.707" endtime="20201030 11:54:53.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:52.705" endtime="20201030 11:54:53.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:53.749" endtime="20201030 11:54:53.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:52.703" endtime="20201030 11:54:53.753"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:53.775" endtime="20201030 11:54:54.782"></status>
</kw>
<msg timestamp="20201030 11:54:54.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:53.772" endtime="20201030 11:54:54.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:54.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:54.785" endtime="20201030 11:54:54.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:54.792" endtime="20201030 11:54:54.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:53.765" endtime="20201030 11:54:54.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:53.758" endtime="20201030 11:54:54.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:53.756" endtime="20201030 11:54:54.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:54.802" endtime="20201030 11:54:54.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:53.754" endtime="20201030 11:54:54.806"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:54.830" endtime="20201030 11:54:55.836"></status>
</kw>
<msg timestamp="20201030 11:54:55.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:54.827" endtime="20201030 11:54:55.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:55.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:55.840" endtime="20201030 11:54:55.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:55.846" endtime="20201030 11:54:55.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:54.819" endtime="20201030 11:54:55.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:54.811" endtime="20201030 11:54:55.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:54.808" endtime="20201030 11:54:55.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:55.856" endtime="20201030 11:54:55.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:54.806" endtime="20201030 11:54:55.860"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:55.882" endtime="20201030 11:54:56.888"></status>
</kw>
<msg timestamp="20201030 11:54:56.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:55.879" endtime="20201030 11:54:56.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:56.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:56.892" endtime="20201030 11:54:56.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:56.898" endtime="20201030 11:54:56.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:55.871" endtime="20201030 11:54:56.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:55.865" endtime="20201030 11:54:56.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:55.862" endtime="20201030 11:54:56.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:56.907" endtime="20201030 11:54:56.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:55.860" endtime="20201030 11:54:56.911"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:56.933" endtime="20201030 11:54:57.940"></status>
</kw>
<msg timestamp="20201030 11:54:57.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:56.930" endtime="20201030 11:54:57.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:57.947" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:57.943" endtime="20201030 11:54:57.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.950" endtime="20201030 11:54:57.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:56.923" endtime="20201030 11:54:57.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:56.916" endtime="20201030 11:54:57.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:56.914" endtime="20201030 11:54:57.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.960" endtime="20201030 11:54:57.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:56.912" endtime="20201030 11:54:57.963"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.985" endtime="20201030 11:54:58.992"></status>
</kw>
<msg timestamp="20201030 11:54:58.993" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:57.982" endtime="20201030 11:54:58.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:58.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:58.995" endtime="20201030 11:54:59.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:59.002" endtime="20201030 11:54:59.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.975" endtime="20201030 11:54:59.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.969" endtime="20201030 11:54:59.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.966" endtime="20201030 11:54:59.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:59.011" endtime="20201030 11:54:59.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.964" endtime="20201030 11:54:59.015"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:59.039" endtime="20201030 11:55:00.045"></status>
</kw>
<msg timestamp="20201030 11:55:00.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:54:59.034" endtime="20201030 11:55:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:55:00.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:55:00.049" endtime="20201030 11:55:00.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:55:00.055" endtime="20201030 11:55:00.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:59.027" endtime="20201030 11:55:00.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:59.020" endtime="20201030 11:55:00.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:59.017" endtime="20201030 11:55:00.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:55:00.065" endtime="20201030 11:55:00.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:59.016" endtime="20201030 11:55:00.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:43.232" endtime="20201030 11:55:00.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:55:00.074" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:55:00.070" endtime="20201030 11:55:00.075"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:43.228" endtime="20201030 11:55:00.077"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:43.223" endtime="20201030 11:55:00.078"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:43.192" endtime="20201030 11:55:00.079"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:54:43.186" endtime="20201030 11:55:00.081" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:53:48.105" endtime="20201030 11:55:00.099"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="FAIL" starttime="20201030 11:50:56.513" endtime="20201030 11:55:00.179"></status>
</suite>
<statistics>
<total>
<stat pass="15" fail="3">Critical Tests</stat>
<stat pass="15" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="15" fail="3">APP_tests_xtimer_benchmarks</stat>
<stat pass="15" fail="3">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="15" fail="3" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="3" fail="3" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
